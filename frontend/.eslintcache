[{"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/index.js":"1","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/store.js":"2","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reportWebVitals.js":"3","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/App.js":"4","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/userReducers.js":"5","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/cartReducers.js":"6","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/productReducers.js":"7","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/orderReducers.js":"8","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/LoginScreen.js":"9","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductScreen.js":"10","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CartScreen.js":"11","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/HomeScreen.js":"12","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PlaceOrderScreen.js":"13","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserListScreen.js":"14","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProfileScreen.js":"15","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderScreen.js":"16","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ShippingScreen.js":"17","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PaymentScreen.js":"18","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserEditScreen.js":"19","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderListScreen.js":"20","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductListScreen.js":"21","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductEditScreen.js":"22","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Footer.js":"23","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/RegisterScreen.js":"24","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Header.js":"25","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Loader.js":"26","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Message.js":"27","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/FormContainer.js":"28","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Product.js":"29","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Paginate.js":"30","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Rating.js":"31","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/CheckoutSteps.js":"32","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ProductCarousel.js":"33","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/SearchBox.js":"34","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/cartConstants.js":"35","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/userConstants.js":"36","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/productConstants.js":"37","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/orderConstants.js":"38","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/orderActions.js":"39","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/productActions.js":"40","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/userActions.js":"41","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/cartActions.js":"42","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminAppbar.js":"43","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminDrawerMenu.js":"44","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserList.js":"45","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Admin.js":"46","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Dashboard.js":"47","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTable.js":"48","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableHead.js":"49","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableBody.js":"50","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserAdminDashboard.js":"51","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/CreateUser.js":"52","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/EditUser.js":"53","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/driver/Dashboard.js":"54","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductDashboard.js":"55","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/CreateProduct.js":"56","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductList.js":"57","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/EditProduct.js":"58","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Setting.js":"59","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Profile.js":"60","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrdersSummary.js":"61","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDashboard.js":"62","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderList.js":"63","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderCard.js":"64","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDetails.js":"65","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/AsignDriver.js":"66","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/orderRequests.js":"67","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverDashboard.js":"68","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/reservations/ReservationDashboard.js":"69","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ConfirmationBox.js":"70","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderItem.js":"71","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CustomerDetails.js":"72","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/SavedPlaces.js":"73","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/addressRequests.js":"74","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddressCard.js":"75","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddNewPlaceForm.js":"76","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverList.js":"77","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/driverRequests.js":"78","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CreateReservation.js":"79","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ReservationSteps.js":"80","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/reservationReducer.js":"81","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/reservationConstants.js":"82","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PreOrder.js":"83","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/reservationActions.js":"84","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReserveConfirm.js":"85","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/reservationRequests.js":"86","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationListScreen.js":"87","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationScreen.js":"88"},{"size":595,"mtime":1639886829888,"results":"89","hashOfConfig":"90"},{"size":2823,"mtime":1640796173442,"results":"91","hashOfConfig":"90"},{"size":362,"mtime":1638782074047,"results":"92","hashOfConfig":"90"},{"size":3427,"mtime":1640722521500,"results":"93","hashOfConfig":"90"},{"size":5125,"mtime":1640078373189,"results":"94","hashOfConfig":"90"},{"size":1486,"mtime":1638782074045,"results":"95","hashOfConfig":"90"},{"size":4200,"mtime":1640667424255,"results":"96","hashOfConfig":"90"},{"size":4770,"mtime":1639886829889,"results":"97","hashOfConfig":"90"},{"size":2988,"mtime":1640201508345,"results":"98","hashOfConfig":"90"},{"size":10978,"mtime":1640104119089,"results":"99","hashOfConfig":"90"},{"size":4793,"mtime":1640105145964,"results":"100","hashOfConfig":"90"},{"size":2295,"mtime":1639886829891,"results":"101","hashOfConfig":"90"},{"size":7600,"mtime":1639886829894,"results":"102","hashOfConfig":"90"},{"size":3511,"mtime":1638782074051,"results":"103","hashOfConfig":"90"},{"size":1462,"mtime":1640226940375,"results":"104","hashOfConfig":"90"},{"size":8912,"mtime":1640226746225,"results":"105","hashOfConfig":"90"},{"size":6024,"mtime":1640797385159,"results":"106","hashOfConfig":"90"},{"size":3121,"mtime":1640105377439,"results":"107","hashOfConfig":"90"},{"size":3912,"mtime":1638782074051,"results":"108","hashOfConfig":"90"},{"size":2960,"mtime":1640104616587,"results":"109","hashOfConfig":"90"},{"size":5007,"mtime":1638782074050,"results":"110","hashOfConfig":"90"},{"size":7916,"mtime":1638782074050,"results":"111","hashOfConfig":"90"},{"size":361,"mtime":1638782074040,"results":"112","hashOfConfig":"90"},{"size":5217,"mtime":1639886829895,"results":"113","hashOfConfig":"90"},{"size":3065,"mtime":1640721000160,"results":"114","hashOfConfig":"90"},{"size":458,"mtime":1638782074041,"results":"115","hashOfConfig":"90"},{"size":228,"mtime":1638782074041,"results":"116","hashOfConfig":"90"},{"size":378,"mtime":1638782074040,"results":"117","hashOfConfig":"90"},{"size":1008,"mtime":1638782074041,"results":"118","hashOfConfig":"90"},{"size":859,"mtime":1638782074041,"results":"119","hashOfConfig":"90"},{"size":1886,"mtime":1638782074042,"results":"120","hashOfConfig":"90"},{"size":1873,"mtime":1640106737406,"results":"121","hashOfConfig":"90"},{"size":1420,"mtime":1638782074041,"results":"122","hashOfConfig":"90"},{"size":984,"mtime":1638782074042,"results":"123","hashOfConfig":"90"},{"size":287,"mtime":1638782074043,"results":"124","hashOfConfig":"90"},{"size":1904,"mtime":1639886829886,"results":"125","hashOfConfig":"90"},{"size":1561,"mtime":1639886829886,"results":"126","hashOfConfig":"90"},{"size":1470,"mtime":1639886829885,"results":"127","hashOfConfig":"90"},{"size":6805,"mtime":1640796486459,"results":"128","hashOfConfig":"90"},{"size":5946,"mtime":1639886829858,"results":"129","hashOfConfig":"90"},{"size":8424,"mtime":1640103922754,"results":"130","hashOfConfig":"90"},{"size":1415,"mtime":1639886829856,"results":"131","hashOfConfig":"90"},{"size":1548,"mtime":1639886829860,"results":"132","hashOfConfig":"90"},{"size":4755,"mtime":1640117947842,"results":"133","hashOfConfig":"90"},{"size":3825,"mtime":1639886829883,"results":"134","hashOfConfig":"90"},{"size":3670,"mtime":1640117949160,"results":"135","hashOfConfig":"90"},{"size":126,"mtime":1639886829866,"results":"136","hashOfConfig":"90"},{"size":6047,"mtime":1639886829863,"results":"137","hashOfConfig":"90"},{"size":2298,"mtime":1639886829865,"results":"138","hashOfConfig":"90"},{"size":3233,"mtime":1640117510568,"results":"139","hashOfConfig":"90"},{"size":499,"mtime":1639886829882,"results":"140","hashOfConfig":"90"},{"size":4521,"mtime":1639886829881,"results":"141","hashOfConfig":"90"},{"size":5245,"mtime":1639886829881,"results":"142","hashOfConfig":"90"},{"size":3036,"mtime":1640226331865,"results":"143","hashOfConfig":"90"},{"size":603,"mtime":1639886829879,"results":"144","hashOfConfig":"90"},{"size":4365,"mtime":1641108883048,"results":"145","hashOfConfig":"90"},{"size":3180,"mtime":1639886829880,"results":"146","hashOfConfig":"90"},{"size":5676,"mtime":1641109783636,"results":"147","hashOfConfig":"90"},{"size":123,"mtime":1639886829869,"results":"148","hashOfConfig":"90"},{"size":124,"mtime":1639886829867,"results":"149","hashOfConfig":"90"},{"size":1554,"mtime":1639886829872,"results":"150","hashOfConfig":"90"},{"size":268,"mtime":1639886829870,"results":"151","hashOfConfig":"90"},{"size":1692,"mtime":1640077257476,"results":"152","hashOfConfig":"90"},{"size":1681,"mtime":1640050216222,"results":"153","hashOfConfig":"90"},{"size":5933,"mtime":1640077213685,"results":"154","hashOfConfig":"90"},{"size":3356,"mtime":1640797049982,"results":"155","hashOfConfig":"90"},{"size":2686,"mtime":1640607612910,"results":"156","hashOfConfig":"90"},{"size":168,"mtime":1640116829598,"results":"157","hashOfConfig":"90"},{"size":151,"mtime":1640045067211,"results":"158","hashOfConfig":"90"},{"size":1098,"mtime":1640046810308,"results":"159","hashOfConfig":"90"},{"size":1281,"mtime":1640075990518,"results":"160","hashOfConfig":"90"},{"size":2701,"mtime":1640079851830,"results":"161","hashOfConfig":"90"},{"size":2592,"mtime":1640797308353,"results":"162","hashOfConfig":"90"},{"size":1125,"mtime":1640093934761,"results":"163","hashOfConfig":"90"},{"size":851,"mtime":1640092543109,"results":"164","hashOfConfig":"90"},{"size":3030,"mtime":1640797523136,"results":"165","hashOfConfig":"90"},{"size":2698,"mtime":1640117890419,"results":"166","hashOfConfig":"90"},{"size":565,"mtime":1640607597510,"results":"167","hashOfConfig":"90"},{"size":3377,"mtime":1640797472908,"results":"168","hashOfConfig":"90"},{"size":674,"mtime":1640700252472,"results":"169","hashOfConfig":"90"},{"size":1240,"mtime":1640796196524,"results":"170","hashOfConfig":"90"},{"size":330,"mtime":1640644976351,"results":"171","hashOfConfig":"90"},{"size":1186,"mtime":1640797411516,"results":"172","hashOfConfig":"90"},{"size":830,"mtime":1640665287107,"results":"173","hashOfConfig":"90"},{"size":3035,"mtime":1640797020594,"results":"174","hashOfConfig":"90"},{"size":2194,"mtime":1640795103201,"results":"175","hashOfConfig":"90"},{"size":3751,"mtime":1640797267733,"results":"176","hashOfConfig":"90"},{"size":4146,"mtime":1640797252274,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"1a3m54w",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"180"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"180"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"180"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"180"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"180"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"180"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"180"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"180"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"180"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"180"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"180"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"180"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"180"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"180"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"180"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"180"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"180"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"180"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"180"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"180"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"180"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"180"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"180"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"180"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"180"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"180"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"180"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"180"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"180"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/index.js",[],["387","388"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/store.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reportWebVitals.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/App.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/userReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/cartReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/productReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/orderReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/LoginScreen.js",["389"],"import React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport { USER_LOGIN_CLEAR } from '../constants/userConstants';\n\n\nfunction LoginScreen({ location, history }) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const { error, loading, userInfo } = useSelector(state => state.userLogin);\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    };\n\n\n    useEffect(() => {\n\n      if (userInfo) {\n          // set cookies\n          Cookies.set('user', JSON.stringify(userInfo));\n\n          if (userInfo.isAdmin === 'No') {\n            history.push(redirect);\n          }\n          else if (userInfo.isAdmin === 'Yes') {\n            history.push('/admin');\n          }\n      }\n\n      return(() => {\n        if (userInfo) {\n          dispatch({\n            type:USER_LOGIN_CLEAR\n          })\n        }\n      });\n    }, [history, userInfo, redirect]);\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductScreen.js",["390"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card className='mt-5'>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CartScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/HomeScreen.js",["391"],"import React, { useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\n\nfunction HomeScreen ({displayHeader}) {\n    const dispatch = useDispatch()\n    const { error, loading, products, page, pages } = useSelector(state => state.productList);\n\n    const history = useHistory();\n    let keyword = history.location.search\n\n\n    const readCookies = () => {\n      try {\n        const cookies = JSON.parse(Cookies.get('user'));\n\n        return cookies;\n      }\n      catch (error) {\n        return undefined;\n      }\n    }\n\n    useEffect(() => {\n\n        const cookies = readCookies();\n\n        if (cookies) {\n            if (cookies.isAdmin === 'Yes')\n              history.push('/admin');\n            else if (cookies.isAdmin === 'No') {\n              if (cookies.type === 'customer') {\n                history.push('/');\n              }\n              else if (cookies.type === 'driver') {\n                history.push('/driver');\n              }\n            }\n        }\n\n        dispatch(listProducts(keyword))\n        displayHeader();\n    }, [dispatch, keyword, displayHeader]);\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PlaceOrderScreen.js",["392","393"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\n\n\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    const placeOrder = (e) => {\n        e.preventDefault();\n        const { address, city, postalCode, country } = cart.shippingAddress;\n        const fullAddress = `${address}, ${city}, ${postalCode}, ${country}`;\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: fullAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: parseFloat(cart.itemsPrice),\n            shippingPrice: parseFloat(cart.shippingPrice),\n            taxPrice: parseFloat(cart.taxPrice),\n            totalPrice: parseFloat(cart.totalPrice),\n            isPaid: cart.paymentMethod === 'Cash on Delivery' ? false : true\n        }));\n    }\n\n    const discardOrder = (e) => {\n      e.preventDefault();\n      dispatch({\n        type: CART_CLEAR_ITEMS\n      });\n      history.push('/');\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n\n    }, [success, history, error]);\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block btn-secondary'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={discardOrder}\n                                >\n                                    Discard Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserListScreen.js",["394"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProfileScreen.js",["395","396","397","398"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport Typography from '@mui/material/Typography';\n\nimport CustomerDetails from './CustomerDetails';\nimport SavedPlaces from './SavedPlaces';\n\n\nconst styles = {\n  link: {\n    marginTop : '15px',\n    marginBottom : '10px',\n    color: 'gray',\n    '&:hover': {\n      color: 'black',\n      cursor: 'pointer'\n    },\n  }\n}\n\n\nfunction switchContents (page) {\n  switch (page) {\n    case 'CustomerDetails':\n      return <CustomerDetails />;\n    case 'SavedPlaces':\n      return <SavedPlaces />;\n    default:\n      throw new Error('Invalid Page Choice!');\n  }\n}\n\n\nexport default function ProfileScreen({ history }) {\n\n  const [ page, setPage ] = useState('CustomerDetails');\n\n  const { userInfo } = useSelector(state => state.userCookie);\n\n\n  useEffect(() => {\n    if (!userInfo) history.push('/');\n  }, [userInfo]);\n\n  return (\n    <Row>\n      <Col xs lg='2'>\n        <Typography onClick={() => setPage('CustomerDetails')}\n          variant='subtitle1' sx={styles.link}>\n          Profile\n        </Typography>\n        { userInfo?.type !== 'driver' &&\n          (<Typography onClick={() => setPage('SavedPlaces')}\n            variant='subtitle1' sx={styles.link}>\n            Saved Places\n          </Typography>)\n        }\n      </Col>\n      <Col>\n        {switchContents(page)}\n      </Col>\n    </Row>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderScreen.js",["399","400","401","402","403","404","405","406"],"import React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport MaterialButton from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { payOrder, deliverOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\nimport { getOrderDetails, cancelOrder, completeOrder } from '../networking/orderRequests';\n\nfunction OrderScreen({ match, history }) {\n\n    const [sdkReady, setSdkReady] = useState(false);\n    const [ order, setOrder ] = useState(null);\n    const [ loading, setLoading ] = useState(true);\n    const [ error, setError ] = useState(null);\n\n    const orderId = match.params.id\n    const dispatch = useDispatch();\n\n    const { userInfo } = useSelector(state => state.userCookie);\n\n    const toDate = (date) => {\n      const dt = new Date(date);\n      return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n    };\n\n\n    const calculateItemPrice = () => {\n      let itemPrice = Number(order.totalPrice) - (Number(order.taxPrice) + Number(order.shippingPrice));\n      return itemPrice.toFixed(2);\n    }\n\n\n    const deliverHandler = async (e) => {\n      e.preventDefault();\n      if (order && orderId) {\n        setLoading(true);\n        const {error, data, message} = await completeOrder(orderId, userInfo.token);\n        if (error) {\n          setError(message);\n        }\n        else {\n          setOrder(data);\n        }\n        setLoading(false);\n      }\n    }\n\n    const cancelOrderHandler = async (e) => {\n      e.preventDefault();\n      if (order && orderId) {\n        setLoading(true);\n        const {error, data, message} = await cancelOrder(orderId, userInfo.token);\n        if (error) {\n          setError(message);\n        }\n        else {\n          setOrder(data);\n        }\n        setLoading(false);\n      }\n    }\n\n    const handleBackButtonClick = () => {\n      history.goBack();\n    }\n\n\n    useEffect(() => {\n\n      const abortController = new AbortController();\n\n      if (userInfo && orderId) {\n        (async () => {\n          const { error, message, data } = await getOrderDetails(orderId, userInfo.token, abortController.signal);\n          if (error) {\n            setError(message);\n          }\n          else {\n            setOrder(data);\n          }\n          setLoading(false);\n        })();\n      }\n\n      if (!userInfo) {\n        history.push('/');\n      }\n\n      return (() => abortController.abort());\n\n    }, [userInfo]);\n\n    useEffect(() => {\n      if (error) {\n        setOrder(null);\n      }\n    }, [error]);\n\n    return loading ? (\n        <Loader />\n    ) : (\n      order ? (\n        <div>\n          <MaterialButton\n            onClick={handleBackButtonClick}\n            startIcon={<ArrowBackIcon />}\n          >\n            Back\n          </MaterialButton>\n            <h1>Order: #{order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong> {order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.username}`}>{order.user.username}</a></p>\n                            <p>\n                                <strong>Delivered Address: </strong>\n                                {order.shippingAddress}\n                            </p>\n                            <p><strong>Mobile: </strong>{order.user.mobile}</p>\n\n                            <Message variant='info'>{ order.status }</Message>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {toDate(order.paidAt)}</Message>\n                            ) : (\n                                    <Message variant='warning'>Not Paid</Message>\n                                )}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? <Message variant='info'>\n                                Order is empty\n                    </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {order.orderItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={2}>\n                                                        <Image style={{width: '50px', height: '50px'}}\n                                                          src={item.product.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>\n                                      ${calculateItemPrice()}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                        {userInfo && userInfo.isAdmin &&\n                            order.isPaid && !order.isDelivered && order.status === 'progress' && (\n                            <ListGroup.Item>\n                                { order.driver && <Button\n                                    type='button'\n                                    className='btn btn-block'\n                                    onClick={deliverHandler}\n                                >\n                                    Mark As Delivered\n                                </Button>}\n\n                                <Button\n                                    type='button'\n                                    className='btn btn-block btn-secondary'\n                                    onClick={cancelOrderHandler}\n                                >\n                                    Cancel Order\n                                </Button>\n\n                            </ListGroup.Item>\n                        )}\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n      )\n      : <Message variant='danger'>{error}</Message>\n    )\n\n}\n\nexport default OrderScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ShippingScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PaymentScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserEditScreen.js",["407"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderListScreen.js",["408","409","410","411"],"import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listMyOrders } from '../actions/orderActions';\n\n\n\nconst styles = {\n  container: {\n    padding: '20px',\n    marginTop: '15px',\n    marginBottom: '20px'\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}\n\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const { loading, error, orders } = useSelector(state => state.myOrderList);\n    const { userInfo } = useSelector(state => state.userCookie);\n\n\n    const orderOnClick = (id) => {\n      history.push(`/order/${id}`);\n    }\n\n    const displayOrderItem = (items) => {\n      let itemTitle = '';\n      items.forEach((item, idx) => {\n        if (idx !== 0)\n          itemTitle += ', ';\n        itemTitle += `${item.name} x ${item.qty}`;\n      });\n\n      return itemTitle;\n    }\n\n    const toDate = (date) => {\n      const dt = new Date(date);\n      return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(listMyOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo]);\n\n\n    return (\n        <div>\n            <h1>My Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        orders && orders.map(order => (\n                          <Paper\n                            elevation={2}\n                            key={order._id}\n                            sx={styles.container}\n                            onClick={() => orderOnClick(order._id)}\n                          >\n                            <Box sx={styles.row}>\n                              <div>\n                                <h5>{displayOrderItem(order.orderItems)}</h5>\n                                <h6>{toDate(order.createdAt)}</h6>\n                                <h6 style={{\n                                  padding: '10px',\n                                  width: 'fit-content',\n                                  background: order.status === 'progress' ? 'dodgerblue' : 'gainsboro', \n                                }}>\n                                  {order.status}\n                                </h6>\n                              </div>\n                              <h5>{order.totalPrice}&nbsp;$</h5>\n                            </Box>\n                          </Paper>\n                        ))\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductListScreen.js",["412"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductEditScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Footer.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/RegisterScreen.js",["413","414"],"import React, { useState, useEffect } from 'react'\nimport Cookies from 'js-cookie';\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\nimport { USER_CREATE_RESET } from '../constants/userConstants';\n\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [mobile, setMobile] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(\n              register({\n                name,\n                username: email,\n                type: 'customer',\n                mobile,\n                password\n              })\n            );\n        }\n    }\n\n    const readCookies = () => {\n      try {\n        const cookies = JSON.parse(Cookies.get('user'));\n\n        return cookies;\n      }\n      catch (error) {\n        return undefined;\n      }\n    }\n\n    useEffect(() => {\n      const cookie = readCookies();\n\n      if (cookie) {\n        if (cookie.isAdmin === 'Yes')\n          history.push('/admin');\n        else if (cookie.isAdmin === 'No')\n          history.push('/');\n      }\n      if (userInfo) {\n          history.push('/login')\n      }\n\n      return(() => {\n        if (userInfo) {\n          dispatch({\n            type: USER_CREATE_RESET\n          });\n        }\n      });\n    }, [history, userInfo, redirect])\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='mobile'>\n                    <Form.Label>Mobile Number</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='83210054'\n                        value={mobile}\n                        onChange={(e) => setMobile(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Header.js",["415","416"],"import React, { useEffect, useState } from 'react'\nimport Cookies from 'js-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header(props) {\n\n  const [ showHeader, setShowHeader ] = useState(false);\n\n  const userCookies = useSelector(state => state.userCookie);\n  const { userInfo } = userCookies;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  }\n\n  useEffect(() => {\n    setShowHeader(props.show);\n  }, [showHeader, props.show, userInfo]);\n\n  return (\n    <>\n      {showHeader ?(\n        <header>\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n            <Container>\n              <LinkContainer to='/'>\n                <Navbar.Brand>TrioPizza</Navbar.Brand>\n              </LinkContainer>\n\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                { userInfo?.type !== 'driver' && <SearchBox />}\n                <Nav className=\"ml-auto\">\n\n                  { userInfo && userInfo.type === 'customer' &&\n                    <>\n                    <LinkContainer to='/reserve-table'>\n                      <Nav.Link >Reservation</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to='/cart'>\n                      <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                    </LinkContainer>\n                    </>\n                  }\n\n                  {userInfo ? (\n                    <NavDropdown title={userInfo.name} id='username'>\n                      <LinkContainer to='/profile'>\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                      </LinkContainer>\n\n                      {userInfo.type === 'customer' &&\n                      (<LinkContainer to='/myorders'>\n                        <NavDropdown.Item>My Orders</NavDropdown.Item>\n                      </LinkContainer>)\n                      }\n\n                      <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                    </NavDropdown>\n                  ) : (\n                    <LinkContainer to='/login'>\n                      <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                    </LinkContainer>\n                    )}\n\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>)\n        : <></>\n      }\n    </>\n  )\n}\n\nexport default Header\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Loader.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Message.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/FormContainer.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Product.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Paginate.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Rating.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/CheckoutSteps.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ProductCarousel.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/SearchBox.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/cartConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/userConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/productConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/orderConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/orderActions.js",["417","418","419","420","421"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CANCEL_REQUEST,\n    ORDER_CANCEL_FAIL,\n    ORDER_CANCEL_SUCCESS,\n    ORDER_CANCEL_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const body = {\n          ...order,\n          user: userInfo.id\n        };\n\n        const { data } = await axios.post(\n            `/api/orders/`,\n            body,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        });\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const { userCookie: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        });\n\n        const { userCookie: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/${userInfo.id}`,\n            config\n        );\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        });\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const { userCookie: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        );\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const cancelOrder = orderId => async (dispatch, getState) => {\n  try {\n      dispatch({\n        type: ORDER_CANCEL_REQUEST\n      });\n\n      const { userCookie: { userInfo } } = getState();\n\n      const { data } = await axios.put(`/api/orders/${orderId}/cancel/`, {\n        headers: {\n          'Content-Type' : 'Application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n\n      dispatch({\n        type: ORDER_CANCEL_SUCCESS\n      });\n  }\n  catch (error) {\n    dispatch({\n        type: ORDER_CANCEL_FAIL,\n        payload: error.response && error.response.data.details\n            ? error.response.data.details\n            : error.message,\n    });\n  }\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/productActions.js",["422","423","424"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                // Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product, id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                // Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/userActions.js",["425","426","427"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n    AVAILABLE_DRIVERS_REQUEST,\n    AVAILABLE_DRIVERS_SUCCESS,\n    AVAILABLE_DRIVERS_FAIL,\n    AVAILABLE_DRIVERS_RESET\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\n\nimport Cookie from 'js-cookie';\n\n\nfunction setUserCookie (userInfo) {\n  Cookie.set('user', JSON.stringify(userInfo));\n}\n\n\nfunction removeUserCookie () {\n  Cookie.remove('user');\n}\n\nfunction getTokenFromCookie () {\n  try {\n    const user = JSON.parse(Cookie.get('user'));\n    return user;\n  }\n  catch (error) {\n    console.error(error);\n  }\n}\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        });\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        );\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n\n        dispatch({\n          type: 'read_cookie_success',\n          payload: data\n        });\n\n        setUserCookie(data);\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: ORDER_LIST_MY_RESET });\n    dispatch({ type: USER_LIST_RESET });\n    dispatch({ type: 'remove_user_cookie' });\n    removeUserCookie();\n}\n\n\nexport const register = (user) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        const { data } = await axios.post ( '/api/users/',\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        console.log(error.response);\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: (error?.response?.data?.details)\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        });\n\n        const { token } = getTokenFromCookie();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        );\n        \n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        });\n\n\n    } catch (error) {\n        console.log('error', error.response);\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response?.data?.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                // Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/${id}/`,\n            config\n        );\n\n        console.log(data);\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (id, user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        });\n\n        const {\n            userCookie: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/${id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        });\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const getAvailableDrivers = () => async (dispatch, getState) => {\n  try {\n    dispatch ({\n      type: AVAILABLE_DRIVERS_REQUEST\n    });\n\n    const { userCookie: userInfo } = getState();\n\n    const { data } = await axios.get(`api/users/drivers/status/available`, {\n      headers: {\n        'Content-Type' : 'Application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n\n    dispatch({\n      type: AVAILABLE_DRIVERS_SUCCESS,\n      payload: data\n    });\n  }\n  catch (error) {\n    dispatch({\n      type: AVAILABLE_DRIVERS_FAIL,\n      payload: error.response && error.response.data.details\n            ? error.response.data.details\n            : error.message\n    })\n  }\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/cartActions.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminAppbar.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminDrawerMenu.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserList.js",["428"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport CustomTable from '../CustomTable';\nimport EditUser from './EditUser';\n\nimport { listUsers } from '../../actions/userActions';\n\n\nconst styles = {\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '25px',\n    padding: '10px'\n  },\n  searchInput: {\n    maxWidth: '200px'\n  }\n}\n\nconst columns = [\n  { id: 'id', label: 'ID', maxWidth: 70 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'username',\n    label: 'Email',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'mobile',\n    label: 'Mobile',\n    maxWidth: 150,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'type',\n    label: 'User Type',\n    minWidth: 100,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'isAdmin',\n    label: 'Admin',\n    maxWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\n\nexport default function UserList({addNewUser}) {\n\n  const [ openEditUser, setOpenEditUser ] = useState(false);\n  const [ editingID, setEditingID ] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userList = useSelector(state => state.userList);\n  const { loading, error, users } = userList;\n\n\n  const editUser = (id) => {\n    setEditingID(id);\n    setOpenEditUser(true);\n  }\n\n\n  const handleAddButtonOnClick = (event) => {\n    event.preventDefault();\n    console.log('handleAddButtonOnClick!')\n    addNewUser();\n  }\n\n\n  useEffect(() => {\n    if (!openEditUser) {\n      dispatch(listUsers());\n    }\n  }, [openEditUser]);\n\n  return (\n    <>\n    {openEditUser\n      ? (\n        <EditUser\n          closeEditUser={() => setOpenEditUser(false)}\n          editingID={editingID}\n        />\n      )\n      : (\n        <>\n        {loading\n          ? \"Loading ...\"\n          : (\n            <>\n            { error\n              ? \"Error Loading Users\"\n              : (\n                <>\n                  <Paper\n                    sx={styles.topContainer}\n                  >\n                    <Box sx={{width: '40%', maxWidth: '400px'}}>\n                      <TextField fullWidth label=\"Search\" variant=\"outlined\" size=\"small\"/>\n                    </Box>\n\n                    <Box>\n                      <Button\n                        sx={{margin: '10px'}}\n                        variant=\"contained\"\n                        color=\"success\"\n                        onClick={handleAddButtonOnClick}\n                        endIcon={<AddIcon />}\n                      >\n                        Add\n                      </Button>\n                      <Button sx={{margin: '10px'}} variant=\"contained\" endIcon={<FileDownloadIcon />}>\n                        Export\n                      </Button>\n                      <IconButton>\n                        <RefreshIcon color=\"primary\" />\n                      </IconButton>\n                    </Box>\n                  </Paper>\n\n                  <CustomTable\n                    columns={columns}\n                    rows={users}\n                    type=\"user\"\n                    edit={editUser}\n                  />\n                </>\n              )\n            }\n            </>\n          )\n        }\n        </>\n      )\n    }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Admin.js",["429"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport AdminAppbar from './AdminAppbar';\nimport AdminDrawerMenu from './AdminDrawerMenu';\nimport Dashboard from './Dashboard';\nimport UserAdminDashboard from './users/UserAdminDashboard';\nimport DriverDashboard from './drivers/DriverDashboard';\nimport ProductDashboard from './products/ProductDashboard';\nimport ReservationDashboard from './reservations/ReservationDashboard';\nimport OrderDashboard from './orders/OrderDashboard';\nimport Profile from './Profile';\nimport Setting from './Setting';\nimport { logout } from '../actions/userActions';\n\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\n\nfunction switchContents (page) {\n\t\tswitch (page) {\n\t\t\tcase 'Dashboard':\n\t\t\t\treturn <Dashboard />;\n\t\t\tcase 'Users':\n\t\t\t\treturn <UserAdminDashboard />;\n      case 'Drivers Status':\n        return <DriverDashboard />;\n\t\t\tcase 'Products':\n\t\t\t\treturn <ProductDashboard />;\n\t\t\tcase 'Orders':\n\t\t\t\treturn <OrderDashboard />;\n      case 'Reservations':\n        return <ReservationDashboard />;\n      case 'Profile':\n        return <Profile />\n      case 'Setting':\n        return <Setting />;\n\t\t\tdefault:\n\t\t\t\tthrow new Error ('Invalid Admin Page Content');\n\t\t}\n}\n\n\nexport default function Admin ({hideHeader}) {\n\n  const theme = useTheme();\n  const [ open, setOpen ] = useState(false);\n\tconst [ page, setPage ] = useState('Dashboard');\n\tconst [ pageTitle, setPageTitle ] = useState('Dashboard');\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const userCookie = useSelector(state => state.userCookie);\n  const { userInfo } = userCookie;\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\tconst onChangePage = (page) => {\n    console.log(page);\n\t\tif (page === 'Sign Out') {\n      // sign out user\n      dispatch(logout());\n    }\n    else {\n      setPage(page);\n    }\n\t}\n\n\tuseEffect(() => {\n\t\tsetPageTitle(page);\n    hideHeader();\n\n    if (!userInfo)\n      history.push('/');\n\n\t}, [open, page, hideHeader, dispatch, userInfo]);\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n\n\t\t\t<AdminAppbar\n\t\t\t\ttitle={pageTitle}\n\t\t\t\topen={open}\n\t\t\t\thandleDrawerOpen={handleDrawerOpen}\n\t\t\t/>\n\n      <AdminDrawerMenu\n\t\t\t\ttheme={theme}\n\t\t\t\topen={open}\n\t\t\t\thandleDrawerClose={handleDrawerClose}\n\t\t\t\topenedMixin={openedMixin}\n\t\t\t\tclosedMixin={closedMixin}\n\t\t\t\tonChangePage={onChangePage}\n\t\t\t\tpage={page}\n\t\t\t/>\n\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3, background: '#f9f9f9' }}>\n        <DrawerHeader />\n        { switchContents(page) }\n      </Box>\n    </Box>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Dashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTable.js",["430","431","432","433"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FilterListIcon from '@mui/icons-material/FilterList';\n\nimport CustomTableHead from './CustomTableHead';\nimport CustomTableBody from './CustomTableBody';\n\n\nconst EnhancedTableToolbar = (props) => {\n\n  const { selected, openEditPannel, deleteUser, numSelected, type } = props;\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    deleteUser(selected[0]);\n  }\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <h6>{type}</h6>\n      )}\n\n      {numSelected > 0 && (\n        <Tooltip title=\"Edit\">\n          <IconButton\n            color=\"primary\"\n            onClick={() => openEditPannel(selected[0])}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default function CustomTable (props) {\n\n  const { columns, rows, type, edit } = props;\n\n  const [ order, setOrder ] = useState('asc');\n  const [ orderBy, setOrderBy ] = useState('calories');\n  const [ selected, setSelected ] = useState([]);\n  const [ page, setPage ] = useState(0);\n  const [ dense, setDense ] = useState(false);\n  const [ rowsPerPage, setRowsPerPage ] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => {\n        if (n.id)\n          return n.id;\n        else\n          return n._id;\n      });\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      { rows &&\n        (\n          <>\n            <Paper sx={{ width: '100%', mb: 2 }}>\n\n              <EnhancedTableToolbar\n                numSelected={selected.length}\n                selected={selected}\n                openEditPannel={(id) => edit(id)}\n                type={type.toUpperCase()}\n              />\n\n              <TableContainer>\n                <Table\n                  sx={{ minWidth: 750 }}\n                  aria-labelledby=\"tableTitle\"\n                  size={dense ? 'small' : 'medium'}\n                >\n                  <CustomTableHead\n                    headCells={columns}\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rows.length}\n                  />\n                  <CustomTableBody\n                    rows={rows}\n                    page={page}\n                    rowsPerPage={rowsPerPage}\n                    handleClick={handleClick}\n                    orderBy={orderBy}\n                    emptyRows={emptyRows}\n                    isSelected={isSelected}\n                    order={order}\n                    dataType={type}\n                  />\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </Paper>\n            <FormControlLabel\n              control={<Switch checked={dense} onChange={handleChangeDense} />}\n              label=\"Dense padding\"\n            />\n          </>\n        )\n      }\n    </Box>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableHead.js",["434"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Box from '@mui/material/Box';\nimport { visuallyHidden } from '@mui/utils';\n\n\nCustomTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\n\nexport default function CustomTableHead (props) {\n\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    headCells\n  } = props;\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableBody.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserAdminDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/CreateUser.js",["435"],"import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { register } from '../../actions/userActions';\nimport { USER_CREATE_RESET } from '../../constants/userConstants';\n\n\nexport default function CreateUser ({backToUserList}) {\n\n  const [ message, setMessage ] = useState('');\n  const [ user, setUser ] = useState({\n    name: '',\n    username: '',\n    password: '',\n    mobile: '',\n    type: ''\n  });\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n\n  const handleBackButtonClick = (event) => {\n    event.preventDefault();\n    backToUserList();\n  }\n\n\n  const handleOnChange = (event) => {\n    const { name, value } = event.target;\n    setUser({\n      ...user,\n      [name] : value\n    });\n  }\n\n  const createNewUser = (event) => {\n    event.preventDefault();\n    dispatch(register(user));\n  }\n\n\n  useEffect(() => {\n    if (userInfo) {\n      // after successful user creation, redirect back to user list page\n      setMessage(\"User Created Successfully!\");\n      setUser({\n        name: '',\n        username: '',\n        password: '',\n        mobile: '',\n        type: ''\n      })\n    }\n\n    return (() => {\n      if (userInfo)\n        dispatch({\n          type: USER_CREATE_RESET\n        });\n    });\n  }, [userInfo]);\n\n  return (\n    <>\n      <Button\n        onClick={handleBackButtonClick}\n        startIcon={<ArrowBackIcon />}\n      >\n        Back\n      </Button>\n      <Paper\n        sx={{ paddingTop: '20px', paddingBottom: '50px'}}\n      >\n        <FormContainer>\n          <h4>Create New User</h4>\n          {message !== '' && <Message variant='success'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {loading && <Loader />}\n          <Form onSubmit={createNewUser}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Full Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Full Name\"\n                name='name'\n                value={user.name}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='username'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Email Address\"\n                name='username'\n                value={user.username}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='mobile'>\n              <Form.Label>Mobile Number</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Mobile Number\"\n                name='mobile'\n                value={user.mobile}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                name='password'\n                value={user.password}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='type'>\n              <Form.Label>User Type</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={handleOnChange}\n                name=\"type\"\n                value={user.type}\n                required\n              >\n                <option>Select User Type</option>\n                <option value=\"customer\">Customer</option>\n                <option value=\"driver\">Driver</option>\n                <option value=\"admin\">Admin</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Create User\n            </Button>\n\n          </Form>\n        </FormContainer>\n      </Paper>\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/EditUser.js",["436","437","438"],"import React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { getUserDetails, updateUser, deleteUser } from '../../actions/userActions';\nimport { USER_UPDATE_RESET, USER_DELETE_RESET } from '../../constants/userConstants';\n\n\n\nexport default function EditUser ({closeEditUser, editingID}) {\n\n  const [ message, setMessage ] = useState('');\n  const [ user, setUser ] = useState({\n    name: '',\n    username: '',\n    mobile: '',\n    type: ''\n  });\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const { error, loading, userInfo } = userDetails;\n\n  const userUpdate = useSelector(state => state.userUpdate);\n  const { success } = userUpdate;\n\n  const userDelete = useSelector(state => state.userDelete);\n  const { loadingDelete, successDelete, errorDelete } = userDelete;\n\n  const handleOnChange = (event) => {\n    setUser({\n      ...user,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function handleOnSubmit (event) {\n    event.preventDefault();\n    dispatch(updateUser(editingID, user));\n  }\n\n\n  function handleDelete (event) {\n    event.preventDefault();\n    dispatch(deleteUser(editingID));\n  }\n\n\n  useEffect(() => {\n    if (editingID && editingID > 0) {\n      dispatch(getUserDetails(editingID));\n    }\n  }, [editingID]);\n\n  useEffect(() => {\n    if (userInfo) {\n      if (success)\n        setMessage('User Updated Successfully!');\n      else {\n        setUser({\n          name: userInfo.name,\n          username: userInfo.username,\n          mobile: userInfo.mobile,\n          type: userInfo.type\n        });\n      }\n    }\n\n    return (() => {\n      if (success)\n        dispatch({\n          type: USER_UPDATE_RESET,\n        });\n    });\n  }, [userInfo, success]);\n\n\n  useEffect(() => {\n    if (successDelete) {\n      closeEditUser();\n    }\n    else if (errorDelete) {\n      setMessage(errorDelete);\n    }\n\n    return(() => {\n      if (successDelete)\n        dispatch({\n          type: USER_DELETE_RESET\n        });\n    });\n  }, [errorDelete, successDelete]);\n\n\n  return (\n    <>\n      <Button\n        startIcon={<ArrowBackIcon/>}\n        onClick={() => closeEditUser()}\n      >\n        Back\n      </Button>\n      <h4>Edit User</h4>\n      <Paper sx={{ margin: '10px', paddingTop: '20px', paddingBottom: '20px'}}>\n        <FormContainer>\n          {message !== '' && <Message variant='success'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n          {(loading || loadingDelete) && <Loader />}\n          <Form onSubmit={handleOnSubmit}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Full Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Last Name\"\n                name='name'\n                value={user.name}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='username'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Email Address\"\n                name='username'\n                value={user.username}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='mobile'>\n              <Form.Label>Mobile Number</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Mobile Number\"\n                name='mobile'\n                value={user.mobile}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='type'>\n              <Form.Label>User Type</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={handleOnChange}\n                name=\"type\"\n                value={user.type}\n              >\n                <option>Select User Type</option>\n                <option value=\"customer\">Customer</option>\n                <option value=\"driver\">Driver</option>\n                <option value=\"admin\">Admin</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Box sx={{ display: 'flex', justifyContent: 'space-between'}}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Save Changes\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={handleDelete}\n              >\n                Delete User\n              </Button>\n            </Box>\n\n          </Form>\n        </FormContainer>\n      </Paper>\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/driver/Dashboard.js",["439","440","441"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Row, Col, Button } from 'react-bootstrap';\n\nimport { getOrdersByDriver } from '../networking/orderRequests';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\n\nexport default function DriverDashboard () {\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const history = useHistory();\n\n  const [ deliveries, setDeliveries ] = useState([]);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ message, setMessage ] = useState(null);\n\n\n  const seeOrderDetails = (id) => {\n    history.push(`/order/${id}`);\n  }\n\n  useEffect(() => {\n\n    const abortController = new AbortController();\n\n    if (userInfo) {\n      ( async () => {\n\n        setLoading(true);\n\n        const { error, message, data } = await getOrdersByDriver (userInfo.id, userInfo.token, abortController.signal);\n\n        if (error) {\n          setError(message);\n          setDeliveries([]);\n        }\n        else {\n          setDeliveries(data);\n          setError(null);\n        }\n        setLoading(false);\n      })()\n    }\n    else\n      history.push('/');\n\n    return (() => abortController.abort());\n  }, [userInfo]);\n\n\n  useEffect(() => {\n    if (error) {\n      setMessage(error);\n    }\n    else {\n      if (deliveries.length === 0) {\n        setMessage(\"You have not made any deliveries yet.\");\n      }\n      else\n        setMessage(null);\n    }\n\n  }, [error, loading]);\n\n\n  return (\n    <>\n      <h4>Driver Dashboard</h4>\n\n      <p>Welcome, {userInfo && userInfo.name}</p>\n      <hr/>\n      <h5>My Deliveries</h5>\n      <Card className='m-3'>\n        <Card.Body>\n          {loading && <Loader />}\n          {message && <Message variant={error ? 'danger' : 'info'}>{message}</Message>}\n          {deliveries.map( (order, idx) => (\n            <Card\n              key={idx}\n              className='mx-1 mb-2'\n              onClick={() => seeOrderDetails(order._id)}\n            >\n              <Card.Body>\n                <Row>\n                  <Col>\n                    <h6>Order #{order._id}</h6>\n                    <p>{order.shippingAddress}</p>\n                    <p>{order.user.mobile}</p>\n                  </Col>\n                  <Col lg={3}>\n                    {order.status === 'progress' ? (\n                      <h5 style={{\n                        padding: '10px',\n                        background: 'coral',\n                        width: 'fit-content',\n                        margin: 'auto',\n                        color: 'white'\n                      }}>\n                        Active\n                      </h5>\n                    ) : (\n                      <h6>Status : {order.status}</h6>\n                    )}\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          ))}\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/CreateProduct.js",["442","443"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductList.js",["444","445","446"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport CustomTable from '../CustomTable';\nimport EditProduct from './EditProduct';\nimport { listProducts } from '../../actions/productActions';\n\n\nconst styles = {\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '25px',\n    padding: '10px'\n  }\n};\n\n\nconst columns = [\n  { id: '_id', label: 'ID', maxWidth: 70 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'description',\n    label: 'Description',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'price',\n    label: 'Price',\n    maxWidth: 100,\n    align: 'right',\n  },\n  {\n    id: 'numReviews',\n    label: 'Number of Reviews',\n    maxWidth: 120,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'rating',\n    label: 'Rating',\n    maxWidth: 150,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\n\nexport default function ProductList ({addNewProduct}) {\n\n  const [ openEditProduct, setOpenEditProduct ] = useState(false);\n  const [ editingID, setEditingID ] = useState(null);\n\n  const dispatch = useDispatch();\n  const { loading, error, products } = useSelector(state => state.productList);\n\n\n  const editProduct = (val) => {\n    setEditingID(val);\n    setOpenEditProduct(true);\n  }\n\n  const closeOpenEditProduct = () => setOpenEditProduct(false);\n\n  useEffect(() => {\n    if (!openEditProduct)\n      dispatch( listProducts() )\n  }, [openEditProduct]);\n\n  return (\n    <>\n      {openEditProduct ?\n        (<EditProduct\n            editingID={editingID}\n            backToProductList={closeOpenEditProduct}\n          />)\n        : (\n          <>\n            <Paper sx={styles.topContainer}>\n              <Box sx={{width: '40%', maxWidth: '400px'}}>\n                <TextField fullWidth label=\"Search\" variant=\"outlined\" size=\"small\"/>\n              </Box>\n\n              <Box>\n                <Button\n                  sx={{margin: '10px'}}\n                  variant=\"contained\"\n                  color=\"success\"\n                  onClick={() => addNewProduct()}\n                  endIcon={<AddIcon />}\n                >\n                  Add\n                </Button>\n                <Button sx={{margin: '10px'}} variant=\"contained\" endIcon={<FileDownloadIcon />}>\n                  Export\n                </Button>\n                <IconButton>\n                  <RefreshIcon color=\"primary\" />\n                </IconButton>\n              </Box>\n            </Paper>\n            <CustomTable\n              columns={columns}\n              rows={products}\n              type='products'\n              edit={editProduct}\n            />\n          </>\n        )\n      }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/EditProduct.js",["447","448","449","450","451","452"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Setting.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Profile.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrdersSummary.js",["453","454","455","456","457","458"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\n\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: '15px',\n  },\n  box: {\n    padding: '15px',\n    margin: '10px',\n    borderRadius: '5px',\n  }\n}\n\n\nexport default function OrdersSummary () {\n\n  const [ monthlyOrders, setMonthlyOrders ] = useState(0);\n  const [ dailyOrders, setDailyOrders ] = useState(0);\n  const [ activeOrders, setActiveOrders ] = useState(0);\n\n\n\n  return (\n    <div style={styles.container}>\n        <Box\n          sx={{\n            ...styles.box,\n            backgroundColor: 'coral',\n            '&:hover': {\n              backgroundColor: 'primary.main',\n              opacity: [0.9, 0.8, 0.7],\n            },\n          }}\n        >\n          Total Orders this month : {monthlyOrders}\n        </Box>\n\n        <Box\n          sx={{\n            ...styles.box,\n            backgroundColor: 'tomato',\n            '&:hover': {\n              backgroundColor: 'primary.main',\n              opacity: [0.9, 0.8, 0.7],\n            },\n          }}\n        >\n          Total Orers today : {dailyOrders}\n        </Box>\n\n        <Box\n          sx={{\n            ...styles.box,\n            backgroundColor: 'coral',\n            '&:hover': {\n              backgroundColor: 'tomato',\n              cursor: 'Pointer'\n            },\n          }}\n        >\n          Active Orders : {activeOrders}\n        </Box>\n    </div>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderList.js",["459"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { listOrders } from '../../actions/orderActions.js';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport OrderCard from './OrderCard';\nimport OrderDetails from './OrderDetails';\n\n\nexport default function OrderList () {\n\n  const [ showOrderDetails, setShowOrderDetails ] = useState(false);\n  const [ selected, setSelected ] = useState(-1);\n\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const { error, loading, orders } = useSelector(state => state.orderList);\n\n\n  const goToOrderDetails = (id) => {\n    setShowOrderDetails(true);\n    setSelected(id);\n  };\n\n  const goBackToOrderList = () => {\n    setShowOrderDetails(false);\n    setSelected(-1);\n  };\n\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    }\n  }, [userInfo, showOrderDetails]);\n\n\n  return (\n    <>\n      { showOrderDetails && selected !== -1\n        ? <OrderDetails\n            id={selected}\n            backToOrderList={goBackToOrderList}\n          />\n        : (\n          <>\n          { loading && <Loader/>}\n          { error && <Message variant=\"danger\">{error}</Message>}\n          { orders && (\n            <>\n              <h5>All Orders ({orders.length})</h5>\n              {orders.map(order => (\n                <OrderCard\n                  key={order._id}\n                  order={order}\n                  goToOrderDetails={goToOrderDetails}\n                />\n              ))}\n            </>\n          )}\n          </>\n        )\n      }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderCard.js",["460","461","462"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport OrderDetails from './OrderDetails';\n\n\nconst styles = {\n  paper: {\n    padding: '15px',\n    marginTop: '10px',\n    marginBottom: '15px',\n    '&:hover': {\n      backgroundColor: 'gainsboro',\n      cursor: 'pointer'\n    },\n  },\n  box: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  status: {\n    padding: '10px',\n    borderRadius: '2px',\n    color: 'white'\n  }\n}\n\n\nexport default function OrderCard ({order, goToOrderDetails}) {\n\n\n  const displayOrderItem = (items) => {\n    let itemTitle = '';\n    items.forEach((item, idx) => {\n      if (idx !== 0)\n        itemTitle += ', ';\n      itemTitle += `${item.name} x ${item.qty}`;\n    });\n\n    return itemTitle;\n  }\n\n  const toDate = (date) => {\n    const dt = new Date(date);\n    return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n  }\n\n\n  const handleOnClick = (e) => {\n    e.preventDefault();\n    goToOrderDetails(order._id);\n  }\n\n\n  return (\n    <Paper\n      sx={styles.paper}\n      onClick={handleOnClick}\n    >\n      <Box sx={styles.box}>\n        <div>\n          <p>Order # {order._id}</p>\n          { order.orderItems.map( (item, idx) => (\n            <h6 key={idx}>{item.name} x {item.qty}</h6>\n          ))}\n          <h5>{order.totalPrice} $</h5>\n          <h6>{toDate(order.createdAt)}</h6>\n        </div>\n        <Box\n          sx={{\n            ...styles.status,\n            backgroundColor: order.status === 'progress' ? 'coral' : 'dodgerBlue'\n          }}\n        >\n          {order.status}\n        </Box>\n      </Box>\n    </Paper>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDetails.js",["463","464","465","466","467","468","469","470","471"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dropdown, Button, ButtonGroup, ListGroup } from 'react-bootstrap';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport MaterialButton from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport { getOrderDetails, completeOrder, cancelOrder } from '../../networking/orderRequests';\nimport { getAvailableDrivers } from '../../actions/userActions';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport ConfirmationBox from '../../components/ConfirmationBox';\nimport AsignDriver from './AsignDriver';\nimport OrderItem from './OrderItem';\n\n\nconst styles = {\n  paper: {\n    margin: '10px',\n    padding: '15px'\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '15px',\n    marginBottom: '15px'\n  },\n  rowStart: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginTop: '15px'\n  }\n}\n\n\nexport default function OrderDetails ({id, backToOrderList}) {\n\n  const [ order, setOrder ] = useState(null);\n  const [ loading, setLoading ] = useState(true);\n  const [ error, setError ] = useState(null);\n  const [ driver, setDriver ] = useState(-1);\n  const [ drivers, setDrives ] = useState([]);\n  const [ showConfirmation, setShowConfirmation ] = useState(false);\n  const [ actionType, setActionType ] = useState('');\n  const [ confirmationText, setConfirmationText ] = useState('');\n\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector(state => state.userCookie);\n\n\n  const backButtonClick = (e) => {\n    e.preventDefault();\n    backToOrderList();\n  };\n\n  const toDate = (date) => {\n    const dt = new Date(date);\n    return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n  };\n\n\n  const handleCancelClick = (e) => {\n    e.preventDefault();\n    setActionType('cancel');\n    setConfirmationText('Are you sure you want to cancel the order?')\n    setShowConfirmation(true);\n  };\n\n\n  const handleDeliverClick = (e) => {\n    e.preventDefault();\n    setActionType('deliver');\n    setConfirmationText('Mark the order as delivered?')\n    setShowConfirmation(true);\n  }\n\n\n  const confirmActionClick = async () => {\n    console.log(actionType, 'order #', id);\n    setShowConfirmation(false);\n    setLoading(true);\n    if (actionType === 'cancel')\n      await cancelOrderRequest();\n    else if (actionType === 'deliver')\n      await deliverOrderRequest();\n  };\n\n\n  const cancelOrderRequest = async () => {\n    const { error, message, data } = await cancelOrder(id, userInfo.token);\n\n    if (error) {\n      setError(message);\n    }\n    else {\n      setOrder(data);\n    }\n    setLoading(false);\n  }\n\n\n  const deliverOrderRequest = async () => {\n    const { error, message, data } = await completeOrder(id, userInfo.token);\n\n    if (error) {\n      setError(message);\n    }\n    else {\n      setOrder(data);\n    }\n    setLoading(false);\n  }\n\n\n  useEffect(() => {\n\n    const abortController = new AbortController();\n\n    if (id && userInfo && userInfo.isAdmin) {\n      (async () => {\n        const { error, message, data } = await getOrderDetails(id, userInfo.token, abortController.signal);\n        if (error) {\n          setError(message);\n        }\n        else {\n          setOrder(data);\n        }\n        setLoading(false);\n      })()\n    }\n\n\n    // clean up\n    return (() => abortController.abort());\n  }, [userInfo, id]);\n\n  return (\n    <>\n      <MaterialButton\n        endIcon={<ArrowBackIcon/>}\n        onClick={backButtonClick}\n      >\n        Back\n      </MaterialButton>\n      {\n        loading ? <Loader />\n        : (\n          error ? <Message variant='danger'>{error}</Message>\n          : (\n            <Paper\n              sx={styles.paper}\n            >\n              {showConfirmation && (\n                <ConfirmationBox\n                  dismiss={() => setShowConfirmation(false)}\n                  action={confirmActionClick}\n                  text={confirmationText}\n                />\n              )}\n              <Box\n                sx={styles.row}\n              >\n                <h5>Order : #{id}</h5>\n                <h6>Status : &nbsp;\n                  <strong style={{\n                    color: order.status === 'progress' ? 'coral' : 'dodgerBlue'\n                  }}>\n                    {order.status}\n                  </strong>\n                </h6>\n              </Box>\n\n              <AsignDriver\n                id={id}\n                driver={order.driver}\n                status={order.status}\n              />\n\n              <Box\n                sx={styles.row}\n              >\n                <div>\n                  <p>Customer</p>\n                  <h6>{order.user.name}, {order.user.username}</h6>\n                </div>\n                <div>\n                  <p>Date & Time</p>\n                  <h6>{toDate(order.createdAt)}</h6>\n                </div>\n              </Box>\n\n              <Box>\n                <p>Ordered Items</p>\n                <OrderItem items={order.orderItems}/>\n              </Box>\n\n              {order && order.status === 'progress' && (\n                <Box\n                  sx={styles.rowStart}\n                >\n                  { order.driver && (\n                    <Button\n                      className=\"btn btn-success mr-1\"\n                      onClick={handleDeliverClick}\n                    >\n                      Mark as Derlivered\n                    </Button>\n                  )}\n                  <Button\n                    className=\"btn btn-secondary mx-1\"\n                    onClick={handleCancelClick}\n                  >\n                    Cancel Order\n                  </Button>\n                </Box>\n              )}\n\n            </Paper>\n          )\n        )\n      }\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/AsignDriver.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/orderRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/reservations/ReservationDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ConfirmationBox.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderItem.js",["472"],"import React from 'react';\nimport { Row, Col, ListGroup, Image } from 'react-bootstrap';\n\nimport Message from '../../components/Message';\n\n\nconst styles = {\n  container: {\n    padding: '10px'\n  }\n}\n\n\nexport default function OrderItem ({items}) {\n\n\n  return (\n    <ListGroup variant='flush'>\n      <ListGroup.Item>\n          {items.length === 0\n            ? <Message variant='info'>Order is empty</Message>\n            : (\n                  <ListGroup variant='flush'>\n                      {items.map((item, index) => (\n                          <ListGroup.Item key={index}>\n                              <Row>\n                                  <Col md={1}>\n                                      <Image style={{width: '50px', height: '50px'}} src={item.product.image} fluid rounded />\n                                  </Col>\n\n                                  <Col>{item.name}</Col>\n\n                                  <Col md={4}>\n                                      {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                  </Col>\n                              </Row>\n                          </ListGroup.Item>\n                      ))}\n                  </ListGroup>\n              )}\n      </ListGroup.Item>\n    </ListGroup>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CustomerDetails.js",["473","474","475","476","477"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\n\n\nexport default function CustomerDetails () {\n\n  const [ user, setUser ] = useState({\n    name: '',\n    email: '',\n    mobile: ''\n  });\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector(state => state.userCookie );\n  const { loading, error, userDetails } = useSelector(state => state.userDetails);\n\n\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name] : e.target.value\n    })\n  }\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n  }\n\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n    else {\n      dispatch(getUserDetails(userInfo.id));\n    }\n  }, [userInfo]);\n\n\n  useEffect(() => {\n    if (userDetails) {\n      setUser({\n        name: userDetails.name,\n        email: userDetails.username,\n        mobile: userDetails.mobile\n      });\n    }\n  }, [userDetails]);\n\n  return (\n    <>\n      <h2>User Profile</h2>\n\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n\n          <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                  required\n                  type='name'\n                  placeholder='Enter name'\n                  value={user.name}\n                  onChange={handleOnChange}\n              >\n              </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                  required\n                  type='email'\n                  placeholder='Enter Email'\n                  value={user.email}\n                  onChange={handleOnChange}\n              >\n              </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n              <Form.Label>Mobile Number</Form.Label>\n              <Form.Control\n                  required\n                  type='mobile'\n                  placeholder='Mobile Number 1234 5678'\n                  value={user.mobile}\n                  onChange={handleOnChange}\n              >\n              </Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n              Update\n          </Button>\n\n      </Form>\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/SavedPlaces.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/addressRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddressCard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddNewPlaceForm.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverList.js",["478","479","480","481","482","483","484","485","486","487","488"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport Message from '../../components/Message';\nimport Loader from '../../components/Loader';\nimport CustomTable from '../CustomTable';\n\n\nimport { getAllDriverStatus } from '../../networking/driverRequests';\n\n\nconst styles = {\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '25px',\n    padding: '10px'\n  },\n  searchInput: {\n    maxWidth: '200px'\n  }\n}\n\nconst columns = [\n  { id: '_id', label: 'ID', maxWidth: 70 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'status',\n    label: 'Status',\n    maxWidth: 150,\n    align: 'right',\n  },\n  {\n    id: 'current_order',\n    label: 'Current Order',\n    minWidth: 100,\n    align: 'right',\n  },\n  {\n    id: 'total_order',\n    label: 'Num Deliveries',\n    maxWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\n\nexport default function UserList({addNewUser}) {\n\n  const [ drivers, setDrivers ] = useState([]);\n  const [ error, setError ] = useState(null);\n  const [ loading, setLoading ] = useState(true);\n  const [ message, setMessage ] = useState(null);\n\n  const { userInfo } = useSelector(state => state.userCookie);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (userInfo) {\n      (async () => {\n        setLoading (true);\n\n        const { data, error, message } = await getAllDriverStatus(userInfo.token, abortController.signal);\n\n        if (error) {\n          setError(error);\n        }\n        else {\n          setDrivers(data);\n        }\n        setLoading(false);\n      })();\n    }\n\n    return (() => abortController.abort());\n  }, [userInfo]);\n\n\n  useEffect(() => {\n    if (error) {\n      setMessage(error);\n    }\n    else {\n      if (!error && drivers.length === 0) {\n        setMessage('Driver Lists Empty!');\n      }\n      else {\n        setMessage(null);\n      }\n    }\n  }, [error, drivers]);\n\n\n  return (\n    <>\n      { message && <Message variant='info'>{message}</Message>}\n      { loading && <Loader />}\n      { drivers.length > 0 && <CustomTable\n        rows={drivers}\n        columns={columns}\n        edit={() => {console.log('nothing!')}}\n        type=\"driver\"\n      />}\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/driverRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CreateReservation.js",["489"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\n\nimport FormContainer from '../components/FormContainer';\nimport ReservationSteps from '../components/ReservationSteps';\nimport { RESERVATION_CLEAR_DATA } from '../constants/reservationConstants';\nimport { saveReservationInfo } from '../actions/reservationActions';\n\n\nconst reservationTimeSlots = [\n  '9:00 AM',\n  '10:00 AM',\n  '11:00 AM',\n  '12:00 PM',\n  '1:00 PM',\n  '2:00 PM',\n  '3:00 PM',\n  '4:00 PM',\n  '5:00 PM',\n  '6:00 PM',\n  '7:00 PM',\n  '8:00 PM',\n  '9:00 PM',\n  '10:00 PM',\n];\n\n\nexport default function CreateReservation ({history}) {\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const dispatch = useDispatch();\n\n  const [ reservation, setReservation ] = useState({\n    numOfPax: 1,\n    date: '',\n    time: ''\n  });\n\n\n  const handleOnChange = (e) => {\n    setReservation({\n      ...reservation,\n      [e.target.name] : e.target.value\n    });\n  };\n\n\n  const resetData = (e) => {\n    e.preventDefault();\n    setReservation({\n      numOfPax: 1,\n      date: '',\n      time: ''\n    });\n    dispatch({\n      type: RESERVATION_CLEAR_DATA\n    });\n  }\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { numOfPax, date, time } = reservation;\n    if ( parseInt(numOfPax) > 1 || date !== '' || time !== '') {\n      dispatch(saveReservationInfo(reservation));\n      history.push('/reserve-add-ons');\n    }\n  };\n\n\n  useEffect(() => {\n    if (!userInfo) {\n      // if no credentials found in cookie, log out the account\n      history.push('/');\n    }\n  }, [userInfo]);\n\n  return (\n    <>\n      <ReservationSteps step1={true}/>\n      <FormContainer>\n        <h5>Create Reservation</h5>\n        <Form onSubmit={submitHandler}>\n\n          <Form.Group controlId='numOfPax'>\n            <Form.Label>Number of Pax</Form.Label>\n            <Form.Control\n              type='number'\n              name='numOfPax'\n              min='1'\n              value={reservation.numOfPax}\n              onChange={handleOnChange}\n              required\n              />\n          </Form.Group>\n\n          <Form.Group controlId='date'>\n            <Form.Label>Preferred Date</Form.Label>\n            <Form.Control\n              type='date'\n              name='date'\n              value={reservation.date}\n              onChange={handleOnChange}\n              required\n              />\n          </Form.Group>\n\n          <Form.Group controlId='time'>\n            <Form.Label>Time</Form.Label>\n            <Form.Control\n              as='select'\n              name='time'\n              value={reservation.time}\n              onChange={handleOnChange}\n              required\n              >\n              <option value=''>Choose Time</option>\n              { reservationTimeSlots.map( (slot, idx) => (\n                <option key={idx} value={slot}>{slot}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button\n            variant='primary'\n            className='mr-1'\n            type='submit'\n          >\n            Preceed\n          </Button>\n          <Button\n            variant='secondary'\n            className='mx-1'\n            onClick={resetData}\n          >\n            Reset\n          </Button>\n\n        </Form>\n      </FormContainer>\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ReservationSteps.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/reservationReducer.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/reservationConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PreOrder.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/reservationActions.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReserveConfirm.js",["490"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport ReservationSteps from '../components/ReservationSteps';\nimport { createNewReservationRequest } from '../networking/reservationRequests';\nimport { RESERVATION_CLEAR_DATA } from '../constants/reservationConstants';\n\n\nexport default function ReserveConfirm () {\n\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ reservationCreated, setReservationCreated ] = useState(false);\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const { info, preOrder } = useSelector(state => state.reservation);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const confirmReservationClick = async (e) => {\n    try {\n      e.preventDefault();\n      setLoading(true);\n\n      const body = {\n        user : userInfo.id,\n        num_of_pax : parseInt(info.numOfPax),\n        reservedDateTime : `${info.date} ${info.time}`\n      }\n\n      const { error, data, message } = await createNewReservationRequest (body, userInfo.token);\n\n      if (error) {\n        setError(message);\n      }\n      else {\n        setReservationCreated(true);\n        setError(null);\n        dispatch({\n          type : RESERVATION_CLEAR_DATA\n        });\n        history.push(`/reservations/${data._id}`);\n      }\n    }\n    catch (error) {\n      console.error(error.message);\n      setError(error.message);\n    }\n  }\n\n\n  useEffect(() => {\n\n    if (!userInfo) {\n      history.push('/');\n    }\n\n    if (info && !(info.date) && !reservationCreated) {\n      history.push('/reserve-table')\n    }\n  }, [info, userInfo]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [error, loading, history, reservationCreated])\n\n  return (\n    <>\n      {info &&\n        <>\n          <ReservationSteps\n            step1={true}\n            step2={true}\n            step3={true}\n          />\n          <FormContainer>\n            { error && <Message variant='danger'>{error}</Message> }\n            { loading && <Loader /> }\n            <h4>It's almost done!</h4>\n            <p>\n              Please check the below details and confirm your reservation!\n              <br/>You can always change back the details by clicking on the navigation above.\n            </p>\n            <br/>\n            Number of Pax: <h5>{info.numOfPax}</h5>\n            Date: <h5>{info.date}</h5>\n            Time: <h5>{info.time}</h5>\n            Pre-Order: <h5>{preOrder ? '2 item(s)' : 'N.A' }</h5>\n            <br/>\n            <Button\n              variant='primary'\n              className='my-1'\n              onClick={confirmReservationClick}\n            >\n              Confirm Reservation\n            </Button>\n          </FormContainer>\n        </>\n      }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/reservationRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationListScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationScreen.js",[],{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","severity":1,"message":"496","line":52,"column":8,"nodeType":"497","endLine":52,"endColumn":37,"suggestions":"498"},{"ruleId":"499","severity":1,"message":"500","line":134,"column":84,"nodeType":"501","messageId":"502","endLine":134,"endColumn":86},{"ruleId":"495","severity":1,"message":"503","line":53,"column":8,"nodeType":"497","endLine":53,"endColumn":42,"suggestions":"504"},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"495","severity":1,"message":"509","line":63,"column":8,"nodeType":"497","endLine":63,"endColumn":33,"suggestions":"510"},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"511","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":14},{"ruleId":"505","severity":1,"message":"512","line":3,"column":16,"nodeType":"507","messageId":"508","endLine":3,"endColumn":22},{"ruleId":"505","severity":1,"message":"513","line":3,"column":34,"nodeType":"507","messageId":"508","endLine":3,"endColumn":39},{"ruleId":"495","severity":1,"message":"503","line":44,"column":6,"nodeType":"497","endLine":44,"endColumn":16,"suggestions":"514"},{"ruleId":"505","severity":1,"message":"515","line":9,"column":10,"nodeType":"507","messageId":"508","endLine":9,"endColumn":18},{"ruleId":"505","severity":1,"message":"516","line":9,"column":20,"nodeType":"507","messageId":"508","endLine":9,"endColumn":32},{"ruleId":"505","severity":1,"message":"517","line":10,"column":10,"nodeType":"507","messageId":"508","endLine":10,"endColumn":25},{"ruleId":"505","severity":1,"message":"518","line":10,"column":27,"nodeType":"507","messageId":"508","endLine":10,"endColumn":46},{"ruleId":"505","severity":1,"message":"519","line":15,"column":12,"nodeType":"507","messageId":"508","endLine":15,"endColumn":20},{"ruleId":"505","severity":1,"message":"520","line":15,"column":22,"nodeType":"507","messageId":"508","endLine":15,"endColumn":33},{"ruleId":"505","severity":1,"message":"521","line":21,"column":11,"nodeType":"507","messageId":"508","endLine":21,"endColumn":19},{"ruleId":"495","severity":1,"message":"522","line":95,"column":8,"nodeType":"497","endLine":95,"endColumn":18,"suggestions":"523"},{"ruleId":"495","severity":1,"message":"496","line":43,"column":8,"nodeType":"497","endLine":43,"endColumn":46,"suggestions":"524"},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"525","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":23},{"ruleId":"505","severity":1,"message":"513","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":15},{"ruleId":"505","severity":1,"message":"512","line":3,"column":17,"nodeType":"507","messageId":"508","endLine":3,"endColumn":23},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"499","severity":1,"message":"526","line":32,"column":22,"nodeType":"501","messageId":"502","endLine":32,"endColumn":24},{"ruleId":"495","severity":1,"message":"496","line":78,"column":8,"nodeType":"497","endLine":78,"endColumn":37,"suggestions":"527"},{"ruleId":"505","severity":1,"message":"528","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":15},{"ruleId":"505","severity":1,"message":"529","line":18,"column":9,"nodeType":"507","messageId":"508","endLine":18,"endColumn":16},{"ruleId":"505","severity":1,"message":"530","line":10,"column":5,"nodeType":"507","messageId":"508","endLine":10,"endColumn":23},{"ruleId":"505","severity":1,"message":"517","line":19,"column":5,"nodeType":"507","messageId":"508","endLine":19,"endColumn":20},{"ruleId":"505","severity":1,"message":"531","line":24,"column":5,"nodeType":"507","messageId":"508","endLine":24,"endColumn":24},{"ruleId":"505","severity":1,"message":"518","line":33,"column":5,"nodeType":"507","messageId":"508","endLine":33,"endColumn":24},{"ruleId":"505","severity":1,"message":"532","line":290,"column":15,"nodeType":"507","messageId":"508","endLine":290,"endColumn":19},{"ruleId":"505","severity":1,"message":"532","line":117,"column":17,"nodeType":"507","messageId":"508","endLine":117,"endColumn":21},{"ruleId":"505","severity":1,"message":"533","line":147,"column":26,"nodeType":"507","messageId":"508","endLine":147,"endColumn":34},{"ruleId":"505","severity":1,"message":"533","line":187,"column":26,"nodeType":"507","messageId":"508","endLine":187,"endColumn":34},{"ruleId":"505","severity":1,"message":"534","line":21,"column":5,"nodeType":"507","messageId":"508","endLine":21,"endColumn":30},{"ruleId":"505","severity":1,"message":"535","line":39,"column":5,"nodeType":"507","messageId":"508","endLine":39,"endColumn":28},{"ruleId":"505","severity":1,"message":"533","line":245,"column":26,"nodeType":"507","messageId":"508","endLine":245,"endColumn":34},{"ruleId":"495","severity":1,"message":"496","line":94,"column":6,"nodeType":"497","endLine":94,"endColumn":20,"suggestions":"536"},{"ruleId":"495","severity":1,"message":"503","line":117,"column":5,"nodeType":"497","endLine":117,"endColumn":49,"suggestions":"537"},{"ruleId":"505","severity":1,"message":"538","line":1,"column":27,"nodeType":"507","messageId":"508","endLine":1,"endColumn":36},{"ruleId":"505","severity":1,"message":"539","line":15,"column":8,"nodeType":"507","messageId":"508","endLine":15,"endColumn":18},{"ruleId":"505","severity":1,"message":"540","line":17,"column":8,"nodeType":"507","messageId":"508","endLine":17,"endColumn":22},{"ruleId":"505","severity":1,"message":"541","line":27,"column":9,"nodeType":"507","messageId":"508","endLine":27,"endColumn":26},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"495","severity":1,"message":"496","line":70,"column":6,"nodeType":"497","endLine":70,"endColumn":16,"suggestions":"542"},{"ruleId":"495","severity":1,"message":"496","line":60,"column":6,"nodeType":"497","endLine":60,"endColumn":17,"suggestions":"543"},{"ruleId":"495","severity":1,"message":"496","line":82,"column":6,"nodeType":"497","endLine":82,"endColumn":25,"suggestions":"544"},{"ruleId":"495","severity":1,"message":"545","line":99,"column":6,"nodeType":"497","endLine":99,"endColumn":34,"suggestions":"546"},{"ruleId":"505","severity":1,"message":"512","line":4,"column":26,"nodeType":"507","messageId":"508","endLine":4,"endColumn":32},{"ruleId":"495","severity":1,"message":"503","line":52,"column":6,"nodeType":"497","endLine":52,"endColumn":16,"suggestions":"547"},{"ruleId":"495","severity":1,"message":"548","line":67,"column":6,"nodeType":"497","endLine":67,"endColumn":22,"suggestions":"549"},{"ruleId":"505","severity":1,"message":"550","line":25,"column":20,"nodeType":"507","messageId":"508","endLine":25,"endColumn":25},{"ruleId":"495","severity":1,"message":"551","line":86,"column":6,"nodeType":"497","endLine":86,"endColumn":15,"suggestions":"552"},{"ruleId":"505","severity":1,"message":"553","line":66,"column":11,"nodeType":"507","messageId":"508","endLine":66,"endColumn":18},{"ruleId":"505","severity":1,"message":"550","line":66,"column":20,"nodeType":"507","messageId":"508","endLine":66,"endColumn":25},{"ruleId":"495","severity":1,"message":"496","line":79,"column":6,"nodeType":"497","endLine":79,"endColumn":23,"suggestions":"554"},{"ruleId":"505","severity":1,"message":"555","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":14},{"ruleId":"505","severity":1,"message":"553","line":26,"column":11,"nodeType":"507","messageId":"508","endLine":26,"endColumn":18},{"ruleId":"505","severity":1,"message":"556","line":28,"column":11,"nodeType":"507","messageId":"508","endLine":28,"endColumn":22},{"ruleId":"495","severity":1,"message":"496","line":76,"column":6,"nodeType":"497","endLine":76,"endColumn":36,"suggestions":"557"},{"ruleId":"495","severity":1,"message":"558","line":110,"column":6,"nodeType":"497","endLine":110,"endColumn":22,"suggestions":"559"},{"ruleId":"495","severity":1,"message":"560","line":126,"column":6,"nodeType":"497","endLine":126,"endColumn":34,"suggestions":"561"},{"ruleId":"505","severity":1,"message":"538","line":1,"column":27,"nodeType":"507","messageId":"508","endLine":1,"endColumn":36},{"ruleId":"505","severity":1,"message":"562","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":21},{"ruleId":"505","severity":1,"message":"563","line":2,"column":23,"nodeType":"507","messageId":"508","endLine":2,"endColumn":34},{"ruleId":"505","severity":1,"message":"564","line":23,"column":26,"nodeType":"507","messageId":"508","endLine":23,"endColumn":42},{"ruleId":"505","severity":1,"message":"565","line":24,"column":24,"nodeType":"507","messageId":"508","endLine":24,"endColumn":38},{"ruleId":"505","severity":1,"message":"566","line":25,"column":25,"nodeType":"507","messageId":"508","endLine":25,"endColumn":40},{"ruleId":"495","severity":1,"message":"496","line":37,"column":6,"nodeType":"497","endLine":37,"endColumn":34,"suggestions":"567"},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"568","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":20},{"ruleId":"505","severity":1,"message":"569","line":34,"column":9,"nodeType":"507","messageId":"508","endLine":34,"endColumn":25},{"ruleId":"505","severity":1,"message":"570","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":18},{"ruleId":"505","severity":1,"message":"571","line":3,"column":28,"nodeType":"507","messageId":"508","endLine":3,"endColumn":39},{"ruleId":"505","severity":1,"message":"572","line":3,"column":41,"nodeType":"507","messageId":"508","endLine":3,"endColumn":50},{"ruleId":"505","severity":1,"message":"573","line":10,"column":10,"nodeType":"507","messageId":"508","endLine":10,"endColumn":29},{"ruleId":"505","severity":1,"message":"574","line":44,"column":11,"nodeType":"507","messageId":"508","endLine":44,"endColumn":17},{"ruleId":"505","severity":1,"message":"575","line":44,"column":19,"nodeType":"507","messageId":"508","endLine":44,"endColumn":28},{"ruleId":"505","severity":1,"message":"576","line":45,"column":11,"nodeType":"507","messageId":"508","endLine":45,"endColumn":18},{"ruleId":"505","severity":1,"message":"577","line":45,"column":20,"nodeType":"507","messageId":"508","endLine":45,"endColumn":29},{"ruleId":"505","severity":1,"message":"521","line":50,"column":9,"nodeType":"507","messageId":"508","endLine":50,"endColumn":17},{"ruleId":"505","severity":1,"message":"578","line":7,"column":7,"nodeType":"507","messageId":"508","endLine":7,"endColumn":13},{"ruleId":"505","severity":1,"message":"579","line":3,"column":24,"nodeType":"507","messageId":"508","endLine":3,"endColumn":27},{"ruleId":"505","severity":1,"message":"580","line":3,"column":29,"nodeType":"507","messageId":"508","endLine":3,"endColumn":32},{"ruleId":"505","severity":1,"message":"513","line":3,"column":34,"nodeType":"507","messageId":"508","endLine":3,"endColumn":39},{"ruleId":"505","severity":1,"message":"581","line":6,"column":26,"nodeType":"507","messageId":"508","endLine":6,"endColumn":43},{"ruleId":"495","severity":1,"message":"582","line":47,"column":6,"nodeType":"497","endLine":47,"endColumn":16,"suggestions":"583"},{"ruleId":"505","severity":1,"message":"562","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":21},{"ruleId":"505","severity":1,"message":"584","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":11},{"ruleId":"505","severity":1,"message":"585","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":13},{"ruleId":"505","severity":1,"message":"586","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":17},{"ruleId":"505","severity":1,"message":"512","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":14},{"ruleId":"505","severity":1,"message":"587","line":7,"column":8,"nodeType":"507","messageId":"508","endLine":7,"endColumn":18},{"ruleId":"505","severity":1,"message":"588","line":8,"column":8,"nodeType":"507","messageId":"508","endLine":8,"endColumn":15},{"ruleId":"505","severity":1,"message":"589","line":9,"column":8,"nodeType":"507","messageId":"508","endLine":9,"endColumn":24},{"ruleId":"505","severity":1,"message":"590","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":19},{"ruleId":"505","severity":1,"message":"578","line":20,"column":7,"nodeType":"507","messageId":"508","endLine":20,"endColumn":13},{"ruleId":"505","severity":1,"message":"591","line":74,"column":30,"nodeType":"507","messageId":"508","endLine":74,"endColumn":37},{"ruleId":"495","severity":1,"message":"503","line":78,"column":6,"nodeType":"497","endLine":78,"endColumn":16,"suggestions":"592"},{"ruleId":"495","severity":1,"message":"593","line":67,"column":6,"nodeType":"497","endLine":67,"endColumn":22,"suggestions":"594"},"no-native-reassign",["595"],"no-negated-in-lhs",["596"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["597"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["598"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["599"],"'Form' is defined but never used.","'Button' is defined but never used.","'Table' is defined but never used.",["600"],"'payOrder' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'orderId'. Either include them or remove the dependency array.",["601"],["602"],"'LinkContainer' is defined but never used.","Expected '!==' and instead saw '!='.",["603"],"'Cookies' is defined but never used.","'history' is assigned a value but never used.","'ORDER_CANCEL_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'data' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'AVAILABLE_DRIVERS_RESET' is defined but never used.",["604"],["605"],"'useEffect' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'handleDeleteClick' is assigned a value but never used.",["606"],["607"],["608"],"React Hook useEffect has missing dependencies: 'closeEditUser' and 'dispatch'. Either include them or remove the dependency array. If 'closeEditUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["609"],["610"],"React Hook useEffect has a missing dependency: 'deliveries.length'. Either include it or remove the dependency array.",["611"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'newProduct.name'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessage' needs the current value of 'newProduct.name'.",["612"],"'loading' is assigned a value but never used.",["613"],"'Loader' is defined but never used.","'updateError' is assigned a value but never used.",["614"],"React Hook useEffect has missing dependencies: 'dispatch', 'product.description', 'product.name', and 'product.price'. Either include them or remove the dependency array.",["615"],"React Hook useEffect has missing dependencies: 'backToProductList' and 'dispatch'. Either include them or remove the dependency array. If 'backToProductList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["616"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'setMonthlyOrders' is assigned a value but never used.","'setDailyOrders' is assigned a value but never used.","'setActiveOrders' is assigned a value but never used.",["617"],"'OrderDetails' is defined but never used.","'displayOrderItem' is assigned a value but never used.","'Dropdown' is defined but never used.","'ButtonGroup' is defined but never used.","'ListGroup' is defined but never used.","'getAvailableDrivers' is defined but never used.","'driver' is assigned a value but never used.","'setDriver' is assigned a value but never used.","'drivers' is assigned a value but never used.","'setDrives' is assigned a value but never used.","'styles' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'updateUserProfile' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["618"],"'Box' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'IconButton' is defined but never used.","'AddIcon' is defined but never used.","'FileDownloadIcon' is defined but never used.","'RefreshIcon' is defined but never used.","'message' is assigned a value but never used.",["619"],"React Hook useEffect has missing dependencies: 'history' and 'reservationCreated'. Either include them or remove the dependency array.",["620"],"no-global-assign","no-unsafe-negation",{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"621","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"627","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"627","fix":"663"},{"desc":"664","fix":"665"},"Update the dependencies array to be: [history, userInfo, redirect, dispatch]",{"range":"666","text":"667"},"Update the dependencies array to be: [dispatch, keyword, displayHeader, history]",{"range":"668","text":"669"},"Update the dependencies array to be: [success, history, error, order._id, dispatch]",{"range":"670","text":"671"},"Update the dependencies array to be: [history, userInfo]",{"range":"672","text":"673"},"Update the dependencies array to be: [history, orderId, userInfo]",{"range":"674","text":"675"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"676","text":"677"},{"range":"678","text":"667"},"Update the dependencies array to be: [dispatch, openEditUser]",{"range":"679","text":"680"},"Update the dependencies array to be: [open, page, hideHeader, dispatch, userInfo, history]",{"range":"681","text":"682"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"683","text":"684"},"Update the dependencies array to be: [dispatch, editingID]",{"range":"685","text":"686"},"Update the dependencies array to be: [userInfo, success, dispatch]",{"range":"687","text":"688"},"Update the dependencies array to be: [closeEditUser, dispatch, errorDelete, successDelete]",{"range":"689","text":"690"},{"range":"691","text":"673"},"Update the dependencies array to be: [deliveries.length, error, loading]",{"range":"692","text":"693"},"Update the dependencies array to be: [dispatch, newProduct.name, product]",{"range":"694","text":"695"},"Update the dependencies array to be: [dispatch, openEditProduct]",{"range":"696","text":"697"},"Update the dependencies array to be: [editingID, backToProductList, dispatch]",{"range":"698","text":"699"},"Update the dependencies array to be: [dispatch, product.description, product.name, product.price, updatedProduct]",{"range":"700","text":"701"},"Update the dependencies array to be: [backToProductList, dispatch, errorDelete, successDelete]",{"range":"702","text":"703"},"Update the dependencies array to be: [userInfo, showOrderDetails, dispatch]",{"range":"704","text":"705"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"706","text":"707"},{"range":"708","text":"673"},"Update the dependencies array to be: [history, info, reservationCreated, userInfo]",{"range":"709","text":"710"},[1402,1431],"[history, userInfo, redirect, dispatch]",[1484,1518],"[dispatch, keyword, displayHeader, history]",[2174,2199],"[success, history, error, order._id, dispatch]",[954,964],"[history, userInfo]",[2717,2727],"[history, orderId, userInfo]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2107,2136],[2132,2146],"[dispatch, openEditUser]",[3070,3114],"[open, page, hideHeader, dispatch, userInfo, history]",[1708,1718],"[dispatch, userInfo]",[1708,1719],"[dispatch, editingID]",[2143,2162],"[userInfo, success, dispatch]",[2429,2457],"[closeEditUser, dispatch, errorDelete, successDelete]",[1339,1349],[1588,1604],"[deliveries.length, error, loading]",[2327,2336],"[dispatch, newProduct.name, product]",[1932,1949],"[dispatch, openEditProduct]",[2404,2434],"[editingID, backToProductList, dispatch]",[3193,3209],"[dispatch, product.description, product.name, product.price, updatedProduct]",[3482,3510],"[backToProductList, dispatch, errorDelete, successDelete]",[973,1001],"[userInfo, showOrderDetails, dispatch]",[1057,1067],"[dispatch, history, userInfo]",[1650,1660],[1889,1905],"[history, info, reservationCreated, userInfo]"]