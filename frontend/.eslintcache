[{"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/index.js":"1","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/store.js":"2","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reportWebVitals.js":"3","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/App.js":"4","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/userReducers.js":"5","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/cartReducers.js":"6","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/productReducers.js":"7","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/orderReducers.js":"8","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/LoginScreen.js":"9","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductScreen.js":"10","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CartScreen.js":"11","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/HomeScreen.js":"12","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PlaceOrderScreen.js":"13","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserListScreen.js":"14","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProfileScreen.js":"15","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderScreen.js":"16","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ShippingScreen.js":"17","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PaymentScreen.js":"18","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserEditScreen.js":"19","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderListScreen.js":"20","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductListScreen.js":"21","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductEditScreen.js":"22","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Footer.js":"23","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/RegisterScreen.js":"24","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Header.js":"25","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Loader.js":"26","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Message.js":"27","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/FormContainer.js":"28","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Product.js":"29","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Paginate.js":"30","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Rating.js":"31","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/CheckoutSteps.js":"32","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ProductCarousel.js":"33","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/SearchBox.js":"34","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/cartConstants.js":"35","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/userConstants.js":"36","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/productConstants.js":"37","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/orderConstants.js":"38","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/orderActions.js":"39","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/productActions.js":"40","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/userActions.js":"41","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/cartActions.js":"42","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminAppbar.js":"43","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminDrawerMenu.js":"44","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserList.js":"45","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Admin.js":"46","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Dashboard.js":"47","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTable.js":"48","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableHead.js":"49","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableBody.js":"50","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserAdminDashboard.js":"51","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/CreateUser.js":"52","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/EditUser.js":"53","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/driver/Dashboard.js":"54","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductDashboard.js":"55","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/CreateProduct.js":"56","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductList.js":"57","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/EditProduct.js":"58","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Setting.js":"59","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Profile.js":"60","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrdersSummary.js":"61","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDashboard.js":"62","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderList.js":"63","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderCard.js":"64","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDetails.js":"65","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/AsignDriver.js":"66","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/orderRequests.js":"67","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverDashboard.js":"68","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/reservations/ReservationDashboard.js":"69","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ConfirmationBox.js":"70","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderItem.js":"71","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CustomerDetails.js":"72","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/SavedPlaces.js":"73","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/addressRequests.js":"74","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddressCard.js":"75","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddNewPlaceForm.js":"76","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverList.js":"77","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/driverRequests.js":"78","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CreateReservation.js":"79","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ReservationSteps.js":"80","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/reservationReducer.js":"81","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/reservationConstants.js":"82","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PreOrder.js":"83","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/reservationActions.js":"84","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReserveConfirm.js":"85","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/reservationRequests.js":"86","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationListScreen.js":"87","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationScreen.js":"88","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/DriverStats.js":"89","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverStatus.js":"90","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Restaurant.js":"91","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/restaurantRequests.js":"92","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/RestaurantCarousel.js":"93","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/RestaurantScreen.js":"94","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/RestaurantProducts.js":"95","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/productRequests.js":"96","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/Dashboard.js":"97","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/RestaurantOwner.js":"98","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/Appbar.js":"99","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/DrawerMenu.js":"100","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/ProductDashboard.js":"101","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/ProductList.js":"102","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/CreateProduct.js":"103","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/CustomTable.js":"104","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/EditProduct.js":"105","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/CustomTableHead.js":"106","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/CustomTableBody.js":"107","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/MyRestaurant.js":"108","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/restaurantReducers.js":"109","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/restaurantConstants.js":"110","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/restaurantActions.js":"111","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/RestaurantDetails.js":"112","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/LocationContact.js":"113","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/NewRestaurant.js":"114","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/feature_products/FeatureProducts.js":"115"},{"size":595,"mtime":1639886829888,"results":"116","hashOfConfig":"117"},{"size":2947,"mtime":1641926827868,"results":"118","hashOfConfig":"117"},{"size":362,"mtime":1638782074047,"results":"119","hashOfConfig":"117"},{"size":3766,"mtime":1641920910204,"results":"120","hashOfConfig":"117"},{"size":5126,"mtime":1641120786974,"results":"121","hashOfConfig":"117"},{"size":1486,"mtime":1638782074045,"results":"122","hashOfConfig":"117"},{"size":4200,"mtime":1640667424255,"results":"123","hashOfConfig":"117"},{"size":4770,"mtime":1639886829889,"results":"124","hashOfConfig":"117"},{"size":3071,"mtime":1642037866355,"results":"125","hashOfConfig":"117"},{"size":11144,"mtime":1641872598667,"results":"126","hashOfConfig":"117"},{"size":4793,"mtime":1640105145964,"results":"127","hashOfConfig":"117"},{"size":2842,"mtime":1642290526641,"results":"128","hashOfConfig":"117"},{"size":7703,"mtime":1641277044018,"results":"129","hashOfConfig":"117"},{"size":3511,"mtime":1638782074051,"results":"130","hashOfConfig":"117"},{"size":1464,"mtime":1641484008370,"results":"131","hashOfConfig":"117"},{"size":9466,"mtime":1641279972626,"results":"132","hashOfConfig":"117"},{"size":6024,"mtime":1640797385159,"results":"133","hashOfConfig":"117"},{"size":3087,"mtime":1641276343072,"results":"134","hashOfConfig":"117"},{"size":3912,"mtime":1638782074051,"results":"135","hashOfConfig":"117"},{"size":3392,"mtime":1641407870206,"results":"136","hashOfConfig":"117"},{"size":5007,"mtime":1638782074050,"results":"137","hashOfConfig":"117"},{"size":7916,"mtime":1638782074050,"results":"138","hashOfConfig":"117"},{"size":361,"mtime":1638782074040,"results":"139","hashOfConfig":"117"},{"size":5228,"mtime":1641604803385,"results":"140","hashOfConfig":"117"},{"size":5635,"mtime":1642036810088,"results":"141","hashOfConfig":"117"},{"size":458,"mtime":1638782074041,"results":"142","hashOfConfig":"117"},{"size":228,"mtime":1638782074041,"results":"143","hashOfConfig":"117"},{"size":378,"mtime":1638782074040,"results":"144","hashOfConfig":"117"},{"size":1008,"mtime":1638782074041,"results":"145","hashOfConfig":"117"},{"size":859,"mtime":1638782074041,"results":"146","hashOfConfig":"117"},{"size":1903,"mtime":1642302943025,"results":"147","hashOfConfig":"117"},{"size":1873,"mtime":1640106737406,"results":"148","hashOfConfig":"117"},{"size":1420,"mtime":1638782074041,"results":"149","hashOfConfig":"117"},{"size":847,"mtime":1642039251458,"results":"150","hashOfConfig":"117"},{"size":287,"mtime":1638782074043,"results":"151","hashOfConfig":"117"},{"size":1904,"mtime":1639886829886,"results":"152","hashOfConfig":"117"},{"size":1561,"mtime":1639886829886,"results":"153","hashOfConfig":"117"},{"size":1470,"mtime":1639886829885,"results":"154","hashOfConfig":"117"},{"size":6844,"mtime":1641324070127,"results":"155","hashOfConfig":"117"},{"size":6550,"mtime":1642300477279,"results":"156","hashOfConfig":"117"},{"size":8595,"mtime":1642066645987,"results":"157","hashOfConfig":"117"},{"size":1415,"mtime":1639886829856,"results":"158","hashOfConfig":"117"},{"size":1548,"mtime":1639886829860,"results":"159","hashOfConfig":"117"},{"size":4376,"mtime":1642070980999,"results":"160","hashOfConfig":"117"},{"size":3696,"mtime":1641323543337,"results":"161","hashOfConfig":"117"},{"size":3503,"mtime":1642071066748,"results":"162","hashOfConfig":"117"},{"size":126,"mtime":1639886829866,"results":"163","hashOfConfig":"117"},{"size":5168,"mtime":1642300319889,"results":"164","hashOfConfig":"117"},{"size":1953,"mtime":1642299241715,"results":"165","hashOfConfig":"117"},{"size":3420,"mtime":1642291034624,"results":"166","hashOfConfig":"117"},{"size":499,"mtime":1639886829882,"results":"167","hashOfConfig":"117"},{"size":4613,"mtime":1642066849628,"results":"168","hashOfConfig":"117"},{"size":5208,"mtime":1641616956372,"results":"169","hashOfConfig":"117"},{"size":3680,"mtime":1641325021094,"results":"170","hashOfConfig":"117"},{"size":603,"mtime":1639886829879,"results":"171","hashOfConfig":"117"},{"size":4365,"mtime":1641108883048,"results":"172","hashOfConfig":"117"},{"size":3180,"mtime":1639886829880,"results":"173","hashOfConfig":"117"},{"size":5676,"mtime":1641109783636,"results":"174","hashOfConfig":"117"},{"size":123,"mtime":1639886829869,"results":"175","hashOfConfig":"117"},{"size":124,"mtime":1639886829867,"results":"176","hashOfConfig":"117"},{"size":1554,"mtime":1639886829872,"results":"177","hashOfConfig":"117"},{"size":268,"mtime":1639886829870,"results":"178","hashOfConfig":"117"},{"size":2282,"mtime":1641408612247,"results":"179","hashOfConfig":"117"},{"size":2127,"mtime":1641483427426,"results":"180","hashOfConfig":"117"},{"size":6347,"mtime":1641277939319,"results":"181","hashOfConfig":"117"},{"size":3356,"mtime":1640797049982,"results":"182","hashOfConfig":"117"},{"size":3244,"mtime":1641414459233,"results":"183","hashOfConfig":"117"},{"size":168,"mtime":1640116829598,"results":"184","hashOfConfig":"117"},{"size":1132,"mtime":1641188311846,"results":"185","hashOfConfig":"117"},{"size":1098,"mtime":1640046810308,"results":"186","hashOfConfig":"117"},{"size":1281,"mtime":1640075990518,"results":"187","hashOfConfig":"117"},{"size":4887,"mtime":1641178241529,"results":"188","hashOfConfig":"117"},{"size":2592,"mtime":1640797308353,"results":"189","hashOfConfig":"117"},{"size":1125,"mtime":1640093934761,"results":"190","hashOfConfig":"117"},{"size":851,"mtime":1640092543109,"results":"191","hashOfConfig":"117"},{"size":3030,"mtime":1640797523136,"results":"192","hashOfConfig":"117"},{"size":2697,"mtime":1641824610159,"results":"193","hashOfConfig":"117"},{"size":1716,"mtime":1641837443860,"results":"194","hashOfConfig":"117"},{"size":3845,"mtime":1641185110871,"results":"195","hashOfConfig":"117"},{"size":674,"mtime":1640700252472,"results":"196","hashOfConfig":"117"},{"size":1182,"mtime":1641923567580,"results":"197","hashOfConfig":"117"},{"size":330,"mtime":1640644976351,"results":"198","hashOfConfig":"117"},{"size":1186,"mtime":1640797411516,"results":"199","hashOfConfig":"117"},{"size":830,"mtime":1640665287107,"results":"200","hashOfConfig":"117"},{"size":3035,"mtime":1640797020594,"results":"201","hashOfConfig":"117"},{"size":2214,"mtime":1641323237193,"results":"202","hashOfConfig":"117"},{"size":4334,"mtime":1641323449045,"results":"203","hashOfConfig":"117"},{"size":4146,"mtime":1640797252274,"results":"204","hashOfConfig":"117"},{"size":3631,"mtime":1641483967179,"results":"205","hashOfConfig":"117"},{"size":936,"mtime":1641823957966,"results":"206","hashOfConfig":"117"},{"size":657,"mtime":1642290387831,"results":"207","hashOfConfig":"117"},{"size":1045,"mtime":1642071345927,"results":"208","hashOfConfig":"117"},{"size":690,"mtime":1641871823207,"results":"209","hashOfConfig":"117"},{"size":3504,"mtime":1641877387768,"results":"210","hashOfConfig":"117"},{"size":1802,"mtime":1641872072410,"results":"211","hashOfConfig":"117"},{"size":2140,"mtime":1642303574400,"results":"212","hashOfConfig":"117"},{"size":1099,"mtime":1642067067886,"results":"213","hashOfConfig":"117"},{"size":3438,"mtime":1642255792073,"results":"214","hashOfConfig":"117"},{"size":1556,"mtime":1641921310607,"results":"215","hashOfConfig":"117"},{"size":4793,"mtime":1641929392078,"results":"216","hashOfConfig":"117"},{"size":1057,"mtime":1642067761482,"results":"217","hashOfConfig":"117"},{"size":3452,"mtime":1642067557671,"results":"218","hashOfConfig":"117"},{"size":4887,"mtime":1642267058110,"results":"219","hashOfConfig":"117"},{"size":6201,"mtime":1641922103884,"results":"220","hashOfConfig":"117"},{"size":7606,"mtime":1642266861455,"results":"221","hashOfConfig":"117"},{"size":2339,"mtime":1641922102131,"results":"222","hashOfConfig":"117"},{"size":3087,"mtime":1641922276573,"results":"223","hashOfConfig":"117"},{"size":2346,"mtime":1642069017385,"results":"224","hashOfConfig":"117"},{"size":1160,"mtime":1642069901044,"results":"225","hashOfConfig":"117"},{"size":705,"mtime":1642069657833,"results":"226","hashOfConfig":"117"},{"size":3312,"mtime":1642069987516,"results":"227","hashOfConfig":"117"},{"size":4232,"mtime":1642040501348,"results":"228","hashOfConfig":"117"},{"size":4974,"mtime":1642064912344,"results":"229","hashOfConfig":"117"},{"size":4726,"mtime":1642070055023,"results":"230","hashOfConfig":"117"},{"size":3603,"mtime":1642303705728,"results":"231","hashOfConfig":"117"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"1a3m54w",{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"234"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"234"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"234"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"234"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"234"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"234"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"234"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"234"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"234"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"234"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"234"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"234"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"234"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"234"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"234"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"234"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"234"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"234"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"234"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"234"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"234"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"234"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"234"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"234"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"234"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"234"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"234"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"234"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"234"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"234"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"234"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"234"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"234"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"234"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"234"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"234"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"234"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"234"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"234"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"234"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"234"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"234"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"234"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/index.js",[],["507","508"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/store.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reportWebVitals.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/App.js",["509","510"],"import { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport CreateReservation from './screens/CreateReservation';\nimport PreOrder from './screens/PreOrder';\nimport ReserveConfirm from './screens/ReserveConfirm';\nimport ReservationListScreen from './screens/ReservationListScreen';\nimport ReservationScreen from './screens/ReservationScreen';\nimport RestaurantScreen from './screens/RestaurantScreen';\n\nimport Admin from './admin/Admin';\nimport DriverDashboard from './driver/Dashboard';\nimport DriverStats from './screens/DriverStats';\n\nimport RestaurantOwner from './restaurant_owner/RestaurantOwner';\n\n\n\nfunction App() {\n\n  const [ showHeader, setShowHeader ] = useState(true);\n\n  const hideHeader = () => setShowHeader(false);\n\n  const displayHeader = () => setShowHeader(true);\n\n  return (\n    <Router>\n      <Header/>\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' exact\n            render={props =>\n              <HomeScreen />\n            }\n          />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/myorders' component={OrderListScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/restaurants/:id' component={RestaurantScreen} />\n\n          <Route path='/reserve-table' component={CreateReservation} />\n          <Route path='/reserve-add-ons' component={PreOrder} />\n          <Route path='/reserve-confirm' component={ReserveConfirm} />\n          <Route path='/my-reservations' component={ReservationListScreen} />\n          <Route path='/reservations/:id' component={ReservationScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/driver' component={DriverDashboard} />\n          <Route path='/driver-stats' component={DriverStats} />\n\n        </Container>\n        <Route path='/admin'\n          render={ props =>\n            <Admin hideHeader={hideHeader} />\n          }\n        />\n        <Route path='/restaurant-owner' component={RestaurantOwner} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/userReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/cartReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/productReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/orderReducers.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/LoginScreen.js",["511"],"import React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport { USER_LOGIN_CLEAR } from '../constants/userConstants';\n\n\nfunction LoginScreen({ location, history }) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const { error, loading, userInfo } = useSelector(state => state.userLogin);\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    };\n\n\n    useEffect(() => {\n\n      if (userInfo) {\n          // set cookies\n          Cookies.set('user', JSON.stringify(userInfo));\n\n          if (userInfo.isAdmin === 'No') {\n            history.push(redirect);\n          }\n          else if (userInfo.isAdmin === 'Yes') {\n            history.push('/admin');\n          }\n      }\n\n      return(() => {\n        if (userInfo) {\n          dispatch({\n            type:USER_LOGIN_CLEAR\n          })\n        }\n      });\n    }, [history, userInfo, redirect]);\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group className=\"mb-3\" controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductScreen.js",["512"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate;\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    const backButtonClicked = (e) => {\n      history.goBack();\n    }\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    return (\n        <div>\n            <Button\n              className='btn btn-light my-3'\n              onClick={backButtonClicked}\n            >\n              Go Back\n            </Button>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card className='mt-5'>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CartScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/HomeScreen.js",["513","514","515"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PlaceOrderScreen.js",["516","517","518"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\n\n\n\nfunction PlaceOrderScreen({ history }) {\n\n    const { order, error, success } = useSelector(state => state.orderCreate);\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    const placeOrder = (e) => {\n        e.preventDefault();\n        const { address, city, postalCode, country } = cart.shippingAddress;\n        const fullAddress = `${address}, ${city}, ${postalCode}, ${country}`;\n        console.log('cart', cart);\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: fullAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: parseFloat(cart.itemsPrice),\n            shippingPrice: parseFloat(cart.shippingPrice),\n            taxPrice: parseFloat(cart.taxPrice),\n            totalPrice: parseFloat(cart.totalPrice),\n            isPaid: cart.paymentMethod === 'Cash' ? false : true\n        }));\n    }\n\n    const discardOrder = (e) => {\n      e.preventDefault();\n      dispatch({\n        type: CART_CLEAR_ITEMS\n      });\n      history.push('/');\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n\n    }, [success, history, error]);\n\n    useEffect(() => {\n      if (cart.cartItems.length === 0) {\n        history.push('/');\n      }\n    }, [cart]);\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block btn-secondary'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={discardOrder}\n                                >\n                                    Discard Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserListScreen.js",["519"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProfileScreen.js",["520","521","522","523"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport Typography from '@mui/material/Typography';\n\nimport CustomerDetails from './CustomerDetails';\nimport SavedPlaces from './SavedPlaces';\n\n\nconst styles = {\n  link: {\n    marginTop : '15px',\n    marginBottom : '10px',\n    color: 'gray',\n    '&:hover': {\n      color: 'black',\n      cursor: 'pointer'\n    },\n  }\n}\n\n\nfunction switchContents (page) {\n  switch (page) {\n    case 'CustomerDetails':\n      return <CustomerDetails />;\n    case 'SavedPlaces':\n      return <SavedPlaces />;\n    default:\n      throw new Error('Invalid Page Choice!');\n  }\n}\n\n\nexport default function ProfileScreen({ history }) {\n\n  const [ page, setPage ] = useState('CustomerDetails');\n\n  const { userInfo } = useSelector(state => state.userCookie);\n\n\n  useEffect(() => {\n    if (!userInfo) history.push('/');\n  }, [userInfo]);\n\n  return (\n    <Row>\n      <Col xs lg='2'>\n        <Typography onClick={() => setPage('CustomerDetails')}\n          variant='subtitle1' sx={styles.link}>\n          Profile\n        </Typography>\n        { userInfo?.type === 'customer' &&\n          (<Typography onClick={() => setPage('SavedPlaces')}\n            variant='subtitle1' sx={styles.link}>\n            Saved Places\n          </Typography>)\n        }\n      </Col>\n      <Col>\n        {switchContents(page)}\n      </Col>\n    </Row>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderScreen.js",["524","525","526","527","528","529","530","531"],"import React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport MaterialButton from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { payOrder, deliverOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\nimport { getOrderDetails, cancelOrder, completeOrder } from '../networking/orderRequests';\n\nfunction OrderScreen({ match, history }) {\n\n    const [sdkReady, setSdkReady] = useState(false);\n    const [ order, setOrder ] = useState(null);\n    const [ loading, setLoading ] = useState(true);\n    const [ error, setError ] = useState(null);\n\n    const orderId = match.params.id\n    const dispatch = useDispatch();\n\n    const { userInfo } = useSelector(state => state.userCookie);\n\n    const toDate = (date) => {\n      const dt = new Date(date);\n      return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n    };\n\n\n    const calculateItemPrice = () => {\n      let itemPrice = Number(order.totalPrice) - (Number(order.taxPrice) + Number(order.shippingPrice));\n      return itemPrice.toFixed(2);\n    }\n\n\n    const deliverHandler = async (e) => {\n      e.preventDefault();\n      if (order && orderId) {\n        setLoading(true);\n        const {error, data, message} = await completeOrder(orderId, userInfo.token);\n        if (error) {\n          setError(message);\n        }\n        else {\n          setOrder(data);\n        }\n        setLoading(false);\n      }\n    }\n\n    const cancelOrderHandler = async (e) => {\n      e.preventDefault();\n      if (order && orderId) {\n        setLoading(true);\n        const {error, data, message} = await cancelOrder(orderId, userInfo.token);\n        if (error) {\n          setError(message);\n        }\n        else {\n          setOrder(data);\n        }\n        setLoading(false);\n      }\n    }\n\n    const handleBackButtonClick = () => {\n      history.goBack();\n    }\n\n\n    useEffect(() => {\n\n      const abortController = new AbortController();\n\n      if (userInfo && orderId) {\n        (async () => {\n          const { error, message, data } = await getOrderDetails(orderId, userInfo.token, abortController.signal);\n          if (error) {\n            setError(message);\n          }\n          else {\n            setOrder(data);\n          }\n          setLoading(false);\n        })();\n      }\n\n      if (!userInfo) {\n        history.push('/');\n      }\n\n      return (() => abortController.abort());\n\n    }, [userInfo]);\n\n    useEffect(() => {\n      if (error) {\n        setOrder(null);\n      }\n    }, [error]);\n\n    return loading ? (\n        <Loader />\n    ) : (\n      order ? (\n        <div>\n          <MaterialButton\n            onClick={handleBackButtonClick}\n            startIcon={<ArrowBackIcon />}\n          >\n            Back\n          </MaterialButton>\n            <h1>Order: #{order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong> {order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.username}`}>{order.user.username}</a></p>\n                            <p>\n                                <strong>Delivered Address: </strong>\n                                {order.shippingAddress}\n                            </p>\n                            <p><strong>Mobile: </strong>{order.user.mobile}</p>\n\n                            <Message variant='info'>{ order.status }</Message>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {toDate(order.paidAt)}</Message>\n                            ) : (\n                                    <Message variant='warning'>Not Paid</Message>\n                                )}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? <Message variant='info'>\n                                Order is empty\n                    </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {order.orderItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={2}>\n                                                        <Image style={{width: '50px', height: '50px'}}\n                                                          src={item.product.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>\n                                      ${calculateItemPrice()}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                        {userInfo && userInfo.type !== 'customer' &&\n                          !order.isDelivered && order.status === 'progress' && (\n                            <ListGroup.Item>\n                                {  order.driver && <Button\n                                    type='button'\n                                    className='btn btn-block'\n                                    onClick={deliverHandler}\n                                >\n                                    Mark As Delivered\n                                </Button>}\n\n                                <Button\n                                    type='button'\n                                    className='btn btn-block btn-secondary'\n                                    onClick={cancelOrderHandler}\n                                >\n                                    Cancel Order\n                                </Button>\n\n                            </ListGroup.Item>\n                        )}\n                        { userInfo && userInfo.type === 'customer' && !order.driver && order.status === 'progress' &&\n                          <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn btn-block btn-secondary'\n                                onClick={cancelOrderHandler}\n                            >\n                                Cancel Order\n                            </Button>\n                          </ListGroup.Item>\n                        }\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n      )\n      : <Message variant='danger'>{error}</Message>\n    )\n\n}\n\nexport default OrderScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ShippingScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PaymentScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/UserEditScreen.js",["532"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/OrderListScreen.js",["533","534","535","536","537"],"import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Pagination } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport { listMyOrders } from '../actions/orderActions';\n\n\n\nconst styles = {\n  container: {\n    padding: '20px',\n    marginTop: '15px',\n    marginBottom: '20px'\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}\n\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const { loading, error, orders } = useSelector(state => state.myOrderList);\n    const { userInfo } = useSelector(state => state.userCookie);\n\n\n    const orderOnClick = (id) => {\n      history.push(`/order/${id}`);\n    }\n\n    const displayOrderItem = (items) => {\n      let itemTitle = '';\n      items.forEach((item, idx) => {\n        if (idx !== 0)\n          itemTitle += ', ';\n        itemTitle += `${item.name} x ${item.qty}`;\n      });\n\n      return itemTitle;\n    }\n\n    const toDate = (date) => {\n      const dt = new Date(date);\n      return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n    }\n\n    const handlePagination = (page) => {\n      dispatch(listMyOrders(page))\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(listMyOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo]);\n\n\n    return (\n        <div>\n          <h1>My Orders</h1>\n          {loading\n          ? (<Loader />)\n          : error\n              ? (<Message variant='danger'>{error}</Message>)\n              : (\n                <>\n                  {orders?.orders && orders.orders.map(order => (\n                    <Paper\n                      elevation={2}\n                      key={order._id}\n                      sx={styles.container}\n                      onClick={() => orderOnClick(order._id)}\n                    >\n                      <Box sx={styles.row}>\n                        <div>\n                          <h5>{displayOrderItem(order.orderItems)}</h5>\n                          <h6>{toDate(order.createdAt)}</h6>\n                          <h6 style={{\n                            padding: '10px',\n                            width: 'fit-content',\n                            background: order.status === 'progress' ? 'dodgerblue' : 'gainsboro',\n                          }}>\n                            {order.status}\n                          </h6>\n                        </div>\n                        <h5>{order.totalPrice}&nbsp;$</h5>\n                      </Box>\n                    </Paper>\n                  ))}\n                  <Pagination>\n                    {[...Array(orders.pages).keys()].map(p => (\n                      <Pagination.Item\n                        active={p + 1 === orders.page}\n                        onClick={() => handlePagination(p + 1)}\n                      >\n                      { p + 1 }\n                      </Pagination.Item>\n                    ))}\n                  </Pagination>\n                </>\n              )}\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductListScreen.js",["538"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ProductEditScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Footer.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/RegisterScreen.js",["539","540"],"import React, { useState, useEffect } from 'react'\nimport Cookies from 'js-cookie';\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\nimport { USER_CREATE_RESET } from '../constants/userConstants';\n\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [mobile, setMobile] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(\n              register({\n                name,\n                username: email,\n                type: 'customer',\n                mobile,\n                password\n              })\n            );\n        }\n    }\n\n    const readCookies = () => {\n      try {\n        const cookies = JSON.parse(Cookies.get('user'));\n\n        return cookies;\n      }\n      catch (error) {\n        return undefined;\n      }\n    }\n\n    useEffect(() => {\n      const cookie = readCookies();\n\n      if (cookie) {\n        if (cookie.isAdmin === 'Yes')\n          history.push('/admin');\n        else if (cookie.isAdmin === 'No')\n          history.push('/');\n      }\n      if (userInfo) {\n          history.push('/login')\n      }\n\n      return(() => {\n        if (userInfo) {\n          dispatch({\n            type: USER_CREATE_RESET\n          });\n        }\n      });\n    }, [history, userInfo, redirect])\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='mobile'>\n                    <Form.Label>Mobile Number</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter Mobile Number'\n                        value={mobile}\n                        onChange={(e) => setMobile(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Header.js",["541","542","543","544","545"],"import React, { useEffect, useState } from 'react'\nimport Cookies from 'js-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown, Alert, Button } from 'react-bootstrap';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport SearchBox from './SearchBox';\n\nimport { logout } from '../actions/userActions';\nimport { getDriverWorkingStatus, updateWorkingStatus } from '../networking/driverRequests';\n\n\nfunction Header() {\n\n  const [ showHeader, setShowHeader ] = useState(true);\n  const [ loading, setLoading ] = useState(true);\n  const [ isOnline, setIsOnline ] = useState(false);\n\n  const { userInfo } = useSelector(state => state.userCookie);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  }\n\n  const changeWorkingStatus = async (e) => {\n    try {\n      setLoading(true);\n      e.preventDefault();\n      const status = isOnline ? 'offline' : 'available';\n\n      const { error, message, data } = await updateWorkingStatus(userInfo.id, status, userInfo.token);\n      if (error) {\n        setIsOnline(false);\n      }\n      else {\n        if (data.status === 'offline')\n          setIsOnline(false);\n        else\n          setIsOnline(true);\n      }\n    }\n    catch (error) {\n      setIsOnline(false);\n    }\n  }\n\n  const getDriverStatus = async (driverId, token, signal) => {\n    try {\n      const { error, message, data } = await getDriverWorkingStatus(driverId, token, signal);\n      if (error) {\n        setIsOnline(false);\n      }\n      else {\n        if (data.status === 'offline')\n          setIsOnline(false);\n        else\n          setIsOnline(true);\n      }\n    }\n    catch (error) {\n      setIsOnline(false);\n    }\n  }\n\n  useEffect(() => {\n\n    const abortController = new AbortController();\n\n    if (userInfo) {\n      if (userInfo.type === 'admin' || userInfo.type === 'restaurant owner')\n        setShowHeader(false);\n      else {\n        setShowHeader(true);\n        if (userInfo.type === 'driver') {\n          (async () => await getDriverStatus(userInfo.id, userInfo.token, abortController.signal))()\n        }\n      }\n    }\n    else {\n      setShowHeader(true);\n    }\n\n    return (() => {\n      if (abortController) abortController.abort();\n    })\n  }, [userInfo]);\n\n\n  useEffect(() => {\n    setLoading(false);\n  }, [isOnline]);\n\n\n  return (\n    <>\n      {showHeader ?(\n        <header>\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n            <Container>\n              <LinkContainer to='/'>\n                <Navbar.Brand>TrioPizza</Navbar.Brand>\n              </LinkContainer>\n\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                { userInfo?.type !== 'driver' && <SearchBox />}\n                <Nav className=\"ml-auto\">\n\n                  { userInfo && userInfo.type === 'customer' &&\n                    <LinkContainer to='/cart'>\n                      <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                    </LinkContainer>\n                  }\n\n                  {userInfo ? (\n                    <NavDropdown title={userInfo.name} id='username'>\n                      <LinkContainer to='/profile'>\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                      </LinkContainer>\n\n                      {userInfo.type === 'driver' &&\n                        <LinkContainer to='/driver-stats'>\n                          <NavDropdown.Item>Stats</NavDropdown.Item>\n                        </LinkContainer>\n                      }\n\n                      {userInfo.type === 'customer' &&\n                      (\n                        <>\n                          <LinkContainer to='/myorders'>\n                            <NavDropdown.Item>My Orders</NavDropdown.Item>\n                          </LinkContainer>\n                          <LinkContainer to='/my-reservations'>\n                            <NavDropdown.Item>My Reservations</NavDropdown.Item>\n                          </LinkContainer>\n                        </>\n                      )}\n\n                      <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                    </NavDropdown>\n\n\n                  ) : (\n                    <LinkContainer to='/login'>\n                      <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                    </LinkContainer>\n                    )}\n\n                  {userInfo && userInfo.type === 'driver' &&\n                  <>\n                    { loading\n                      ? (<Button className=\"px-2 py-1 m-1\" variant='secondary'>\n                          <CircleIcon sx={{ fontSize: 10, marginBottom: '2px', marginRight: '5px' }}/>Loading\n                        </Button>)\n                      : <Button\n                          className=\"px-2 py-1 m-1\"\n                          variant={isOnline ? 'success' : 'danger'}\n                          onClick={changeWorkingStatus}\n                        >\n                          <CircleIcon sx={{ fontSize: 10, marginBottom: '2px', marginRight: '5px' }}/>\n                          { isOnline ? 'Online' : 'Offline'}\n                        </Button>\n                    }\n                  </>\n                  }\n\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>)\n        : <></>\n      }\n    </>\n  )\n}\n\nexport default Header\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Loader.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Message.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/FormContainer.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Product.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Paginate.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Rating.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/CheckoutSteps.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ProductCarousel.js",[],["546","547"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/SearchBox.js",["548"],"import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n\n    return (\n      <Form onSubmit={submitHandler}>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n                placeholder=\"Search Restaurants ..\"\n            ></Form.Control>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/cartConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/userConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/productConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/orderConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/orderActions.js",["549","550","551","552","553"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CANCEL_REQUEST,\n    ORDER_CANCEL_FAIL,\n    ORDER_CANCEL_SUCCESS,\n    ORDER_CANCEL_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const body = {\n          ...order,\n          user: userInfo.id\n        };\n\n        const { data } = await axios.post(\n            `/api/orders/`,\n            body,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        });\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const { userCookie: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = (page = 1) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        });\n\n        const { userCookie: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/${userInfo.id}?page=${page}`,\n            config\n        );\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        });\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = (page=1) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const { userCookie: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders?page=${page}`,\n            config\n        );\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const cancelOrder = orderId => async (dispatch, getState) => {\n  try {\n      dispatch({\n        type: ORDER_CANCEL_REQUEST\n      });\n\n      const { userCookie: { userInfo } } = getState();\n\n      const { data } = await axios.put(`/api/orders/${orderId}/cancel/`, {\n        headers: {\n          'Content-Type' : 'Application/json',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n\n      dispatch({\n        type: ORDER_CANCEL_SUCCESS\n      });\n  }\n  catch (error) {\n    dispatch({\n        type: ORDER_CANCEL_FAIL,\n        payload: error.response && error.response.data.details\n            ? error.response.data.details\n            : error.message,\n    });\n  }\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/productActions.js",["554"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/userActions.js",["555","556","557"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n    AVAILABLE_DRIVERS_REQUEST,\n    AVAILABLE_DRIVERS_SUCCESS,\n    AVAILABLE_DRIVERS_FAIL,\n    AVAILABLE_DRIVERS_RESET\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport { RESTAURANT_RESET } from '../constants/restaurantConstants';\n\nimport Cookie from 'js-cookie';\n\n\nfunction setUserCookie (userInfo) {\n  Cookie.set('user', JSON.stringify(userInfo));\n}\n\n\nfunction removeUserCookie () {\n  Cookie.remove('user');\n}\n\nfunction getTokenFromCookie () {\n  try {\n    const user = JSON.parse(Cookie.get('user'));\n    return user;\n  }\n  catch (error) {\n    console.error(error);\n  }\n}\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        });\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        );\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n\n        dispatch({\n          type: 'read_cookie_success',\n          payload: data\n        });\n\n        setUserCookie(data);\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: ORDER_LIST_MY_RESET });\n    dispatch({ type: USER_LIST_RESET });\n    dispatch({ type: RESTAURANT_RESET });\n    dispatch({ type: 'remove_user_cookie' });\n    removeUserCookie();\n}\n\n\nexport const register = (user) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        };\n\n        const { data } = await axios.post ( '/api/users/',\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        console.log(error.response);\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: (error?.response?.data?.details)\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        });\n\n        const { token } = getTokenFromCookie();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        );\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        });\n\n\n    } catch (error) {\n        console.log('error', error.response);\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response?.data?.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n        console.log(user);\n        const {\n            userCookie: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/${userInfo.id}/`,\n            { ...user, type: userInfo.type },\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        setUserCookie({\n          ...userInfo,\n          ...data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                // Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userCookie: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/${id}/`,\n            config\n        );\n\n        console.log(data);\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (id, user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        });\n\n        const {\n            userCookie: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/${id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        });\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\n\nexport const getAvailableDrivers = () => async (dispatch, getState) => {\n  try {\n    dispatch ({\n      type: AVAILABLE_DRIVERS_REQUEST\n    });\n\n    const { userCookie: userInfo } = getState();\n\n    const { data } = await axios.get(`api/users/drivers/status/available`, {\n      headers: {\n        'Content-Type' : 'Application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n\n    dispatch({\n      type: AVAILABLE_DRIVERS_SUCCESS,\n      payload: data\n    });\n  }\n  catch (error) {\n    dispatch({\n      type: AVAILABLE_DRIVERS_FAIL,\n      payload: error.response && error.response.data.details\n            ? error.response.data.details\n            : error.message\n    })\n  }\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/cartActions.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminAppbar.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/AdminDrawerMenu.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserList.js",["558"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport CustomTable from '../CustomTable';\nimport EditUser from './EditUser';\n\nimport { listUsers } from '../../actions/userActions';\n\n\nconst styles = {\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '25px',\n    padding: '10px'\n  },\n  searchInput: {\n    maxWidth: '200px'\n  }\n}\n\nconst columns = [\n  { id: 'id', label: 'ID', maxWidth: 70 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'username',\n    label: 'Email',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'mobile',\n    label: 'Mobile',\n    maxWidth: 150,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'type',\n    label: 'User Type',\n    minWidth: 100,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  }\n];\n\n\nexport default function UserList({addNewUser}) {\n\n  const [ openEditUser, setOpenEditUser ] = useState(false);\n  const [ editingID, setEditingID ] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userList = useSelector(state => state.userList);\n  const { loading, error, users } = userList;\n\n\n  const editUser = (id) => {\n    setEditingID(id);\n    setOpenEditUser(true);\n  }\n\n\n  const handleAddButtonOnClick = (event) => {\n    event.preventDefault();\n    console.log('handleAddButtonOnClick!')\n    addNewUser();\n  }\n\n\n  useEffect(() => {\n    if (!openEditUser) {\n      dispatch(listUsers());\n    }\n  }, [openEditUser]);\n\n  return (\n    <>\n    {openEditUser\n      ? (\n        <EditUser\n          closeEditUser={() => setOpenEditUser(false)}\n          editingID={editingID}\n        />\n      )\n      : (\n        <>\n        {loading\n          ? \"Loading ...\"\n          : (\n            <>\n            { error\n              ? \"Error Loading Users\"\n              : (\n                <>\n                  <Paper\n                    sx={styles.topContainer}\n                  >\n                    <Box sx={{width: '40%', maxWidth: '400px'}}>\n                      <TextField fullWidth label=\"Search\" variant=\"outlined\" size=\"small\"/>\n                    </Box>\n\n                    <Box>\n                      <Button\n                        sx={{margin: '10px'}}\n                        variant=\"contained\"\n                        color=\"success\"\n                        onClick={handleAddButtonOnClick}\n                        endIcon={<AddIcon />}\n                      >\n                        Add\n                      </Button>\n                      <Button sx={{margin: '10px'}} variant=\"contained\" endIcon={<FileDownloadIcon />}>\n                        Export\n                      </Button>\n                      <IconButton>\n                        <RefreshIcon color=\"primary\" />\n                      </IconButton>\n                    </Box>\n                  </Paper>\n\n                  <CustomTable\n                    columns={columns}\n                    rows={users}\n                    type=\"user\"\n                    edit={editUser}\n                  />\n                </>\n              )\n            }\n            </>\n          )\n        }\n        </>\n      )\n    }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Admin.js",["559","560","561","562"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport AdminAppbar from './AdminAppbar';\nimport AdminDrawerMenu from './AdminDrawerMenu';\nimport Dashboard from './Dashboard';\nimport UserAdminDashboard from './users/UserAdminDashboard';\nimport DriverDashboard from './drivers/DriverDashboard';\nimport ProductDashboard from './products/ProductDashboard';\nimport ReservationDashboard from './reservations/ReservationDashboard';\nimport OrderDashboard from './orders/OrderDashboard';\nimport Profile from './Profile';\nimport Setting from './Setting';\nimport { logout } from '../actions/userActions';\n\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\n\nfunction switchContents (page) {\n\t\tswitch (page) {\n\t\t\tcase 'Dashboard':\n\t\t\t\treturn <Dashboard />;\n\t\t\tcase 'Users':\n\t\t\t\treturn <UserAdminDashboard />;\n      case 'Drivers Status':\n        return <DriverDashboard />;\n\t\t\tcase 'Restaurant Owners':\n\t\t\t\treturn <h5>Restaurant Owners</h5>;\n      case 'Profile':\n        return <Profile />\n      case 'Setting':\n        return <Setting />;\n\t\t\tdefault:\n\t\t\t\tthrow new Error ('Invalid Admin Page Content');\n\t\t}\n}\n\n\nexport default function Admin () {\n\n  const theme = useTheme();\n  const [ open, setOpen ] = useState(false);\n\tconst [ page, setPage ] = useState('Dashboard');\n\tconst [ pageTitle, setPageTitle ] = useState('Dashboard');\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const userCookie = useSelector(state => state.userCookie);\n  const { userInfo } = userCookie;\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\tconst onChangePage = (page) => {\n\t\tif (page === 'Sign Out') {\n      // sign out user\n      dispatch(logout());\n    }\n    else {\n      setPage(page);\n    }\n\t}\n\n\tuseEffect(() => {\n\t\tsetPageTitle(page);\n\n    if (!userInfo)\n      history.push('/');\n\n\t}, [open, page, dispatch, userInfo]);\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n\n\t\t\t<AdminAppbar\n\t\t\t\ttitle={pageTitle}\n\t\t\t\topen={open}\n\t\t\t\thandleDrawerOpen={handleDrawerOpen}\n\t\t\t/>\n\n      <AdminDrawerMenu\n\t\t\t\ttheme={theme}\n\t\t\t\topen={open}\n\t\t\t\thandleDrawerClose={handleDrawerClose}\n\t\t\t\topenedMixin={openedMixin}\n\t\t\t\tclosedMixin={closedMixin}\n\t\t\t\tonChangePage={onChangePage}\n\t\t\t\tpage={page}\n\t\t\t/>\n\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3, background: '#f9f9f9' }}>\n        <DrawerHeader />\n        { switchContents(page) }\n      </Box>\n    </Box>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Dashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTable.js",["563","564","565","566","567","568"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableHead.js",["569","570","571","572"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/CustomTableBody.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/UserAdminDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/CreateUser.js",["573"],"import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { register } from '../../actions/userActions';\nimport { USER_CREATE_RESET } from '../../constants/userConstants';\n\n\nexport default function CreateUser ({backToUserList}) {\n\n  const [ message, setMessage ] = useState('');\n  const [ user, setUser ] = useState({\n    name: '',\n    username: '',\n    password: '',\n    mobile: '',\n    type: ''\n  });\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n\n  const handleBackButtonClick = (event) => {\n    event.preventDefault();\n    backToUserList();\n  }\n\n\n  const handleOnChange = (event) => {\n    const { name, value } = event.target;\n    setUser({\n      ...user,\n      [name] : value\n    });\n  }\n\n  const createNewUser = (event) => {\n    event.preventDefault();\n    dispatch(register(user));\n  }\n\n\n  useEffect(() => {\n    if (userInfo) {\n      // after successful user creation, redirect back to user list page\n      setMessage(\"User Created Successfully!\");\n      setUser({\n        name: '',\n        username: '',\n        password: '',\n        mobile: '',\n        type: ''\n      })\n    }\n\n    return (() => {\n      if (userInfo)\n        dispatch({\n          type: USER_CREATE_RESET\n        });\n    });\n  }, [userInfo]);\n\n  return (\n    <>\n      <Button\n        onClick={handleBackButtonClick}\n        startIcon={<ArrowBackIcon />}\n      >\n        Back\n      </Button>\n      <Paper\n        sx={{ paddingTop: '20px', paddingBottom: '50px'}}\n      >\n        <FormContainer>\n          <h4>Create New User</h4>\n          {message !== '' && <Message variant='success'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {loading && <Loader />}\n          <Form onSubmit={createNewUser}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Full Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Full Name\"\n                name='name'\n                value={user.name}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='username'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Email Address\"\n                name='username'\n                value={user.username}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='mobile'>\n              <Form.Label>Mobile Number</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Mobile Number\"\n                name='mobile'\n                value={user.mobile}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                name='password'\n                value={user.password}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId='type'>\n              <Form.Label>User Type</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={handleOnChange}\n                name=\"type\"\n                value={user.type}\n                required\n              >\n                <option>Select User Type</option>\n                <option value=\"admin\">Admin</option>\n                <option value=\"customer\">Customer</option>\n                <option value=\"driver\">Driver</option>\n                <option value=\"restaurant owner\">Restaurant Owner</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Create User\n            </Button>\n\n          </Form>\n        </FormContainer>\n      </Paper>\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/users/EditUser.js",["574","575","576"],"import React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { getUserDetails, updateUser, deleteUser } from '../../actions/userActions';\nimport { USER_UPDATE_RESET, USER_DELETE_RESET } from '../../constants/userConstants';\n\n\n\nexport default function EditUser ({closeEditUser, editingID}) {\n\n  const [ message, setMessage ] = useState('');\n  const [ user, setUser ] = useState({\n    name: '',\n    username: '',\n    mobile: '',\n    type: ''\n  });\n\n  const dispatch = useDispatch();\n  const { error, loading, userDetails } = useSelector(state => state.userDetails);\n\n  const userUpdate = useSelector(state => state.userUpdate);\n  const { success } = userUpdate;\n\n  const userDelete = useSelector(state => state.userDelete);\n  const { loadingDelete, successDelete, errorDelete } = userDelete;\n\n  const handleOnChange = (event) => {\n    setUser({\n      ...user,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function handleOnSubmit (event) {\n    event.preventDefault();\n    dispatch(updateUser(editingID, user));\n  }\n\n\n  function handleDelete (event) {\n    event.preventDefault();\n    dispatch(deleteUser(editingID));\n  }\n\n\n  useEffect(() => {\n    if (editingID && editingID > 0) {\n      dispatch(getUserDetails(editingID));\n      dispatch({\n        type: USER_UPDATE_RESET,\n      });\n      dispatch({\n        type: USER_DELETE_RESET\n      });\n    }\n  }, [editingID]);\n\n  useEffect(() => {\n    console.log('userInfo', userDetails);\n    if (userDetails) {\n\n      if (success)\n        setMessage('User Updated Successfully!');\n      else {\n        setUser({\n          name: userDetails.name,\n          username: userDetails.username,\n          mobile: userDetails.mobile,\n          type: userDetails.type\n        });\n        setMessage('');\n      }\n    }\n\n    return (() => {\n      if (success)\n        dispatch({\n          type: USER_UPDATE_RESET,\n        });\n    });\n  }, [userDetails, success]);\n\n\n  useEffect(() => {\n    if (successDelete) {\n      closeEditUser();\n    }\n\n    return(() => {\n      if (successDelete)\n        dispatch({\n          type: USER_DELETE_RESET\n        });\n    });\n  }, [errorDelete, successDelete]);\n\n\n  return (\n    <>\n      <Button\n        startIcon={<ArrowBackIcon/>}\n        onClick={() => closeEditUser()}\n      >\n        Back\n      </Button>\n      <h4>Edit User</h4>\n      <Paper sx={{ margin: '10px', paddingTop: '20px', paddingBottom: '20px'}}>\n        <FormContainer>\n          {message !== '' && <Message variant='success'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n          {(loading || loadingDelete) && <Loader />}\n          <Form onSubmit={handleOnSubmit}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Full Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Last Name\"\n                name='name'\n                value={user.name}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='username'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Email Address\"\n                name='username'\n                value={user.username}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='mobile'>\n              <Form.Label>Mobile Number</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Mobile Number\"\n                name='mobile'\n                value={user.mobile}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='type'>\n              <Form.Label>User Type</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Mobile Number\"\n                name='mobile'\n                value={user.type}\n                onChange={handleOnChange}\n                readOnly\n              />\n            </Form.Group>\n\n            <Box sx={{ display: 'flex', justifyContent: 'space-between'}}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Save Changes\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={handleDelete}\n              >\n                Delete User\n              </Button>\n            </Box>\n\n          </Form>\n        </FormContainer>\n      </Paper>\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/driver/Dashboard.js",["577","578"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Row, Col, Button, Pagination } from 'react-bootstrap';\n\nimport { getOrdersByDriver } from '../networking/orderRequests';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\n\nexport default function DriverDashboard () {\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const history = useHistory();\n\n  const [ deliveries, setDeliveries ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ message, setMessage ] = useState(null);\n\n\n  const seeOrderDetails = (id) => {\n    history.push(`/order/${id}`);\n  }\n\n  const handlePagination = async (page) => {\n    await fetchOrders(userInfo.id, userInfo.token, null, page);\n  }\n\n  const fetchOrders = async (id, token, signal, page = 1) => {\n    try {\n      setLoading(true);\n\n      const { error, message, data } = await getOrdersByDriver (id, token, signal, page);\n\n      if (error) {\n        setError(message);\n        setDeliveries(null);\n      }\n      else {\n        setDeliveries(data);\n        setError(null);\n      }\n    }\n    catch (error) {\n      setError(error.message);\n      setDeliveries(null);\n    }\n  }\n\n  useEffect(() => {\n\n    const abortController = new AbortController();\n\n    if (userInfo) {\n      ( async () => fetchOrders(userInfo.id, userInfo.token, abortController.signal))()\n    }\n    else\n      history.push('/');\n\n    return (() => abortController.abort());\n  }, [userInfo]);\n\n\n  useEffect(() => {\n    if (error) {\n      setMessage(error);\n    }\n    else {\n      if (deliveries?.deliveries?.length === 0) {\n        setMessage(\"You have not made any deliveries yet.\");\n      }\n      else\n        setMessage(null);\n    }\n\n    setLoading(false);\n\n  }, [error, deliveries]);\n\n\n  return (\n    <>\n      <h4>Driver Dashboard</h4>\n\n      <p>Welcome, {userInfo && userInfo.name}</p>\n      <hr/>\n      <h5>My Deliveries</h5>\n      <Card className='m-3'>\n        <Card.Body>\n          {loading && <Loader />}\n          {message && <Message variant={error ? 'danger' : 'info'}>{message}</Message>}\n          {deliveries?.deliveries?.map( (order, idx) => (\n            <Card\n              key={idx}\n              className='mx-1 mb-2'\n              onClick={() => seeOrderDetails(order._id)}\n            >\n              <Card.Body>\n                <Row>\n                  <Col>\n                    <h6>Order #{order._id}</h6>\n                    <p>{order.shippingAddress}</p>\n                    <p>{order.user.mobile}</p>\n                  </Col>\n                  <Col lg={3}>\n                    {order.status === 'progress' ? (\n                      <h5 style={{\n                        padding: '10px',\n                        background: 'coral',\n                        width: 'fit-content',\n                        margin: 'auto',\n                        color: 'white'\n                      }}>\n                        Active\n                      </h5>\n                    ) : (\n                      <h6>Status : {order.status}</h6>\n                    )}\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          ))}\n        </Card.Body>\n      </Card>\n      <Pagination>\n        {[...Array(deliveries?.pages).keys()].map(p => (\n          <Pagination.Item\n            key={p}\n            active={p+1 === deliveries?.page}\n            onClick={() => handlePagination(p + 1)}\n          >\n            {p + 1}\n          </Pagination.Item>\n        ))}\n      </Pagination>\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/CreateProduct.js",["579","580"],"import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { createProduct } from '../../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../../constants/productConstants';\n\n\nexport default function CreateProduct ({backToProductList}) {\n\n  const [ message, setMessage ] = useState('');\n  const [ newProduct, setNewProduct ] = useState({\n    description: '',\n    name: '',\n    price: ''\n  });\n\n  const dispatch = useDispatch();\n  const { loading, error, product } = useSelector(state => state.productCreate);\n\n  const handleBackButtonClick = (e) => {\n    e.preventDefault();\n    backToProductList();\n  }\n\n  const handleOnChange = (e) => {\n    setNewProduct({\n      ...newProduct,\n      [e.target.name] : e.target.value\n    });\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    console.log('new product', newProduct);\n    const { error, errorMessage } = validateNewProduct(newProduct);\n    console.log(error, errorMessage);\n    if (error) {\n      setMessage(errorMessage);\n    }\n    else {\n      dispatch(\n        createProduct(newProduct)\n      );\n    }\n  }\n\n  const validateNewProduct = (newProduct) => {\n    if (newProduct.description && newProduct.description === '')\n      return { error : true, errorMessage: '*Empty Description*' };\n\n    if (newProduct.name && newProduct.name === '')\n      return { error : true, errorMessage: '*Empty Name*' };\n\n    if (newProduct.price && (newProduct.price === '' || parseInt(newProduct.price) <= 0) )\n      return { error : true, errorMessage: '*Invalid Price*'};\n\n    return { error: false };\n  }\n\n\n  useEffect(() => {\n    if (product) {\n      setMessage(`New Product Created, ${newProduct.name}`);\n      setNewProduct({\n        description: '',\n        name: '',\n        price: '0.00'\n      });\n    }\n\n    return (() => {\n      if (product) {\n        dispatch({\n          type: PRODUCT_CREATE_RESET\n        });\n        setMessage('');\n      }\n    });\n  }, [product]);\n\n\n  return (\n    <>\n      <Button\n        onClick={handleBackButtonClick}\n        startIcon={<ArrowBackIcon />}\n      >\n        Back\n      </Button>\n      <Paper sx={{ paddingTop: '20px', paddingBottom: '50px'}}>\n        <FormContainer>\n          <h4>Create Product</h4>\n          {message !== '' && <Message variant='info'>{message}</Message>}\n          {loading && <Loader />}\n          <Form onSubmit={handleFormSubmit}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Product Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Beef Pepperoni\"\n                name='name'\n                value={newProduct.name}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Product Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                type=\"text\"\n                placeholder=\"Tasty Pizza with Pineapple\"\n                name='description'\n                value={newProduct.description}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Product Price</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"18.00\"\n                name='price'\n                value={newProduct.price}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Label>Upload Product Image</Form.Label>\n              <Form.Control type=\"file\" />\n            </Form.Group>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Create Product\n            </Button>\n\n          </Form>\n        </FormContainer>\n      </Paper>\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/ProductList.js",["581","582","583"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport CustomTable from '../CustomTable';\nimport EditProduct from './EditProduct';\nimport { listProducts } from '../../actions/productActions';\n\n\nconst styles = {\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '25px',\n    padding: '10px'\n  }\n};\n\n\nconst columns = [\n  { id: '_id', label: 'ID', maxWidth: 70 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'description',\n    label: 'Description',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'price',\n    label: 'Price',\n    maxWidth: 100,\n    align: 'right',\n  },\n  {\n    id: 'numReviews',\n    label: 'Number of Reviews',\n    maxWidth: 120,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'rating',\n    label: 'Rating',\n    maxWidth: 150,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\n\nexport default function ProductList ({addNewProduct}) {\n\n  const [ openEditProduct, setOpenEditProduct ] = useState(false);\n  const [ editingID, setEditingID ] = useState(null);\n\n  const dispatch = useDispatch();\n  const { loading, error, products } = useSelector(state => state.productList);\n\n\n  const editProduct = (val) => {\n    setEditingID(val);\n    setOpenEditProduct(true);\n  }\n\n  const closeOpenEditProduct = () => setOpenEditProduct(false);\n\n  useEffect(() => {\n    if (!openEditProduct)\n      dispatch( listProducts() )\n  }, [openEditProduct]);\n\n  return (\n    <>\n      {openEditProduct ?\n        (<EditProduct\n            editingID={editingID}\n            backToProductList={closeOpenEditProduct}\n          />)\n        : (\n          <>\n            <Paper sx={styles.topContainer}>\n              <Box sx={{width: '40%', maxWidth: '400px'}}>\n                <TextField fullWidth label=\"Search\" variant=\"outlined\" size=\"small\"/>\n              </Box>\n\n              <Box>\n                <Button\n                  sx={{margin: '10px'}}\n                  variant=\"contained\"\n                  color=\"success\"\n                  onClick={() => addNewProduct()}\n                  endIcon={<AddIcon />}\n                >\n                  Add\n                </Button>\n                <Button sx={{margin: '10px'}} variant=\"contained\" endIcon={<FileDownloadIcon />}>\n                  Export\n                </Button>\n                <IconButton>\n                  <RefreshIcon color=\"primary\" />\n                </IconButton>\n              </Box>\n            </Paper>\n            <CustomTable\n              columns={columns}\n              rows={products}\n              type='products'\n              edit={editProduct}\n            />\n          </>\n        )\n      }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/products/EditProduct.js",["584","585","586","587","588","589"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { Form } from 'react-bootstrap';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { listProductDetails, updateProduct, deleteProduct } from '../../actions/productActions';\nimport { PRODUCT_UPDATE_RESET, PRODUCT_DELETE_RESET } from '../../constants/productConstants';\n\n\nexport default function EditProduct ({editingID, backToProductList}) {\n\n  const [ message, setMessage ] = useState('');\n  const [ editingProduct, setEditingProduct ] = useState({\n    name: '',\n    description: '',\n    price: ''\n  });\n\n  const dispatch = useDispatch();\n  const { loading, product, error } = useSelector(state => state.productDetails );\n\n  const { updateError, updatedProduct } = useSelector(state => state.productUpdate);\n\n  const { errorDelete, successDelete } = useSelector(state => state.productDelete);\n\n\n  const handleOnChange = (e) => {\n    setEditingProduct({\n      ...editingProduct,\n      [e.target.name] : e.target.value\n    })\n  };\n\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const { error, errorMessage } = validateEditingProduct(editingProduct);\n    if (error) {\n      setMessage(errorMessage);\n    }\n    else {\n      dispatch(updateProduct(editingProduct, editingID));\n    }\n  }\n\n  const validateEditingProduct = (editingProduct) => {\n    if (editingProduct.description && editingProduct.description === '')\n      return { error : true, errorMessage: 'Error: Empty Description*' };\n\n    if (editingProduct.name && editingProduct.name === '')\n      return { error : true, errorMessage: 'Error: Empty Name*' };\n\n    if (editingProduct.price && (editingProduct.price === '' || parseInt(editingProduct.price) <= 0) )\n      return { error : true, errorMessage: 'Error: Invalid Price*'};\n\n    return { error: false };\n  }\n\n  const onDeleteProduct = (e) => {\n    e.preventDefault();\n    if (editingID && parseInt(editingID) > 0) {\n      dispatch(deleteProduct(editingID));\n    }\n  }\n\n\n  useEffect(() => {\n    // Fetch Product Details\n    dispatch(listProductDetails(editingID));\n  }, [editingID, backToProductList]);\n\n  useEffect(() => {\n    if (product) {\n      setEditingProduct({\n        name: product.name ? product.name : 'Failed to fetch',\n        description: product.description ? product.description : 'Failed to fetch',\n        price: product.price ? product.price : ''\n      });\n    }\n    else if (error) {\n      setMessage(error);\n    }\n  }, [product, error]);\n\n  useEffect(() => {\n\n    if (updatedProduct) {\n      setEditingProduct({\n        name: product.name,\n        description: product.description,\n        price: product.price\n      });\n      setMessage('Product Updated Successfully');\n    }\n\n    return(() => {\n      if (updatedProduct) {\n        dispatch({\n          type: PRODUCT_UPDATE_RESET\n        });\n        setMessage('');\n      }\n    });\n  }, [updatedProduct]);\n\n  useEffect(() => {\n    if (successDelete) {\n      backToProductList();\n    }\n    else if (errorDelete) {\n      setMessage(errorDelete);\n    }\n\n    return(() => {\n      if (successDelete)\n        dispatch({\n          type: PRODUCT_DELETE_RESET\n        });\n    });\n  }, [errorDelete, successDelete]);\n\n\n  return (\n    <>\n      <Button\n        onClick={backToProductList}\n        startIcon={<ArrowBackIcon />}\n      >\n        Back\n      </Button>\n\n      <Paper sx={{ paddingTop: '20px', paddingBottom: '50px'}}>\n        <FormContainer>\n          <h4>Edit Product</h4>\n          {message !== '' && <Message variant='info'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          <Form onSubmit={handleOnSubmit}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Product Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Product Name\"\n                name='name'\n                value={editingProduct.name}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Product Description</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Product Description\"\n                name='description'\n                value={editingProduct.description}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Product Price</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter Product Price\"\n                name='price'\n                value={editingProduct.price}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Box sx={{ display: 'flex', justifyContent: 'space-between'}}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Save Changes\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={onDeleteProduct}\n              >\n                Delete Product\n              </Button>\n            </Box>\n\n          </Form>\n        </FormContainer>\n      </Paper>\n\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Setting.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/Profile.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrdersSummary.js",["590","591","592","593","594","595"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\n\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: '15px',\n  },\n  box: {\n    padding: '15px',\n    margin: '10px',\n    borderRadius: '5px',\n  }\n}\n\n\nexport default function OrdersSummary () {\n\n  const [ monthlyOrders, setMonthlyOrders ] = useState(0);\n  const [ dailyOrders, setDailyOrders ] = useState(0);\n  const [ activeOrders, setActiveOrders ] = useState(0);\n\n\n\n  return (\n    <div style={styles.container}>\n        <Box\n          sx={{\n            ...styles.box,\n            backgroundColor: 'coral',\n            '&:hover': {\n              backgroundColor: 'primary.main',\n              opacity: [0.9, 0.8, 0.7],\n            },\n          }}\n        >\n          Total Orders this month : {monthlyOrders}\n        </Box>\n\n        <Box\n          sx={{\n            ...styles.box,\n            backgroundColor: 'tomato',\n            '&:hover': {\n              backgroundColor: 'primary.main',\n              opacity: [0.9, 0.8, 0.7],\n            },\n          }}\n        >\n          Total Orers today : {dailyOrders}\n        </Box>\n\n        <Box\n          sx={{\n            ...styles.box,\n            backgroundColor: 'coral',\n            '&:hover': {\n              backgroundColor: 'tomato',\n              cursor: 'Pointer'\n            },\n          }}\n        >\n          Active Orders : {activeOrders}\n        </Box>\n    </div>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderList.js",["596"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Pagination } from 'react-bootstrap';\n\nimport { listOrders } from '../../actions/orderActions.js';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport OrderCard from './OrderCard';\nimport OrderDetails from './OrderDetails';\n\n\nexport default function OrderList () {\n\n  const [ showOrderDetails, setShowOrderDetails ] = useState(false);\n  const [ selected, setSelected ] = useState(-1);\n\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const { error, loading, orders } = useSelector(state => state.orderList);\n\n\n  const goToOrderDetails = (id) => {\n    setShowOrderDetails(true);\n    setSelected(id);\n  };\n\n  const goBackToOrderList = () => {\n    setShowOrderDetails(false);\n    setSelected(-1);\n  };\n\n  const handlePagination = (page) => {\n    dispatch(listOrders(page));\n  };\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    }\n  }, [userInfo, showOrderDetails]);\n\n\n  useEffect(() => console.log(orders), [orders]);\n\n  return (\n    <>\n      { showOrderDetails && selected !== -1\n        ? <OrderDetails\n            id={selected}\n            backToOrderList={goBackToOrderList}\n          />\n        : (\n          <>\n            { loading && <Loader/>}\n            { error && <Message variant=\"danger\">{error}</Message>}\n            { orders?.orders && (\n              <>\n                <h5>All Orders ({orders.count})</h5>\n                {orders.orders.map(order => (\n                  <OrderCard\n                    key={order._id}\n                    order={order}\n                    goToOrderDetails={goToOrderDetails}\n                  />\n                ))}\n              </>\n            )}\n            <Pagination>\n              {[...Array(orders?.pages).keys()].map(p => (\n                <Pagination.Item\n                  key={p}\n                  active={p + 1 === orders?.page}\n                  onClick={() => handlePagination(p + 1)}\n                >\n                  { p + 1}\n                </Pagination.Item>\n              ))}\n            </Pagination>\n          </>\n        )\n      }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderCard.js",["597","598","599"],"import React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { Row, Col } from 'react-bootstrap';\n\nimport OrderDetails from './OrderDetails';\n\n\nconst styles = {\n  paper: {\n    padding: '15px',\n    marginTop: '10px',\n    marginBottom: '15px',\n    '&:hover': {\n      backgroundColor: 'gainsboro',\n      cursor: 'pointer'\n    },\n  },\n  box: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  status: {\n    padding: '10px',\n    borderRadius: '2px',\n    color: 'white',\n    width: 'fit-content'\n  }\n}\n\n\nexport default function OrderCard ({order, goToOrderDetails}) {\n\n\n  const displayOrderItem = (items) => {\n    let itemTitle = '';\n    items.forEach((item, idx) => {\n      if (idx !== 0)\n        itemTitle += ', ';\n      itemTitle += `${item.name} x ${item.qty}`;\n    });\n\n    return itemTitle;\n  }\n\n  const toDate = (date) => {\n    const dt = new Date(date);\n    return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n  }\n\n\n  const handleOnClick = (e) => {\n    e.preventDefault();\n    goToOrderDetails(order._id);\n  }\n\n\n  React.useEffect(() => {\n    if (order._id === 25) {\n      console.log(order);\n    }\n  });\n\n  return (\n    <Paper\n      sx={styles.paper}\n      onClick={handleOnClick}\n    >\n      <Row>\n        <Col md={8}>\n          <p>Order # {order._id}</p>\n          { order.orderItems.map( (item, idx) => (\n            <h6 key={idx}>{item.name} x {item.qty}</h6>\n          ))}\n          <h5>{order.totalPrice} $</h5>\n          <h6>{toDate(order.createdAt)}</h6>\n        </Col>\n        <Col md={4}>\n          <Box\n            sx={{\n              ...styles.status,\n              backgroundColor: order.status === 'progress' ? 'coral' : (\n                order.status === 'delivered' ? 'dodgerBlue' : 'gray'\n              )\n            }}\n          >\n            {order.status}\n          </Box>\n          {order.status === 'progress' &&\n          <h6 style={{marginTop: '10px'}}>\n            { order.driver && `Driver : ${order.driver.name}` }\n          </h6>}\n        </Col>\n      </Row>\n    </Paper>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderDetails.js",["600","601","602","603","604","605","606","607","608"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dropdown, Button, ButtonGroup, ListGroup } from 'react-bootstrap';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport MaterialButton from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport { getOrderDetails, completeOrder, cancelOrder } from '../../networking/orderRequests';\nimport { getAvailableDrivers } from '../../actions/userActions';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport ConfirmationBox from '../../components/ConfirmationBox';\nimport AsignDriver from './AsignDriver';\nimport OrderItem from './OrderItem';\n\n\nconst styles = {\n  paper: {\n    margin: '10px',\n    padding: '15px'\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '15px',\n    marginBottom: '15px'\n  },\n  rowStart: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginTop: '15px'\n  }\n}\n\n\nexport default function OrderDetails ({id, backToOrderList}) {\n\n  const [ order, setOrder ] = useState(null);\n  const [ loading, setLoading ] = useState(true);\n  const [ error, setError ] = useState(null);\n  const [ driver, setDriver ] = useState(-1);\n  const [ drivers, setDrives ] = useState([]);\n  const [ showConfirmation, setShowConfirmation ] = useState(false);\n  const [ actionType, setActionType ] = useState('');\n  const [ confirmationText, setConfirmationText ] = useState('');\n\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector(state => state.userCookie);\n\n\n  const backButtonClick = (e) => {\n    e.preventDefault();\n    backToOrderList();\n  };\n\n  const toDate = (date) => {\n    const dt = new Date(date);\n    return `${dt.toLocaleDateString()}, ${dt.toLocaleTimeString()}`;\n  };\n\n\n  const handleCancelClick = (e) => {\n    e.preventDefault();\n    setActionType('cancel');\n    setConfirmationText('Are you sure you want to cancel the order?')\n    setShowConfirmation(true);\n  };\n\n\n  const handleDeliverClick = (e) => {\n    e.preventDefault();\n    setActionType('deliver');\n    setConfirmationText('Mark the order as delivered?')\n    setShowConfirmation(true);\n  }\n\n\n  const confirmActionClick = async () => {\n    console.log(actionType, 'order #', id);\n    setShowConfirmation(false);\n    setLoading(true);\n    if (actionType === 'cancel')\n      await cancelOrderRequest();\n    else if (actionType === 'deliver')\n      await deliverOrderRequest();\n  };\n\n\n  const cancelOrderRequest = async () => {\n    const { error, message, data } = await cancelOrder(id, userInfo.token);\n\n    if (error) {\n      setError(message);\n    }\n    else {\n      setOrder(data);\n    }\n    setLoading(false);\n  }\n\n\n  const deliverOrderRequest = async () => {\n    const { error, message, data } = await completeOrder(id, userInfo.token);\n\n    if (error) {\n      setError(message);\n    }\n    else {\n      setOrder(data);\n    }\n    setLoading(false);\n  }\n\n\n  useEffect(() => {\n\n    const abortController = new AbortController();\n\n    if (id && userInfo && userInfo.isAdmin) {\n      (async () => {\n        const { error, message, data } = await getOrderDetails(id, userInfo.token, abortController.signal);\n        if (error) {\n          setError(message);\n        }\n        else {\n          setOrder(data);\n        }\n        setLoading(false);\n      })()\n    }\n\n\n    // clean up\n    return (() => abortController.abort());\n  }, [userInfo, id]);\n\n  return (\n    <>\n      <MaterialButton\n        endIcon={<ArrowBackIcon/>}\n        onClick={backButtonClick}\n      >\n        Back\n      </MaterialButton>\n      {\n        loading ? <Loader />\n        : (\n          error ? <Message variant='danger'>{error}</Message>\n          : (\n            <Paper\n              sx={styles.paper}\n            >\n              {showConfirmation && (\n                <ConfirmationBox\n                  dismiss={() => setShowConfirmation(false)}\n                  action={confirmActionClick}\n                  text={confirmationText}\n                />\n              )}\n              <Box\n                sx={styles.row}\n              >\n                <h5>Order : #{id}</h5>\n                <h6>Status : &nbsp;\n                  <strong style={{\n                    color: order.status === 'progress' ? 'coral' : 'dodgerBlue'\n                  }}>\n                    {order.status}\n                  </strong>\n                </h6>\n              </Box>\n\n              <AsignDriver\n                id={id}\n                driver={order.driver}\n                status={order.status}\n              />\n\n              <Box\n                sx={styles.row}\n              >\n                <div>\n                  <p>Customer</p>\n                  <h6>{order.user.name}, {order.user.username}</h6>\n                </div>\n                <div>\n                  <p>Date & Time</p>\n                  <h6>{toDate(order.createdAt)}</h6>\n                </div>\n              </Box>\n\n              <Box\n                sx={styles.row}\n              >\n                <div>\n                  <p>Payment Method</p>\n                  <h6>{order.paymentMethod}</h6>\n                </div>\n                { order.isPaid && (\n                  <div>\n                    <p>Paid On</p>\n                    <h6>{toDate(order.paidAt)}</h6>\n                  </div>\n                )}\n              </Box>\n\n              <Box>\n                <p>Ordered Items</p>\n                <OrderItem items={order.orderItems}/>\n              </Box>\n\n              {order && order.status === 'progress' && (\n                <Box\n                  sx={styles.rowStart}\n                >\n                  { order.driver && (\n                    <Button\n                      className=\"btn btn-success mr-1\"\n                      onClick={handleDeliverClick}\n                    >\n                      Mark as Derlivered\n                    </Button>\n                  )}\n                  <Button\n                    className=\"btn btn-secondary mx-1\"\n                    onClick={handleCancelClick}\n                  >\n                    Cancel Order\n                  </Button>\n                </Box>\n              )}\n\n            </Paper>\n          )\n        )\n      }\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/AsignDriver.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/orderRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/reservations/ReservationDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ConfirmationBox.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/orders/OrderItem.js",["609"],"import React from 'react';\nimport { Row, Col, ListGroup, Image } from 'react-bootstrap';\n\nimport Message from '../../components/Message';\n\n\nconst styles = {\n  container: {\n    padding: '10px'\n  }\n}\n\n\nexport default function OrderItem ({items}) {\n\n\n  return (\n    <ListGroup variant='flush'>\n      <ListGroup.Item>\n          {items.length === 0\n            ? <Message variant='info'>Order is empty</Message>\n            : (\n                  <ListGroup variant='flush'>\n                      {items.map((item, index) => (\n                          <ListGroup.Item key={index}>\n                              <Row>\n                                  <Col md={1}>\n                                      <Image style={{width: '50px', height: '50px'}} src={item.product.image} fluid rounded />\n                                  </Col>\n\n                                  <Col>{item.name}</Col>\n\n                                  <Col md={4}>\n                                      {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                  </Col>\n                              </Row>\n                          </ListGroup.Item>\n                      ))}\n                  </ListGroup>\n              )}\n      </ListGroup.Item>\n    </ListGroup>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CustomerDetails.js",["610","611","612","613","614","615"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\n\n\nexport default function CustomerDetails () {\n\n  const [ user, setUser ] = useState({\n    name: '',\n    username: '',\n    mobile: ''\n  });\n  const [ editing, setEditing ] = useState(false);\n  const [ message, setMessage ] = useState(null);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector(state => state.userCookie );\n  const { loading, error, userDetails } = useSelector(state => state.userDetails);\n  const { error: errorUpdate, loading: loadingUpdate, success } = useSelector( state =>\n                                                                      state.userUpdateProfile);\n\n\n  const handleOnChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name] : e.target.value\n    })\n  }\n\n\n  const handleCancelClick = (e) => {\n    e.preventDefault();\n    setEditing(false);\n    setMessage(null);\n  }\n\n\n  const handleEditClick = (e) => {\n    e.preventDefault();\n    setEditing(true);\n    setMessage(null);\n  }\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { isValidate, validateMessage } = validateOnSubmit();\n\n    if (isValidate) {\n      dispatch(updateUserProfile(user));\n    }\n    else {\n      setMessage({\n        error: true,\n        text: validateMessage\n      });\n    }\n  }\n\n\n  const validateOnSubmit = () => {\n    const { name, email, mobile } = user;\n    if (name && name.length < 4)\n      return { isValidate : false, validateMessage : 'Full Name must have at least 4 characters!'};\n    else if (mobile && mobile.length !== 8)\n      return { isValidate : false, validateMessage : 'Invalid Mobile Number. Mobile number must have 8 digits!' }\n    else\n      return { isValidate : true }\n  }\n\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n    else {\n      dispatch(getUserDetails(userInfo.id));\n    }\n\n    if (success) {\n      setMessage({\n        error: false,\n        text: 'User Updated Successfully!'\n      });\n      setEditing(false);\n    }\n\n  }, [userInfo, success]);\n\n\n  useEffect(() => {\n    if (userDetails) {\n      setUser({\n        name: userDetails.name,\n        username: userDetails.username,\n        mobile: userDetails.mobile\n      });\n    }\n  }, [userDetails, editing]);\n\n  return (\n    <>\n      <h2>User Profile</h2>\n\n      {(errorUpdate && editing) && <Message variant='danger'>{errorUpdate}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      {message && (\n        <Message\n          variant={ message.error ? 'danger' : 'success'}\n        >\n          {message.text}\n        </Message>\n      )}\n      <Form onSubmit={submitHandler}>\n\n          <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                  required\n                  name='name'\n                  placeholder='Enter name'\n                  value={user.name}\n                  onChange={handleOnChange}\n                  readOnly={!editing}\n              >\n              </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                  required\n                  name='username'\n                  placeholder='Enter Email'\n                  value={user.username}\n                  onChange={handleOnChange}\n              >\n              </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n              <Form.Label>Mobile Number</Form.Label>\n              <Form.Control\n                  required\n                  name='mobile'\n                  placeholder='Mobile Number 1234 5678'\n                  value={user.mobile}\n                  onChange={handleOnChange}\n                  readOnly={!editing}\n              >\n              </Form.Control>\n          </Form.Group>\n\n          { editing ? (\n            <>\n              <Button\n                className='mr-1'\n                variant='success'\n                type='submit'\n              >\n                Save Changes\n              </Button>\n              <Button\n                variant='secondary'\n                className='mx-2'\n                onClick={handleCancelClick}\n              >\n                Cancel\n              </Button>\n            </>\n          ) : (\n            <Button\n              variant='primary'\n              onClick={handleEditClick}\n            >\n                Edit Profile\n            </Button>\n          )}\n\n      </Form>\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/SavedPlaces.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/addressRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddressCard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/AddNewPlaceForm.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverList.js",["616","617","618","619","620","621","622","623","624","625","626"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport Message from '../../components/Message';\nimport Loader from '../../components/Loader';\nimport CustomTable from '../CustomTable';\n\n\nimport { getAllDriverStatus } from '../../networking/driverRequests';\n\n\nconst styles = {\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '25px',\n    padding: '10px'\n  },\n  searchInput: {\n    maxWidth: '200px'\n  }\n}\n\nconst columns = [\n  { id: '_id', label: 'ID', maxWidth: 70 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'active_orders',\n    label: 'Active Orders',\n    maxWidth: 100,\n    align: 'right'\n  },\n  {\n    id: 'total_order',\n    label: 'Num Deliveries',\n    maxWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n  {\n    id: 'status',\n    label: 'Status',\n    maxWidth: 150,\n    align: 'right',\n  },\n];\n\n\nexport default function UserList({addNewUser}) {\n\n  const [ drivers, setDrivers ] = useState([]);\n  const [ error, setError ] = useState(null);\n  const [ loading, setLoading ] = useState(true);\n  const [ message, setMessage ] = useState(null);\n\n  const { userInfo } = useSelector(state => state.userCookie);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (userInfo) {\n      (async () => {\n        setLoading (true);\n\n        const { data, error, message } = await getAllDriverStatus(userInfo.token, abortController.signal);\n\n        if (error) {\n          setError(error);\n        }\n        else {\n          setDrivers(data);\n        }\n        setLoading(false);\n      })();\n    }\n\n    return (() => abortController.abort());\n  }, [userInfo]);\n\n\n  useEffect(() => {\n    if (error) {\n      setMessage(error);\n    }\n    else {\n      if (!error && drivers.length === 0) {\n        setMessage('Driver Lists Empty!');\n      }\n      else {\n        setMessage(null);\n      }\n    }\n  }, [error, drivers]);\n\n\n  return (\n    <>\n      { message && <Message variant='info'>{message}</Message>}\n      { loading && <Loader />}\n      { drivers.length > 0 && <CustomTable\n        rows={drivers}\n        columns={columns}\n        edit={() => {console.log('nothing!')}}\n        type=\"driver\"\n      />}\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/driverRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/CreateReservation.js",["627"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\n\nimport FormContainer from '../components/FormContainer';\nimport ReservationSteps from '../components/ReservationSteps';\nimport { RESERVATION_CLEAR_DATA } from '../constants/reservationConstants';\nimport { saveReservationInfo } from '../actions/reservationActions';\n\n\nconst reservationTimeSlots = [\n  '9:00 AM',\n  '10:00 AM',\n  '11:00 AM',\n  '12:00 PM',\n  '1:00 PM',\n  '2:00 PM',\n  '3:00 PM',\n  '4:00 PM',\n  '5:00 PM',\n  '6:00 PM',\n  '7:00 PM',\n  '8:00 PM',\n  '9:00 PM',\n  '10:00 PM',\n];\n\n\nexport default function CreateReservation ({history}) {\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const dispatch = useDispatch();\n\n  const [ reservation, setReservation ] = useState({\n    numOfPax: 1,\n    date: '',\n    time: ''\n  });\n  const [ minDate, setMinDate ] = useState(null);\n\n\n  const handleOnChange = (e) => {\n    setReservation({\n      ...reservation,\n      [e.target.name] : e.target.value\n    });\n  };\n\n\n  const resetData = (e) => {\n    e.preventDefault();\n    setReservation({\n      numOfPax: 1,\n      date: '',\n      time: ''\n    });\n    dispatch({\n      type: RESERVATION_CLEAR_DATA\n    });\n  }\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { numOfPax, date, time } = reservation;\n    if ( parseInt(numOfPax) > 1 || date !== '' || time !== '') {\n      dispatch(saveReservationInfo(reservation));\n      history.push('/reserve-add-ons');\n    }\n  };\n\n\n  const setMinimumDate = () => {\n    const date = new Date();\n    const yyyy = date.getFullYear();\n\n    let mm = date.getMonth() + 1;\n    if (mm < 10)\n      mm = '0' + mm;\n\n    let dd = date.getDate() + 1;\n    if (dd < 10)\n      dd = '0' + dd;\n    console.log(`${yyyy}-${mm}-${dd}`);\n    setMinDate(`${yyyy}-${mm}-${dd}`)\n  }\n\n\n  useEffect(() => {\n    console.log('create reservation');\n    if (!userInfo) {\n      // if no credentials found in cookie, log out the account\n      history.push('/');\n    }\n\n    setMinimumDate();\n  }, [userInfo]);\n\n  return (\n    <>\n      <ReservationSteps step1={true}/>\n      <FormContainer>\n        <h5>Create Reservation</h5>\n        <Form onSubmit={submitHandler}>\n\n          <Form.Group controlId='numOfPax'>\n            <Form.Label>Number of Pax</Form.Label>\n            <Form.Control\n              type='number'\n              name='numOfPax'\n              min='1'\n              value={reservation.numOfPax}\n              onChange={handleOnChange}\n              required\n              />\n          </Form.Group>\n\n          <Form.Group controlId='date'>\n            <Form.Label>Preferred Date</Form.Label>\n            <Form.Control\n              type='date'\n              name='date'\n              min={minDate}\n              value={reservation.date}\n              onChange={handleOnChange}\n              required\n              />\n          </Form.Group>\n\n          <Form.Group controlId='time'>\n            <Form.Label>Time</Form.Label>\n            <Form.Control\n              as='select'\n              name='time'\n              value={reservation.time}\n              onChange={handleOnChange}\n              required\n              >\n              <option value=''>Choose Time</option>\n              { reservationTimeSlots.map( (slot, idx) => (\n                <option key={idx} value={slot}>{slot}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button\n            variant='primary'\n            className='mr-1'\n            type='submit'\n          >\n            Preceed\n          </Button>\n          <Button\n            variant='secondary'\n            className='mx-1'\n            onClick={resetData}\n          >\n            Reset\n          </Button>\n\n        </Form>\n      </FormContainer>\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/ReservationSteps.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/reservationReducer.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/reservationConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/PreOrder.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/reservationActions.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReserveConfirm.js",["628"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport ReservationSteps from '../components/ReservationSteps';\nimport { createNewReservationRequest } from '../networking/reservationRequests';\nimport { RESERVATION_CLEAR_DATA } from '../constants/reservationConstants';\n\n\nexport default function ReserveConfirm () {\n\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ reservationCreated, setReservationCreated ] = useState(false);\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const { info, preOrder } = useSelector(state => state.reservation);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const confirmReservationClick = async (e) => {\n    try {\n      e.preventDefault();\n      setLoading(true);\n\n      const body = {\n        user : userInfo.id,\n        num_of_pax : parseInt(info.numOfPax),\n        reservedDateTime : `${info.date} ${info.time}`\n      }\n\n      const { error, data, message } = await createNewReservationRequest (body, userInfo.token);\n\n      if (error) {\n        setError(message);\n      }\n      else {\n        setReservationCreated(true);\n        setError(null);\n        dispatch({\n          type : RESERVATION_CLEAR_DATA\n        });\n        history.push(`/reservations/${data._id}`);\n      }\n    }\n    catch (error) {\n      console.error(error.message);\n      setError(error.message);\n    }\n  }\n\n\n  useEffect(() => {\n\n    if (!userInfo) {\n      history.push('/');\n    }\n\n    if (info && !(info.date) && !reservationCreated) {\n      history.push('/reserve-table')\n    }\n  }, [info, userInfo]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [error, loading, history, reservationCreated])\n\n  return (\n    <>\n      {info &&\n        <>\n          <ReservationSteps\n            step1={true}\n            step2={true}\n            step3={true}\n          />\n          <FormContainer>\n            { error && <Message variant='danger'>{error}</Message> }\n            { loading && <Loader /> }\n            <h4>It's almost done!</h4>\n            <p>\n              Please check the below details and confirm your reservation!\n              <br/>You can always change back the details by clicking on the navigation above.\n            </p>\n            <br/>\n            Number of Pax: <h5>{info.numOfPax}</h5>\n            Date: <h5>{info.date}</h5>\n            Time: <h5>{info.time}</h5>\n            Pre-Order: <h5>{preOrder ? '2 item(s)' : 'N.A' }</h5>\n            <br/>\n            <Button\n              variant='primary'\n              className='my-1'\n              onClick={confirmReservationClick}\n            >\n              Confirm Reservation\n            </Button>\n          </FormContainer>\n        </>\n      }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/reservationRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationListScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/ReservationScreen.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/DriverStats.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/admin/drivers/DriverStatus.js",["629"],"import React, { useEffect, useState } from 'react';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport { Alert } from 'react-bootstrap';\n\n\nexport default function DriverStatus ({status}) {\n\n  useEffect(() => {\n    console.log('Driver Status', status);\n  }, [status]);\n\n  return (\n    <>\n      { status === 'available'\n        ? <Alert className=\"p-1 m-1\" variant='success'>\n            <CircleIcon sx={{ fontSize: 10, marginBottom: '2px', marginRight: '5px' }}/>{ status }\n          </Alert>\n        : (\n          status === 'full'\n          ? (<Alert className=\"p-1 m-1\" variant='danger'>\n              <CircleIcon sx={{ fontSize: 10, marginBottom: '2px', marginRight: '5px' }}/>{ status }\n            </Alert>)\n          : (<Alert className=\"p-1 m-1\" variant='warning'>\n              <CircleIcon sx={{ fontSize: 10, marginBottom: '2px', marginRight: '5px' }}/>{ status }\n            </Alert>)\n        )\n      }\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/Restaurant.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/restaurantRequests.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/RestaurantCarousel.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/screens/RestaurantScreen.js",["630"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, ListGroup, Image } from 'react-bootstrap';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport RestaurantProducts from '../components/RestaurantProducts';\nimport Rating from '../components/Rating';\nimport { getRestaurantById } from '../networking/restaurantRequests';\n\n\nexport default function RestaurantScreen ({match, history}) {\n\n  const [ restaurant, setRestaurant ] = useState(null);\n  const [ loading, setLoading ] = useState(true);\n  const [ error, setError ] = useState(null);\n\n  const { userInfo } = useSelector(state => state.userCookie );\n\n  const getFullAddress = () => {\n    return `${restaurant.locations[0].address}, ${restaurant.locations[0].district}, S${restaurant.locations[0].postal_code}`;\n  }\n\n  const fetchRestaurantInfo = async (id, signal) => {\n    try {\n      const { error, message, data } = await getRestaurantById(id, signal);\n\n      if (error) {\n        setError(message);\n      }\n      else {\n        setError (null);\n        setRestaurant(data);\n      }\n    }\n    catch (error) {\n      setError(error.message);\n    }\n  }\n\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (match) {\n      (async () => await fetchRestaurantInfo(match.params.id, abortController.signal))()\n    }\n\n    return (() => {\n      if (abortController) abortController.abort();\n    });\n\n  }, [history, match, userInfo]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [error, restaurant]);\n\n\n  return (\n    <div>\n      <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n      {loading && <Loader/>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {restaurant &&\n        <>\n          <Card className=\"my-3\">\n            <Card.Body>\n              <Row>\n\n                <Col md={3}>\n                  <Image\n                    style={{ height: '150px', width: '300px'}}\n                    src={restaurant.logo}\n                    alt={restaurant.name}\n                    fluid\n                  />\n                </Col>\n\n                <Col md={6}>\n                  <ListGroup variant=\"flush\">\n                      <ListGroup.Item>\n                          <h3>{restaurant.name}</h3>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                          Description: {restaurant.description}\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                        <Rating value={0} text={`0 reviews`} color={'#f8e825'} />\n                      </ListGroup.Item>\n                  </ListGroup>\n                </Col>\n\n                <Col md={3}>\n                  <ListGroup className=\"py-3\" variant=\"flush\">\n                    <ListGroup.Item>\n                        <h4>Contact</h4>\n                    </ListGroup.Item>\n                      <ListGroup.Item>\n                          <h6>Address: {getFullAddress()}</h6>\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                          <h6>Mobile: {restaurant.locations[0].contact_number}</h6>\n                      </ListGroup.Item>\n                  </ListGroup>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n          <RestaurantProducts restaurantId={restaurant._id}/>\n        </>\n      }\n    </div>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/components/RestaurantProducts.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/networking/productRequests.js",["631"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/Dashboard.js",["632","633"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getRestaurantInfo } from '../actions/restaurantActions';\n\n\nexport default function Dashboard () {\n\n  const dispatch = useDispatch();\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const { loading, error, empty, restaurantInfo } = useSelector(state => state.restaurant);\n\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (userInfo) {\n      dispatch(getRestaurantInfo(userInfo.id, userInfo.token, abortController.signal));\n    }\n\n    return(() => {\n      if (abortController) abortController.abort();\n    });\n  }, [userInfo]);\n\n\n  return (\n    <>\n      { error && <Message variant='danger'>{error}</Message> }\n      { empty && <Message variant='info'>Please Create Your Restaurant Profile in Restaurant Setting.</Message>}\n      { loading && <Loader /> }\n      { restaurantInfo && (\n        <h5>{restaurantInfo.name}</h5>\n      )}\n    </>\n  )\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/RestaurantOwner.js",["634"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/Appbar.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/DrawerMenu.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/ProductDashboard.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/ProductList.js",["635","636","637","638","639"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport CustomTable from '../CustomTable';\nimport EditProduct from './EditProduct';\nimport Message from '../../components/Message';\nimport Loader from '../../components/Loader';\nimport { listRestaurantProducts } from '../../actions/productActions';\n\n\nconst styles = {\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '25px',\n    padding: '10px'\n  }\n};\n\n\nconst columns = [\n  { id: '_id', label: 'ID', maxWidth: 70 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'description',\n    label: 'Description',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'price',\n    label: 'Price',\n    maxWidth: 100,\n    align: 'right',\n  },\n  {\n    id: 'numReviews',\n    label: 'Number of Reviews',\n    maxWidth: 120,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'rating',\n    label: 'Rating',\n    maxWidth: 150,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\n\nexport default function ProductList ({addNewProduct}) {\n\n  const [ openEditProduct, setOpenEditProduct ] = useState(false);\n  const [ editingID, setEditingID ] = useState(null);\n\n  const dispatch = useDispatch();\n  const { empty, restaurantInfo } = useSelector(state => state.restaurant);\n  const { loading, error, products } = useSelector(state => state.productList);\n\n\n  const editProduct = (val) => {\n    setEditingID(val);\n    setOpenEditProduct(true);\n  }\n\n  const closeOpenEditProduct = () => setOpenEditProduct(false);\n\n  useEffect(() => {\n    if (!openEditProduct) {\n      if (!empty && restaurantInfo)\n        dispatch( listRestaurantProducts(restaurantInfo._id) )\n    }\n  }, [openEditProduct, empty, restaurantInfo]);\n\n\n  return (\n    <>\n      { openEditProduct ?\n        (<EditProduct\n            editingID={editingID}\n            backToProductList={closeOpenEditProduct}\n          />)\n        : (\n          <>\n            <Paper sx={styles.topContainer}>\n              <Box sx={{width: '40%', maxWidth: '400px'}}>\n                <TextField fullWidth label=\"Search\" variant=\"outlined\" size=\"small\"/>\n              </Box>\n\n              <Box>\n                <Button\n                  sx={{margin: '10px'}}\n                  variant=\"contained\"\n                  color=\"success\"\n                  onClick={() => addNewProduct()}\n                  endIcon={<AddIcon />}\n                >\n                  Add\n                </Button>\n                <Button sx={{margin: '10px'}} variant=\"contained\" endIcon={<FileDownloadIcon />}>\n                  Export\n                </Button>\n                <IconButton>\n                  <RefreshIcon color=\"primary\" />\n                </IconButton>\n              </Box>\n            </Paper>\n            <CustomTable\n              columns={columns}\n              rows={products}\n              type='products'\n              edit={editProduct}\n            />\n          </>\n        )}\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/CreateProduct.js",["640","641"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/CustomTable.js",["642","643","644","645"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FilterListIcon from '@mui/icons-material/FilterList';\n\nimport CustomTableHead from './CustomTableHead';\nimport CustomTableBody from './CustomTableBody';\n\n\nconst EnhancedTableToolbar = (props) => {\n\n  const { selected, openEditPannel, deleteUser, numSelected, type } = props;\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    deleteUser(selected[0]);\n  }\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <h6>{type}</h6>\n      )}\n\n      {numSelected > 0 && (\n        <Tooltip title=\"Edit\">\n          <IconButton\n            color=\"primary\"\n            onClick={() => openEditPannel(selected[0])}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default function CustomTable (props) {\n\n  const { columns, rows, type, edit } = props;\n\n  const [ order, setOrder ] = useState('asc');\n  const [ orderBy, setOrderBy ] = useState('calories');\n  const [ selected, setSelected ] = useState([]);\n  const [ page, setPage ] = useState(0);\n  const [ dense, setDense ] = useState(false);\n  const [ rowsPerPage, setRowsPerPage ] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (type !== 'driver') {\n      if (event.target.checked) {\n        const newSelecteds = rows.map((n) => {\n          if (n.id)\n            return n.id;\n          else\n            return n._id;\n        });\n        setSelected(newSelecteds);\n        return;\n      }\n      setSelected([]);\n    }\n  };\n\n  const handleClick = (event, name) => {\n    if (type !== 'driver') {\n      const selectedIndex = selected.indexOf(name);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1),\n        );\n      }\n\n      setSelected(newSelected);\n    }\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      { rows &&\n        (\n          <>\n            <Paper sx={{ width: '100%', mb: 2 }}>\n\n              <EnhancedTableToolbar\n                numSelected={selected.length}\n                selected={selected}\n                openEditPannel={(id) => edit(id)}\n                type={type.toUpperCase()}\n              />\n\n              <TableContainer>\n                <Table\n                  sx={{ minWidth: 750 }}\n                  aria-labelledby=\"tableTitle\"\n                  size={dense ? 'small' : 'medium'}\n                >\n                  <CustomTableHead\n                    headCells={columns}\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rows.length}\n                    type={type}\n                  />\n                  <CustomTableBody\n                    rows={rows}\n                    page={page}\n                    rowsPerPage={rowsPerPage}\n                    handleClick={handleClick}\n                    orderBy={orderBy}\n                    emptyRows={emptyRows}\n                    isSelected={isSelected}\n                    order={order}\n                    dataType={type}\n                  />\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </Paper>\n            <FormControlLabel\n              control={<Switch checked={dense} onChange={handleChangeDense} />}\n              label=\"Dense padding\"\n            />\n          </>\n        )\n      }\n    </Box>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/products/EditProduct.js",["646","647","648","649","650","651","652","653","654","655","656"],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/CustomTableHead.js",["657"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Box from '@mui/material/Box';\nimport { visuallyHidden } from '@mui/utils';\n\n\nCustomTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\n\nexport default function CustomTableHead (props) {\n\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    headCells,\n    type\n  } = props;\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {type !== 'driver' &&\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>}\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/CustomTableBody.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/MyRestaurant.js",["658","659","660","661","662"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { Row, Col } from 'react-bootstrap';\n\nimport RestaurantDetails from './RestaurantDetails';\nimport LocationContact from './LocationContact';\nimport NewRestaurant from './NewRestaurant';\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { updateRestaurantInfo } from '../../actions/restaurantActions';\n\n\nconst styles = {\n  link: {\n    marginTop : '15px',\n    marginBottom : '10px',\n    color: 'gray',\n    '&:hover': {\n      color: 'black',\n      cursor: 'pointer'\n    },\n  }\n}\n\n\n\nfunction renderContent (content) {\n  if (content === 'details')\n    return <RestaurantDetails />;\n  else if (content === 'location')\n    return <LocationContact />;\n  else\n    return <Message variant=\"info\">Unexpected Error! Please refresh the page.</Message>;\n}\n\n\nexport default function MyRestaurant () {\n\n  const [ content, setContent ] = useState(null);\n\n  const { loading, error, empty, restaurantInfo } = useSelector(state => state.restaurant);\n\n  useEffect(() => {\n    if (empty) {\n      setContent(null)\n    }\n    else if (!empty && restaurantInfo) {\n      setContent('details');\n    }\n\n  }, [loading, error, empty, restaurantInfo])\n\n  return (\n    <Paper sx={{padding: '15px'}}>\n      { (restaurantInfo && !empty)\n        ? (<Row>\n          <Col sm=\"2\">\n          <Typography onClick={() => setContent('details')}\n            variant='subtitle1'\n            sx={{\n              ...styles.link,\n              color: content === 'details' ? 'black' : 'gray'\n            }}\n          >\n            Restaurant Details\n          </Typography>\n          <Typography onClick={() => setContent('location')}\n            variant='subtitle1'\n            sx={{\n              ...styles.link,\n              color: content === 'location' ? 'black' : 'gray'\n            }}\n          >\n            Loacation & Contact\n          </Typography>\n          </Col>\n          <Col sm=\"10\">\n            { renderContent(content) }\n          </Col>\n        </Row>)\n        : <NewRestaurant />\n      }\n    </Paper>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/reducers/restaurantReducers.js",["663"],"import {\n  RESTAURANT_INFO,\n  RESTAURANT_INFO_REQUEST,\n  RESTAURANT_INFO_ERROR,\n  RESTAURANT_EDIT,\n  RESTAURANT_LOGO,\n  RESTAURANT_RESET,\n  RESTAURANT_NA,\n  RESTAURANT_EDIT_ERROR,\n  RESTAURANT_EDIT_REQUEST,\n  RESTAURANT_CREATE,\n  RESTAURANT_CREATE_ERROR,\n  RESTAURANT_CREATE_REQUEST\n} from '../constants/restaurantConstants';\n\n\n\nexport function restaurantReducer (state={}, action) {\n\n  switch (action.type) {\n\n    case RESTAURANT_CREATE_REQUEST:\n    case RESTAURANT_INFO_REQUEST:\n      return { loading: true };\n\n    case RESTAURANT_CREATE:\n    case RESTAURANT_INFO:\n      return { loading: false, restaurantInfo: action.payload };\n\n    case RESTAURANT_NA:\n      return { loading: false, empty: true };\n\n    case RESTAURANT_CREATE_ERROR:\n    case RESTAURANT_INFO_ERROR:\n      return { loading: false, error: action.payload };\n\n    case RESTAURANT_EDIT_REQUEST:\n      return { loading: true };\n\n    case RESTAURANT_EDIT:\n      return { loading: false, restaurantInfo: action.payload };\n\n    case RESTAURANT_EDIT_ERROR:\n      return { loading: false, error: action.payload };\n\n    case RESTAURANT_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/constants/restaurantConstants.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/actions/restaurantActions.js",[],"/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/RestaurantDetails.js",["664","665","666"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport { Card, Image, Button, Form, Stack } from 'react-bootstrap';\n\nimport FormContainer from '../../components/FormContainer';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport { updateRestaurantInfo } from '../../actions/restaurantActions';\n\n\n\nexport default function RestaurantDetails () {\n\n  const [ restaurant, setRestaurant ] = useState(null);\n  const [ editing, setEditing ] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { userInfo } = useSelector(state => state.userCookie);\n  const { error, empty, loading, restaurantInfo } = useSelector(state => state.restaurant);\n\n\n  const handleOnChange = (e) => {\n    setRestaurant({\n      ...restaurant,\n      [e.target.name] : e.target.value\n    })\n  }\n\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    console.log(userInfo.id, restaurant)\n    dispatch(updateRestaurantInfo(\n      restaurant._id,\n      {\n        owner: userInfo.id,\n        name: restaurant.name,\n        description: restaurant.description\n      },\n      userInfo.token\n    ))\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n\n    if (restaurantInfo)\n      setRestaurant(restaurantInfo);\n  }, [userInfo, error, empty, loading, restaurantInfo]);\n\n  return (\n    <>\n      {loading && <Loader/>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {empty && <Message variant='info'>You have not set up your restaurant yet!</Message>}\n      {restaurant && (\n        <Card>\n          <Card.Body>\n            <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '15px'}}>\n              <Image\n                style={{ height: '200px', width: '300px', border: '0.4px solid gainsboro', borderRadius: '10px'}}\n                src={restaurant.logo}\n                alt={restaurant.name}\n                onClick={() => console.log('Onclick Image')}\n                fluid\n              />\n            </div>\n\n            <FormContainer>\n              <Form onSubmit={handleOnSubmit}>\n\n                <Form.Group controlId='name'>\n                  <Form.Label>Restaurant Name</Form.Label>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Beef Pepperoni\"\n                    name='name'\n                    value={restaurant.name}\n                    onChange={handleOnChange}\n                    readOnly={!editing}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId='description'>\n                  <Form.Label>Restaurant Description</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    required\n                    type=\"text\"\n                    placeholder=\"Tasty Pizza with Pineapple\"\n                    name='description'\n                    value={restaurant.description}\n                    onChange={handleOnChange}\n                    readOnly={!editing}\n                  />\n                </Form.Group>\n\n                { !editing && (\n                  <Button\n                    variant=\"primary\"\n                    className=\"mr-1\"\n                    onClick={() => setEditing(true)}\n                  >\n                    Edit\n                  </Button>\n                )}\n\n                {editing && (\n                  <div>\n                    <Button\n                      variant=\"success\"\n                      className=\"mr-1 \"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      variant=\"light\"\n                      className=\"mx-1\"\n                      onClick={() => setEditing(false)}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                )}\n\n              </Form>\n            </FormContainer>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/LocationContact.js",["667"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Form, Button } from 'react-bootstrap';\n\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport FormContainer from '../../components/FormContainer';\nimport { updateRestaurantLocation } from '../../actions/restaurantActions';\n\n\nexport default function LocationContact () {\n\n  const [ location, setLocation ] = useState(null);\n  const [ editing, setEditing ] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { loading, error, empty, restaurantInfo } = useSelector(state => state.restaurant);\n  const { userInfo } = useSelector(state => state.userCookie);\n\n\n  const handleOnChange = (e) => {\n    setLocation({\n      ...location,\n      [e.target.name] : e.target.value\n    })\n  };\n\n  const onCancelClick = (e) => {\n    e.preventDefault();\n    setEditing(false);\n    setLocation({\n      ...restaurantInfo.locations[0]\n    });\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    console.log(location, restaurantInfo._id);\n    dispatch(updateRestaurantLocation(\n      restaurantInfo._id,\n      {\n        address: location.address,\n        district: location.district,\n        postal_code: location.postal_code,\n        contact_number: location.contact_number\n      },\n      userInfo.token\n    ));\n    setEditing(false);\n  };\n\n\n  useEffect(() => {\n    if (!userInfo)\n      history.push('/');\n  }, [userInfo, location]);\n\n  useEffect(() => {\n    if (restaurantInfo)\n      setLocation(restaurantInfo.locations[0]);\n  }, [loading, error, empty, restaurantInfo]);\n\n  return (\n    <>\n      {loading && <Loader/>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {empty && <Message variant='info'>You have not set up your restaurant yet!</Message>}\n      {location && (\n        <Card>\n          <Card.Body>\n            <Card.Title className=\"text-center\">Restaurant Address & Contact</Card.Title>\n            <FormContainer>\n              <Form onSubmit={handleOnSubmit}>\n                <Form.Group controlId='name'>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Address\"\n                    name='address'\n                    value={location.address}\n                    onChange={handleOnChange}\n                    readOnly={!editing}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId='name'>\n                  <Form.Label>Postal Code</Form.Label>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Postal Code\"\n                    name='postal_code'\n                    value={location.postal_code}\n                    onChange={handleOnChange}\n                    readOnly={!editing}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId='name'>\n                  <Form.Label>District</Form.Label>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"District\"\n                    name='district'\n                    value={location.district}\n                    onChange={handleOnChange}\n                    readOnly={!editing}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId='contact_number'>\n                  <Form.Label>Contact Number</Form.Label>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Contact Number\"\n                    name='contact_number'\n                    value={location.contact_number}\n                    onChange={handleOnChange}\n                    readOnly={!editing}\n                  />\n                </Form.Group>\n\n                { !editing && (\n                  <Button\n                    variant=\"primary\"\n                    className=\"mr-1\"\n                    onClick={() => setEditing(true)}\n                  >\n                    Edit\n                  </Button>\n                )}\n\n                {editing && (\n                  <div>\n                    <Button\n                      variant=\"success\"\n                      className=\"mr-1 \"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      variant=\"light\"\n                      className=\"mx-1\"\n                      onClick={onCancelClick}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                )}\n              </Form>\n            </FormContainer>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/restaurant_setting/NewRestaurant.js",["668"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport FormContainer from '../../components/FormContainer';\nimport { createRestaurant } from '../../actions/restaurantActions';\n\n\nexport default function NewRestaurant () {\n\n  const [ restaurant, setRestaurant ] = useState({\n    name: '',\n    description: '',\n    address: '',\n    district: '',\n    postal_code: '',\n    contact_number: ''\n  });\n  const [ allowCreate, setAllowCreate ] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loading, error, empty, restaurantInfo } = useSelector(state => state.restaurant);\n  const { userInfo } = useSelector(state => state.userCookie);\n\n\n  const handleOnChange = (e) => {\n    setRestaurant({\n      ...restaurant,\n      [e.target.name] : e.target.value\n    });\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (!allowCreate) return;\n    dispatch(createRestaurant(\n      userInfo.token,\n      {\n        ...restaurant,\n        owner: userInfo.id\n      }\n    ));\n  };\n\n\n  useEffect(() => {\n    if (!userInfo)\n      history.push('/');\n\n    if (!empty) {\n      setAllowCreate(false);\n    }\n    else {\n      setAllowCreate(true);\n    }\n  }, [loading, error, empty, restaurantInfo, userInfo])\n\n  return (\n    <>\n      { error && <Message variant=\"info\">{error}</Message>}\n      { loading && <Loader/> }\n      { !restaurantInfo &&\n        <FormContainer>\n          <h4>Create Restaurant Profile</h4>\n          <Form className=\"mt-5\" onSubmit={handleOnSubmit}>\n            <Form.Group className=\"mb-2\" controlId='name'>\n              <Form.Label>Restaurant Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Name of your restaurant\"\n                name='name'\n                value={restaurant.name}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId='description'>\n              <Form.Label>Restaurant Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                type=\"text\"\n                placeholder=\"Enter your restaurant description\"\n                name='description'\n                value={restaurant.description}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId='address'>\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Address (eg. Block Num, Street etc...)\"\n                name='address'\n                value={restaurant.address}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId='district'>\n              <Form.Label>District</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"District eg. Jurong East\"\n                name='district'\n                value={restaurant.district}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId='postal_code'>\n              <Form.Label>Postal Code</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Postal Code eg. 123456\"\n                name='postal_code'\n                value={restaurant.postal_code}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId='contact_number'>\n              <Form.Label>Contact Number</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Contact Number eg. 12345678\"\n                name='contact_number'\n                value={restaurant.contact_number}\n                onChange={handleOnChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Label>Upload Product Image</Form.Label>\n              <Form.Control type=\"file\" />\n            </Form.Group>\n\n            <Button\n              type=\"submit\"\n              variant=\"success\"\n            >\n              Create Restaurant\n            </Button>\n          </Form>\n        </FormContainer>\n      }\n    </>\n  );\n}\n","/Users/kyawthit/Desktop/fl_projects/TrioPizza/TrioPizza/frontend/src/restaurant_owner/feature_products/FeatureProducts.js",["669"],{"ruleId":"670","replacedBy":"671"},{"ruleId":"672","replacedBy":"673"},{"ruleId":"674","severity":1,"message":"675","line":38,"column":11,"nodeType":"676","messageId":"677","endLine":38,"endColumn":21},{"ruleId":"674","severity":1,"message":"678","line":42,"column":9,"nodeType":"676","messageId":"677","endLine":42,"endColumn":22},{"ruleId":"679","severity":1,"message":"680","line":52,"column":8,"nodeType":"681","endLine":52,"endColumn":37,"suggestions":"682"},{"ruleId":"683","severity":1,"message":"684","line":144,"column":84,"nodeType":"685","messageId":"686","endLine":144,"endColumn":86},{"ruleId":"674","severity":1,"message":"687","line":2,"column":8,"nodeType":"676","messageId":"677","endLine":2,"endColumn":15},{"ruleId":"674","severity":1,"message":"688","line":11,"column":10,"nodeType":"676","messageId":"677","endLine":11,"endColumn":22},{"ruleId":"679","severity":1,"message":"689","line":66,"column":8,"nodeType":"681","endLine":66,"endColumn":27,"suggestions":"690"},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"679","severity":1,"message":"692","line":63,"column":8,"nodeType":"681","endLine":63,"endColumn":33,"suggestions":"693"},{"ruleId":"679","severity":1,"message":"689","line":69,"column":8,"nodeType":"681","endLine":69,"endColumn":14,"suggestions":"694"},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"674","severity":1,"message":"695","line":3,"column":10,"nodeType":"676","messageId":"677","endLine":3,"endColumn":14},{"ruleId":"674","severity":1,"message":"696","line":3,"column":16,"nodeType":"676","messageId":"677","endLine":3,"endColumn":22},{"ruleId":"674","severity":1,"message":"697","line":3,"column":34,"nodeType":"676","messageId":"677","endLine":3,"endColumn":39},{"ruleId":"679","severity":1,"message":"689","line":44,"column":6,"nodeType":"681","endLine":44,"endColumn":16,"suggestions":"698"},{"ruleId":"674","severity":1,"message":"699","line":9,"column":10,"nodeType":"676","messageId":"677","endLine":9,"endColumn":18},{"ruleId":"674","severity":1,"message":"700","line":9,"column":20,"nodeType":"676","messageId":"677","endLine":9,"endColumn":32},{"ruleId":"674","severity":1,"message":"701","line":10,"column":10,"nodeType":"676","messageId":"677","endLine":10,"endColumn":25},{"ruleId":"674","severity":1,"message":"702","line":10,"column":27,"nodeType":"676","messageId":"677","endLine":10,"endColumn":46},{"ruleId":"674","severity":1,"message":"703","line":15,"column":12,"nodeType":"676","messageId":"677","endLine":15,"endColumn":20},{"ruleId":"674","severity":1,"message":"704","line":15,"column":22,"nodeType":"676","messageId":"677","endLine":15,"endColumn":33},{"ruleId":"674","severity":1,"message":"705","line":21,"column":11,"nodeType":"676","messageId":"677","endLine":21,"endColumn":19},{"ruleId":"679","severity":1,"message":"706","line":95,"column":8,"nodeType":"681","endLine":95,"endColumn":18,"suggestions":"707"},{"ruleId":"679","severity":1,"message":"680","line":43,"column":8,"nodeType":"681","endLine":43,"endColumn":46,"suggestions":"708"},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"674","severity":1,"message":"709","line":2,"column":10,"nodeType":"676","messageId":"677","endLine":2,"endColumn":23},{"ruleId":"674","severity":1,"message":"697","line":3,"column":10,"nodeType":"676","messageId":"677","endLine":3,"endColumn":15},{"ruleId":"674","severity":1,"message":"696","line":3,"column":17,"nodeType":"676","messageId":"677","endLine":3,"endColumn":23},{"ruleId":"674","severity":1,"message":"710","line":10,"column":8,"nodeType":"676","messageId":"677","endLine":10,"endColumn":16},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"683","severity":1,"message":"711","line":32,"column":22,"nodeType":"685","messageId":"686","endLine":32,"endColumn":24},{"ruleId":"679","severity":1,"message":"680","line":78,"column":8,"nodeType":"681","endLine":78,"endColumn":37,"suggestions":"712"},{"ruleId":"674","severity":1,"message":"687","line":2,"column":8,"nodeType":"676","messageId":"677","endLine":2,"endColumn":15},{"ruleId":"674","severity":1,"message":"713","line":5,"column":47,"nodeType":"676","messageId":"677","endLine":5,"endColumn":52},{"ruleId":"674","severity":1,"message":"714","line":23,"column":9,"nodeType":"676","messageId":"677","endLine":23,"endColumn":16},{"ruleId":"674","severity":1,"message":"715","line":36,"column":22,"nodeType":"676","messageId":"677","endLine":36,"endColumn":29},{"ruleId":"674","severity":1,"message":"715","line":54,"column":22,"nodeType":"676","messageId":"677","endLine":54,"endColumn":29},{"ruleId":"670","replacedBy":"716"},{"ruleId":"672","replacedBy":"717"},{"ruleId":"674","severity":1,"message":"696","line":2,"column":10,"nodeType":"676","messageId":"677","endLine":2,"endColumn":16},{"ruleId":"674","severity":1,"message":"718","line":10,"column":5,"nodeType":"676","messageId":"677","endLine":10,"endColumn":23},{"ruleId":"674","severity":1,"message":"701","line":19,"column":5,"nodeType":"676","messageId":"677","endLine":19,"endColumn":20},{"ruleId":"674","severity":1,"message":"719","line":24,"column":5,"nodeType":"676","messageId":"677","endLine":24,"endColumn":24},{"ruleId":"674","severity":1,"message":"702","line":33,"column":5,"nodeType":"676","messageId":"677","endLine":33,"endColumn":24},{"ruleId":"674","severity":1,"message":"720","line":290,"column":15,"nodeType":"676","messageId":"677","endLine":290,"endColumn":19},{"ruleId":"674","severity":1,"message":"720","line":144,"column":17,"nodeType":"676","messageId":"677","endLine":144,"endColumn":21},{"ruleId":"674","severity":1,"message":"721","line":21,"column":5,"nodeType":"676","messageId":"677","endLine":21,"endColumn":30},{"ruleId":"674","severity":1,"message":"722","line":39,"column":5,"nodeType":"676","messageId":"677","endLine":39,"endColumn":28},{"ruleId":"674","severity":1,"message":"723","line":250,"column":26,"nodeType":"676","messageId":"677","endLine":250,"endColumn":34},{"ruleId":"679","severity":1,"message":"680","line":87,"column":6,"nodeType":"681","endLine":87,"endColumn":20,"suggestions":"724"},{"ruleId":"674","severity":1,"message":"725","line":13,"column":8,"nodeType":"676","messageId":"677","endLine":13,"endColumn":24},{"ruleId":"674","severity":1,"message":"726","line":14,"column":8,"nodeType":"676","messageId":"677","endLine":14,"endColumn":28},{"ruleId":"674","severity":1,"message":"727","line":15,"column":8,"nodeType":"676","messageId":"677","endLine":15,"endColumn":22},{"ruleId":"679","severity":1,"message":"689","line":111,"column":5,"nodeType":"681","endLine":111,"endColumn":37,"suggestions":"728"},{"ruleId":"674","severity":1,"message":"729","line":1,"column":27,"nodeType":"676","messageId":"677","endLine":1,"endColumn":36},{"ruleId":"674","severity":1,"message":"730","line":2,"column":8,"nodeType":"676","messageId":"677","endLine":2,"endColumn":17},{"ruleId":"674","severity":1,"message":"731","line":9,"column":8,"nodeType":"676","messageId":"677","endLine":9,"endColumn":18},{"ruleId":"674","severity":1,"message":"732","line":15,"column":8,"nodeType":"676","messageId":"677","endLine":15,"endColumn":18},{"ruleId":"674","severity":1,"message":"733","line":17,"column":8,"nodeType":"676","messageId":"677","endLine":17,"endColumn":22},{"ruleId":"674","severity":1,"message":"734","line":78,"column":15,"nodeType":"676","messageId":"677","endLine":78,"endColumn":27},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"674","severity":1,"message":"735","line":6,"column":8,"nodeType":"676","messageId":"677","endLine":6,"endColumn":16},{"ruleId":"674","severity":1,"message":"736","line":24,"column":5,"nodeType":"676","messageId":"677","endLine":24,"endColumn":21},{"ruleId":"674","severity":1,"message":"737","line":27,"column":5,"nodeType":"676","messageId":"677","endLine":27,"endColumn":13},{"ruleId":"679","severity":1,"message":"680","line":70,"column":6,"nodeType":"681","endLine":70,"endColumn":16,"suggestions":"738"},{"ruleId":"679","severity":1,"message":"680","line":65,"column":6,"nodeType":"681","endLine":65,"endColumn":17,"suggestions":"739"},{"ruleId":"679","severity":1,"message":"680","line":90,"column":6,"nodeType":"681","endLine":90,"endColumn":28,"suggestions":"740"},{"ruleId":"679","severity":1,"message":"741","line":104,"column":6,"nodeType":"681","endLine":104,"endColumn":34,"suggestions":"742"},{"ruleId":"674","severity":1,"message":"696","line":4,"column":26,"nodeType":"676","messageId":"677","endLine":4,"endColumn":32},{"ruleId":"679","severity":1,"message":"689","line":62,"column":6,"nodeType":"681","endLine":62,"endColumn":16,"suggestions":"743"},{"ruleId":"674","severity":1,"message":"744","line":25,"column":20,"nodeType":"676","messageId":"677","endLine":25,"endColumn":25},{"ruleId":"679","severity":1,"message":"745","line":86,"column":6,"nodeType":"681","endLine":86,"endColumn":15,"suggestions":"746"},{"ruleId":"674","severity":1,"message":"747","line":66,"column":11,"nodeType":"676","messageId":"677","endLine":66,"endColumn":18},{"ruleId":"674","severity":1,"message":"744","line":66,"column":20,"nodeType":"676","messageId":"677","endLine":66,"endColumn":25},{"ruleId":"679","severity":1,"message":"680","line":79,"column":6,"nodeType":"681","endLine":79,"endColumn":23,"suggestions":"748"},{"ruleId":"674","severity":1,"message":"749","line":10,"column":8,"nodeType":"676","messageId":"677","endLine":10,"endColumn":14},{"ruleId":"674","severity":1,"message":"747","line":26,"column":11,"nodeType":"676","messageId":"677","endLine":26,"endColumn":18},{"ruleId":"674","severity":1,"message":"750","line":28,"column":11,"nodeType":"676","messageId":"677","endLine":28,"endColumn":22},{"ruleId":"679","severity":1,"message":"680","line":76,"column":6,"nodeType":"681","endLine":76,"endColumn":36,"suggestions":"751"},{"ruleId":"679","severity":1,"message":"752","line":110,"column":6,"nodeType":"681","endLine":110,"endColumn":22,"suggestions":"753"},{"ruleId":"679","severity":1,"message":"754","line":126,"column":6,"nodeType":"681","endLine":126,"endColumn":34,"suggestions":"755"},{"ruleId":"674","severity":1,"message":"729","line":1,"column":27,"nodeType":"676","messageId":"677","endLine":1,"endColumn":36},{"ruleId":"674","severity":1,"message":"756","line":2,"column":10,"nodeType":"676","messageId":"677","endLine":2,"endColumn":21},{"ruleId":"674","severity":1,"message":"757","line":2,"column":23,"nodeType":"676","messageId":"677","endLine":2,"endColumn":34},{"ruleId":"674","severity":1,"message":"758","line":23,"column":26,"nodeType":"676","messageId":"677","endLine":23,"endColumn":42},{"ruleId":"674","severity":1,"message":"759","line":24,"column":24,"nodeType":"676","messageId":"677","endLine":24,"endColumn":38},{"ruleId":"674","severity":1,"message":"760","line":25,"column":25,"nodeType":"676","messageId":"677","endLine":25,"endColumn":40},{"ruleId":"679","severity":1,"message":"680","line":41,"column":6,"nodeType":"681","endLine":41,"endColumn":34,"suggestions":"761"},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"674","severity":1,"message":"762","line":6,"column":8,"nodeType":"676","messageId":"677","endLine":6,"endColumn":20},{"ruleId":"674","severity":1,"message":"763","line":36,"column":9,"nodeType":"676","messageId":"677","endLine":36,"endColumn":25},{"ruleId":"674","severity":1,"message":"764","line":3,"column":10,"nodeType":"676","messageId":"677","endLine":3,"endColumn":18},{"ruleId":"674","severity":1,"message":"765","line":3,"column":28,"nodeType":"676","messageId":"677","endLine":3,"endColumn":39},{"ruleId":"674","severity":1,"message":"766","line":3,"column":41,"nodeType":"676","messageId":"677","endLine":3,"endColumn":50},{"ruleId":"674","severity":1,"message":"767","line":10,"column":10,"nodeType":"676","messageId":"677","endLine":10,"endColumn":29},{"ruleId":"674","severity":1,"message":"768","line":44,"column":11,"nodeType":"676","messageId":"677","endLine":44,"endColumn":17},{"ruleId":"674","severity":1,"message":"769","line":44,"column":19,"nodeType":"676","messageId":"677","endLine":44,"endColumn":28},{"ruleId":"674","severity":1,"message":"770","line":45,"column":11,"nodeType":"676","messageId":"677","endLine":45,"endColumn":18},{"ruleId":"674","severity":1,"message":"771","line":45,"column":20,"nodeType":"676","messageId":"677","endLine":45,"endColumn":29},{"ruleId":"674","severity":1,"message":"705","line":50,"column":9,"nodeType":"676","messageId":"677","endLine":50,"endColumn":17},{"ruleId":"674","severity":1,"message":"772","line":7,"column":7,"nodeType":"676","messageId":"677","endLine":7,"endColumn":13},{"ruleId":"674","severity":1,"message":"773","line":3,"column":24,"nodeType":"676","messageId":"677","endLine":3,"endColumn":27},{"ruleId":"674","severity":1,"message":"774","line":3,"column":29,"nodeType":"676","messageId":"677","endLine":3,"endColumn":32},{"ruleId":"674","severity":1,"message":"697","line":3,"column":34,"nodeType":"676","messageId":"677","endLine":3,"endColumn":39},{"ruleId":"674","severity":1,"message":"775","line":27,"column":40,"nodeType":"676","messageId":"677","endLine":27,"endColumn":53},{"ruleId":"674","severity":1,"message":"776","line":70,"column":19,"nodeType":"676","messageId":"677","endLine":70,"endColumn":24},{"ruleId":"679","severity":1,"message":"777","line":96,"column":6,"nodeType":"681","endLine":96,"endColumn":25,"suggestions":"778"},{"ruleId":"674","severity":1,"message":"756","line":2,"column":10,"nodeType":"676","messageId":"677","endLine":2,"endColumn":21},{"ruleId":"674","severity":1,"message":"779","line":3,"column":8,"nodeType":"676","messageId":"677","endLine":3,"endColumn":11},{"ruleId":"674","severity":1,"message":"780","line":4,"column":8,"nodeType":"676","messageId":"677","endLine":4,"endColumn":13},{"ruleId":"674","severity":1,"message":"781","line":5,"column":8,"nodeType":"676","messageId":"677","endLine":5,"endColumn":17},{"ruleId":"674","severity":1,"message":"696","line":6,"column":8,"nodeType":"676","messageId":"677","endLine":6,"endColumn":14},{"ruleId":"674","severity":1,"message":"782","line":7,"column":8,"nodeType":"676","messageId":"677","endLine":7,"endColumn":18},{"ruleId":"674","severity":1,"message":"783","line":8,"column":8,"nodeType":"676","messageId":"677","endLine":8,"endColumn":15},{"ruleId":"674","severity":1,"message":"784","line":9,"column":8,"nodeType":"676","messageId":"677","endLine":9,"endColumn":24},{"ruleId":"674","severity":1,"message":"785","line":10,"column":8,"nodeType":"676","messageId":"677","endLine":10,"endColumn":19},{"ruleId":"674","severity":1,"message":"772","line":20,"column":7,"nodeType":"676","messageId":"677","endLine":20,"endColumn":13},{"ruleId":"674","severity":1,"message":"715","line":74,"column":30,"nodeType":"676","messageId":"677","endLine":74,"endColumn":37},{"ruleId":"679","severity":1,"message":"689","line":98,"column":6,"nodeType":"681","endLine":98,"endColumn":16,"suggestions":"786"},{"ruleId":"679","severity":1,"message":"787","line":67,"column":6,"nodeType":"681","endLine":67,"endColumn":22,"suggestions":"788"},{"ruleId":"674","severity":1,"message":"691","line":1,"column":28,"nodeType":"676","messageId":"677","endLine":1,"endColumn":36},{"ruleId":"674","severity":1,"message":"756","line":2,"column":10,"nodeType":"676","messageId":"677","endLine":2,"endColumn":21},{"ruleId":"674","severity":1,"message":"720","line":69,"column":13,"nodeType":"676","messageId":"677","endLine":69,"endColumn":17},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"679","severity":1,"message":"680","line":27,"column":6,"nodeType":"681","endLine":27,"endColumn":16,"suggestions":"789"},{"ruleId":"679","severity":1,"message":"689","line":107,"column":5,"nodeType":"681","endLine":107,"endColumn":37,"suggestions":"790"},{"ruleId":"674","severity":1,"message":"791","line":14,"column":8,"nodeType":"676","messageId":"677","endLine":14,"endColumn":15},{"ruleId":"674","severity":1,"message":"749","line":15,"column":8,"nodeType":"676","messageId":"677","endLine":15,"endColumn":14},{"ruleId":"674","severity":1,"message":"747","line":69,"column":11,"nodeType":"676","messageId":"677","endLine":69,"endColumn":18},{"ruleId":"674","severity":1,"message":"744","line":69,"column":20,"nodeType":"676","messageId":"677","endLine":69,"endColumn":25},{"ruleId":"679","severity":1,"message":"680","line":84,"column":6,"nodeType":"681","endLine":84,"endColumn":46,"suggestions":"792"},{"ruleId":"674","severity":1,"message":"744","line":26,"column":20,"nodeType":"676","messageId":"677","endLine":26,"endColumn":25},{"ruleId":"679","severity":1,"message":"793","line":101,"column":6,"nodeType":"681","endLine":101,"endColumn":15,"suggestions":"794"},{"ruleId":"674","severity":1,"message":"729","line":1,"column":27,"nodeType":"676","messageId":"677","endLine":1,"endColumn":36},{"ruleId":"674","severity":1,"message":"732","line":15,"column":8,"nodeType":"676","messageId":"677","endLine":15,"endColumn":18},{"ruleId":"674","severity":1,"message":"733","line":17,"column":8,"nodeType":"676","messageId":"677","endLine":17,"endColumn":22},{"ruleId":"674","severity":1,"message":"795","line":27,"column":9,"nodeType":"676","messageId":"677","endLine":27,"endColumn":26},{"ruleId":"674","severity":1,"message":"773","line":8,"column":16,"nodeType":"676","messageId":"677","endLine":8,"endColumn":19},{"ruleId":"674","severity":1,"message":"774","line":8,"column":21,"nodeType":"676","messageId":"677","endLine":8,"endColumn":24},{"ruleId":"674","severity":1,"message":"796","line":11,"column":8,"nodeType":"676","messageId":"677","endLine":11,"endColumn":16},{"ruleId":"674","severity":1,"message":"749","line":15,"column":8,"nodeType":"676","messageId":"677","endLine":15,"endColumn":14},{"ruleId":"674","severity":1,"message":"747","line":35,"column":11,"nodeType":"676","messageId":"677","endLine":35,"endColumn":18},{"ruleId":"674","severity":1,"message":"750","line":37,"column":11,"nodeType":"676","messageId":"677","endLine":37,"endColumn":22},{"ruleId":"674","severity":1,"message":"720","line":89,"column":15,"nodeType":"676","messageId":"677","endLine":89,"endColumn":19},{"ruleId":"679","severity":1,"message":"680","line":117,"column":6,"nodeType":"681","endLine":117,"endColumn":36,"suggestions":"797"},{"ruleId":"679","severity":1,"message":"798","line":138,"column":6,"nodeType":"681","endLine":138,"endColumn":48,"suggestions":"799"},{"ruleId":"679","severity":1,"message":"752","line":160,"column":6,"nodeType":"681","endLine":160,"endColumn":22,"suggestions":"800"},{"ruleId":"679","severity":1,"message":"754","line":176,"column":6,"nodeType":"681","endLine":176,"endColumn":34,"suggestions":"801"},{"ruleId":"674","severity":1,"message":"691","line":1,"column":17,"nodeType":"676","messageId":"677","endLine":1,"endColumn":25},{"ruleId":"674","severity":1,"message":"756","line":2,"column":10,"nodeType":"676","messageId":"677","endLine":2,"endColumn":21},{"ruleId":"674","severity":1,"message":"802","line":3,"column":10,"nodeType":"676","messageId":"677","endLine":3,"endColumn":20},{"ruleId":"674","severity":1,"message":"803","line":11,"column":8,"nodeType":"676","messageId":"677","endLine":11,"endColumn":21},{"ruleId":"674","severity":1,"message":"749","line":12,"column":8,"nodeType":"676","messageId":"677","endLine":12,"endColumn":14},{"ruleId":"674","severity":1,"message":"804","line":14,"column":10,"nodeType":"676","messageId":"677","endLine":14,"endColumn":30},{"ruleId":"674","severity":1,"message":"805","line":6,"column":3,"nodeType":"676","messageId":"677","endLine":6,"endColumn":18},{"ruleId":"674","severity":1,"message":"780","line":4,"column":8,"nodeType":"676","messageId":"677","endLine":4,"endColumn":13},{"ruleId":"674","severity":1,"message":"806","line":5,"column":37,"nodeType":"676","messageId":"677","endLine":5,"endColumn":42},{"ruleId":"679","severity":1,"message":"689","line":55,"column":6,"nodeType":"681","endLine":55,"endColumn":55,"suggestions":"807"},{"ruleId":"679","severity":1,"message":"689","line":59,"column":6,"nodeType":"681","endLine":59,"endColumn":26,"suggestions":"808"},{"ruleId":"679","severity":1,"message":"689","line":61,"column":6,"nodeType":"681","endLine":61,"endColumn":55,"suggestions":"809"},{"ruleId":"674","severity":1,"message":"780","line":3,"column":8,"nodeType":"676","messageId":"677","endLine":3,"endColumn":13},"no-native-reassign",["810"],"no-negated-in-lhs",["811"],"no-unused-vars","'showHeader' is assigned a value but never used.","Identifier","unusedVar","'displayHeader' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["812"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Cookies' is defined but never used.","'listProducts' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["813"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["814"],["815"],"'Form' is defined but never used.","'Button' is defined but never used.","'Table' is defined but never used.",["816"],"'payOrder' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'orderId'. Either include them or remove the dependency array.",["817"],["818"],"'LinkContainer' is defined but never used.","'Paginate' is defined but never used.","Expected '!==' and instead saw '!='.",["819"],"'Alert' is defined but never used.","'history' is assigned a value but never used.","'message' is assigned a value but never used.",["810"],["811"],"'ORDER_CANCEL_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'AVAILABLE_DRIVERS_RESET' is defined but never used.","'userInfo' is assigned a value but never used.",["820"],"'ProductDashboard' is defined but never used.","'ReservationDashboard' is defined but never used.","'OrderDashboard' is defined but never used.",["821"],"'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'Typography' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'newSelecteds' is assigned a value but never used.","'Checkbox' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'rowCount' is assigned a value but never used.",["822"],["823"],["824"],"React Hook useEffect has missing dependencies: 'closeEditUser' and 'dispatch'. Either include them or remove the dependency array. If 'closeEditUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["825"],["826"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'newProduct.name'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessage' needs the current value of 'newProduct.name'.",["827"],"'loading' is assigned a value but never used.",["828"],"'Loader' is defined but never used.","'updateError' is assigned a value but never used.",["829"],"React Hook useEffect has missing dependencies: 'dispatch', 'product.description', 'product.name', and 'product.price'. Either include them or remove the dependency array.",["830"],"React Hook useEffect has missing dependencies: 'backToProductList' and 'dispatch'. Either include them or remove the dependency array. If 'backToProductList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["831"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'setMonthlyOrders' is assigned a value but never used.","'setDailyOrders' is assigned a value but never used.","'setActiveOrders' is assigned a value but never used.",["832"],"'OrderDetails' is defined but never used.","'displayOrderItem' is assigned a value but never used.","'Dropdown' is defined but never used.","'ButtonGroup' is defined but never used.","'ListGroup' is defined but never used.","'getAvailableDrivers' is defined but never used.","'driver' is assigned a value but never used.","'setDriver' is assigned a value but never used.","'drivers' is assigned a value but never used.","'setDrives' is assigned a value but never used.","'styles' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["833"],"'Box' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'IconButton' is defined but never used.","'AddIcon' is defined but never used.","'FileDownloadIcon' is defined but never used.","'RefreshIcon' is defined but never used.",["834"],"React Hook useEffect has missing dependencies: 'history' and 'reservationCreated'. Either include them or remove the dependency array.",["835"],["836"],["837"],"'Message' is defined but never used.",["838"],"React Hook useEffect has missing dependencies: 'backToProductList', 'dispatch', 'newProduct.name', and 'restaurantInfo'. Either include them or remove the dependency array. If 'backToProductList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["839"],"'handleDeleteClick' is assigned a value but never used.","'SaveIcon' is defined but never used.",["840"],"React Hook useEffect has missing dependencies: 'backToProductList' and 'history'. Either include them or remove the dependency array. If 'backToProductList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["841"],["842"],["843"],"'useHistory' is defined but never used.","'FormContainer' is defined but never used.","'updateRestaurantInfo' is defined but never used.","'RESTAURANT_LOGO' is defined but never used.","'Stack' is defined but never used.",["844"],["845"],["846"],"no-global-assign","no-unsafe-negation",{"desc":"847","fix":"848"},{"desc":"849","fix":"850"},{"desc":"851","fix":"852"},{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"857","fix":"858"},{"desc":"859","fix":"860"},{"desc":"847","fix":"861"},{"desc":"862","fix":"863"},{"desc":"864","fix":"865"},{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"855","fix":"874"},{"desc":"875","fix":"876"},{"desc":"877","fix":"878"},{"desc":"879","fix":"880"},{"desc":"881","fix":"882"},{"desc":"883","fix":"884"},{"desc":"885","fix":"886"},{"desc":"887","fix":"888"},{"desc":"855","fix":"889"},{"desc":"890","fix":"891"},{"desc":"866","fix":"892"},{"desc":"864","fix":"893"},{"desc":"894","fix":"895"},{"desc":"896","fix":"897"},{"desc":"879","fix":"898"},{"desc":"899","fix":"900"},{"desc":"881","fix":"901"},{"desc":"883","fix":"902"},{"desc":"903","fix":"904"},{"desc":"905","fix":"906"},{"desc":"907","fix":"908"},"Update the dependencies array to be: [history, userInfo, redirect, dispatch]",{"range":"909","text":"910"},"Update the dependencies array to be: [userInfo, keyword, history]",{"range":"911","text":"912"},"Update the dependencies array to be: [success, history, error, order._id, dispatch]",{"range":"913","text":"914"},"Update the dependencies array to be: [cart, history]",{"range":"915","text":"916"},"Update the dependencies array to be: [history, userInfo]",{"range":"917","text":"918"},"Update the dependencies array to be: [history, orderId, userInfo]",{"range":"919","text":"920"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"921","text":"922"},{"range":"923","text":"910"},"Update the dependencies array to be: [dispatch, openEditUser]",{"range":"924","text":"925"},"Update the dependencies array to be: [open, page, dispatch, userInfo, history]",{"range":"926","text":"927"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"928","text":"929"},"Update the dependencies array to be: [dispatch, editingID]",{"range":"930","text":"931"},"Update the dependencies array to be: [userDetails, success, dispatch]",{"range":"932","text":"933"},"Update the dependencies array to be: [closeEditUser, dispatch, errorDelete, successDelete]",{"range":"934","text":"935"},{"range":"936","text":"918"},"Update the dependencies array to be: [dispatch, newProduct.name, product]",{"range":"937","text":"938"},"Update the dependencies array to be: [dispatch, openEditProduct]",{"range":"939","text":"940"},"Update the dependencies array to be: [editingID, backToProductList, dispatch]",{"range":"941","text":"942"},"Update the dependencies array to be: [dispatch, product.description, product.name, product.price, updatedProduct]",{"range":"943","text":"944"},"Update the dependencies array to be: [backToProductList, dispatch, errorDelete, successDelete]",{"range":"945","text":"946"},"Update the dependencies array to be: [userInfo, showOrderDetails, dispatch]",{"range":"947","text":"948"},"Update the dependencies array to be: [userInfo, success, history, dispatch]",{"range":"949","text":"950"},{"range":"951","text":"918"},"Update the dependencies array to be: [history, info, reservationCreated, userInfo]",{"range":"952","text":"953"},{"range":"954","text":"929"},{"range":"955","text":"927"},"Update the dependencies array to be: [openEditProduct, empty, restaurantInfo, dispatch]",{"range":"956","text":"957"},"Update the dependencies array to be: [backToProductList, dispatch, newProduct.name, product, restaurantInfo]",{"range":"958","text":"959"},{"range":"960","text":"942"},"Update the dependencies array to be: [product, error, restaurantInfo, userInfo, history, backToProductList]",{"range":"961","text":"962"},{"range":"963","text":"944"},{"range":"964","text":"946"},"Update the dependencies array to be: [userInfo, error, empty, loading, restaurantInfo, history]",{"range":"965","text":"966"},"Update the dependencies array to be: [userInfo, location, history]",{"range":"967","text":"968"},"Update the dependencies array to be: [loading, error, empty, restaurantInfo, userInfo, history]",{"range":"969","text":"970"},[1402,1431],"[history, userInfo, redirect, dispatch]",[1926,1945],"[userInfo, keyword, history]",[2162,2187],"[success, history, error, order._id, dispatch]",[2296,2302],"[cart, history]",[954,964],"[history, userInfo]",[2717,2727],"[history, orderId, userInfo]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2107,2136],[2003,2017],"[dispatch, openEditUser]",[2915,2947],"[open, page, dispatch, userInfo, history]",[1708,1718],"[dispatch, userInfo]",[1795,1806],"[dispatch, editingID]",[2312,2334],"[userDetails, success, dispatch]",[2536,2564],"[closeEditUser, dispatch, errorDelete, successDelete]",[1616,1626],[2327,2336],"[dispatch, newProduct.name, product]",[1932,1949],"[dispatch, openEditProduct]",[2404,2434],"[editingID, backToProductList, dispatch]",[3193,3209],"[dispatch, product.description, product.name, product.price, updatedProduct]",[3482,3510],"[backToProductList, dispatch, errorDelete, successDelete]",[1095,1123],"[userInfo, showOrderDetails, dispatch]",[2361,2380],"[userInfo, success, history, dispatch]",[2090,2100],[1889,1905],"[history, info, reservationCreated, userInfo]",[768,778],[2807,2839],[2186,2226],"[openEditProduct, empty, restaurantInfo, dispatch]",[2757,2766],"[backToProductList, dispatch, newProduct.name, product, restaurantInfo]",[3741,3771],[4211,4253],"[product, error, restaurantInfo, userInfo, history, backToProductList]",[4685,4701],[4974,5002],[1449,1498],"[userInfo, error, empty, loading, restaurantInfo, history]",[1566,1586],"[userInfo, location, history]",[1445,1494],"[loading, error, empty, restaurantInfo, userInfo, history]"]